;**************************************************************
;* This stationery serves as the framework for a              *
;* user application. For a more comprehensive program that    *
;* demonstrates the more advanced functionality of this       *
;* processor, please see the demonstration applications       *
;* located in the examples subdirectory of the                *
;* Freescale CodeWarrior for the S12Z Program directory       *
;**************************************************************

; export symbols
            XDEF asm_main
            ; we use export 'Entry' as symbol. This allows us to
            ; reference 'Entry' either in the linker .prm file
            ; or from C/C++ later on

; Include derivative-specific definitions 
		INCLUDE 'derivative.inc'  		

 ; Note: This file is recreated by the project wizard whenever the MCU is
 ;       changed and should not be edited by hand
 ;

            ; include derivative specific macros
            INCLUDE 'MC9S12ZVHL32.inc'
; Based on CPU DB MC9S12ZVHL64_144, version 3.00.000 (RegistersPrg V2.33)

; ###################################################################
;     Filename  : mc9s12zvhl32.inc
;     Processor : MC9S12ZVHL32CLQ
;     FileFormat: V2.33
;     DataSheet : Rev. 1.02 01/2014
;     Compiler  : CodeWarrior compiler
;     Date/Time : 3/12/2014, 4:52 PM
;     Abstract  :
;         This header implements the mapping of I/O devices.
;
;     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
;     All Rights Reserved.
;     
;     Redistribution and use in source and binary forms, with or without modification,
;     are permitted provided that the following conditions are met:
;     
;     o Redistributions of source code must retain the above copyright notice, this list
;       of conditions and the following disclaimer.
;     
;     o Redistributions in binary form must reproduce the above copyright notice, this
;       list of conditions and the following disclaimer in the documentation and/or
;       other materials provided with the distribution.
;     
;     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
;       contributors may be used to endorse or promote products derived from this
;       software without specific prior written permission.
;     
;     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
;     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
;     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
;     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
;     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
;     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
;     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;     
;     http: www.freescale.com
;     mail: support@freescale.com
;
;     CPU Registers Revisions:
;      - 17.10.2012, V3.00.0:
;              - Register CPMUOSC2 added
;      - 25.10.2012, V3.00.1:
;              - Updated FERSTAT, ADC0IMDRI registers
;              - Removed Xgate specific registers
;      - 04.03.2013, V3.00.2:
;              - Corected various typos
;      - 24.10.2013, V3.00.3:
;              - Updates for new silicon revision 
;              - Added MC9S12ZVHY32 
;              - PARTID: New part id value
;              - SCI: Moved bits IREN, TNP1, TNP0 to SCIACR2 register. Added bits SBR15, SBR14, SBR13 to SCIBDH register.
;
;     File-Format-Revisions:
;               - none
;
;     Not all general-purpose I/O pins are available on all packages or on all mask sets of a specific
;     derivative device. To avoid extra current drain from floating input pins, the user’s reset
;     initialization routine in the application program must either enable on-chip pull-up devices
;     or change the direction of unconnected pins to outputs so the pins do not float.
; ###################################################################

;*** Memory Map and Interrupt Vectors
;******************************************
RAMStart:           equ   $00001000
RAMEnd:             equ   $000017FF
EEPROMStart:        equ   $00100000
EEPROMEnd:          equ   $001007FF
ROMStart:           equ   $00FF8000
ROMEnd:             equ   $00FFFDFF
;
VReserved123:       equ   $00FFFE10
VReserved122:       equ   $00FFFE14
VReserved121:       equ   $00FFFE18
VReserved120:       equ   $00FFFE1C
VReserved119:       equ   $00FFFE20
VReserved118:       equ   $00FFFE24
VReserved117:       equ   $00FFFE28
VReserved116:       equ   $00FFFE2C
VReserved115:       equ   $00FFFE30
VReserved114:       equ   $00FFFE34
VReserved113:       equ   $00FFFE38
VReserved112:       equ   $00FFFE3C
VReserved111:       equ   $00FFFE40
VReserved110:       equ   $00FFFE44
VReserved109:       equ   $00FFFE48
VReserved108:       equ   $00FFFE4C
VReserved107:       equ   $00FFFE50
VReserved106:       equ   $00FFFE54
VReserved105:       equ   $00FFFE58
VReserved104:       equ   $00FFFE5C
Vssg0:              equ   $00FFFE60
Vrtc:               equ   $00FFFE64
VReserved101:       equ   $00FFFE68
VReserved100:       equ   $00FFFE6C
Vssd1:              equ   $00FFFE70
Vssd0:              equ   $00FFFE74
Vmctimovf:          equ   $00FFFE78
VReserved96:        equ   $00FFFE7C
VReserved95:        equ   $00FFFE80
Vtim1paie:          equ   $00FFFE84
Vtim1paaovf:        equ   $00FFFE88
Vtim1ovf:           equ   $00FFFE8C
Vtim1ch7:           equ   $00FFFE90
Vtim1ch6:           equ   $00FFFE94
Vtim1ch5:           equ   $00FFFE98
Vtim1ch4:           equ   $00FFFE9C
Vtim1ch3:           equ   $00FFFEA0
Vtim1ch2:           equ   $00FFFEA4
Vtim1ch1:           equ   $00FFFEA8
Vtim1ch0:           equ   $00FFFEAC
VReserved83:        equ   $00FFFEB0
Viic0:              equ   $00FFFEB4
VReserved81:        equ   $00FFFEB8
VReserved80:        equ   $00FFFEBC
VReserved79:        equ   $00FFFEC0
VReserved78:        equ   $00FFFEC4
VReserved77:        equ   $00FFFEC8
VReserved76:        equ   $00FFFECC
VReserved75:        equ   $00FFFED0
VReserved74:        equ   $00FFFED4
VReserved73:        equ   $00FFFED8
VReserved72:        equ   $00FFFEDC
VReserved71:        equ   $00FFFEE0
VReserved70:        equ   $00FFFEE4
VReserved69:        equ   $00FFFEE8
VReserved68:        equ   $00FFFEEC
VReserved67:        equ   $00FFFEF0
Vportad:            equ   $00FFFEF4
VReserved65:        equ   $00FFFEF8
Vhti:               equ   $00FFFEFC
Vapi:               equ   $00FFFF00
Vlvi:               equ   $00FFFF04
VReserved61:        equ   $00FFFF08
VReserved60:        equ   $00FFFF0C
VReserved59:        equ   $00FFFF10
VReserved58:        equ   $00FFFF14
VReserved57:        equ   $00FFFF18
VReserved56:        equ   $00FFFF1C
VReserved55:        equ   $00FFFF20
Vports:             equ   $00FFFF24
VReserved53:        equ   $00FFFF28
Vportt:             equ   $00FFFF2C
VReserved51:        equ   $00FFFF30
VReserved50:        equ   $00FFFF34
VReserved49:        equ   $00FFFF38
VReserved48:        equ   $00FFFF3C
Vbats:              equ   $00FFFF40
Vlinphy0:           equ   $00FFFF44
VReserved45:        equ   $00FFFF48
VReserved44:        equ   $00FFFF4C
Vcan0tx:            equ   $00FFFF50
Vcan0rx:            equ   $00FFFF54
Vcan0err:           equ   $00FFFF58
Vcan0wkup:          equ   $00FFFF5C
Vflash:             equ   $00FFFF60
Vflasherr:          equ   $00FFFF64
VReserved37:        equ   $00FFFF68
VReserved36:        equ   $00FFFF6C
VRAM_err:           equ   $00FFFF70
VReserved34:        equ   $00FFFF74
VReserved33:        equ   $00FFFF78
Vcpmuplllck:        equ   $00FFFF7C
Vcpmuosc:           equ   $00FFFF80
Vadc0conv_compl:    equ   $00FFFF84
Vadc0conv_seq_abrt: equ   $00FFFF88
Vadc0err:           equ   $00FFFF8C
VReserved27:        equ   $00FFFF90
VReserved26:        equ   $00FFFF94
Vsci1:              equ   $00FFFF98
Vsci0:              equ   $00FFFF9C
Vspi0:              equ   $00FFFFA0
Vtim0paie:          equ   $00FFFFA4
Vtim0paaovf:        equ   $00FFFFA8
Vtim0ovf:           equ   $00FFFFAC
Vtim0ch7:           equ   $00FFFFB0
Vtim0ch6:           equ   $00FFFFB4
Vtim0ch5:           equ   $00FFFFB8
Vtim0ch4:           equ   $00FFFFBC
Vtim0ch3:           equ   $00FFFFC0
Vtim0ch2:           equ   $00FFFFC4
Vtim0ch1:           equ   $00FFFFC8
Vtim0ch0:           equ   $00FFFFCC
Vrti:               equ   $00FFFFD0
Virq:               equ   $00FFFFD4
Vxirq:              equ   $00FFFFD8
Vsi:                equ   $00FFFFDC
VReserved7:         equ   $00FFFFE0
VReserved6:         equ   $00FFFFE4
Vme:                equ   $00FFFFE8
Vsys:               equ   $00FFFFEC
Vswi:               equ   $00FFFFF0
Vtrap:              equ   $00FFFFF4
Vspare:             equ   $00FFFFF8
Vreset:             equ   $00FFFFFC
;


;*** PARTID - Part ID Register; 0x00000000 ***
PARTID:             equ    $00000000                                ;*** PARTID - Part ID Register; 0x00000000 ***


;*** PARTID0 - Part ID Register 0; 0x00000000 ***
PARTID0:            equ    $00000000                                ;*** PARTID0 - Part ID Register 0; 0x00000000 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PARTID0_ID0:        equ    0                                         ; Part ID 0
; bit position masks
mPARTID0_ID0:       equ    %11111111


;*** PARTID1 - Part ID Register 1; 0x00000001 ***
PARTID1:            equ    $00000001                                ;*** PARTID1 - Part ID Register 1; 0x00000001 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PARTID1_ID1:        equ    0                                         ; Part ID 1
; bit position masks
mPARTID1_ID1:       equ    %11111111


;*** PARTID2 - Part ID Register 2; 0x00000002 ***
PARTID2:            equ    $00000002                                ;*** PARTID2 - Part ID Register 2; 0x00000002 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PARTID2_ID2:        equ    0                                         ; Part ID 2
; bit position masks
mPARTID2_ID2:       equ    %11111111


;*** PARTID3 - Part ID Register 3; 0x00000003 ***
PARTID3:            equ    $00000003                                ;*** PARTID3 - Part ID Register 3; 0x00000003 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PARTID3_ID3:        equ    0                                         ; Part ID 3
; bit position masks
mPARTID3_ID3:       equ    %11111111


;*** IVBR - Interrupt Vector Base Register; 0x00000010 ***
IVBR:               equ    $00000010                                ;*** IVBR - Interrupt Vector Base Register; 0x00000010 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IVBR_IVB_ADDR:      equ    1                                         ; Interrupt Vector Base Address Bits
; bit position masks
mIVBR_IVB_ADDR:     equ    %1111111111111110


;*** INT_CFADDR - Interrupt Request Configuration Address Register; 0x00000017 ***
INT_CFADDR:         equ    $00000017                                ;*** INT_CFADDR - Interrupt Request Configuration Address Register; 0x00000017 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFADDR_INT_CFADDR: equ    3                                      ; Interrupt Request Configuration Data Register Select Bits
; bit position masks
mINT_CFADDR_INT_CFADDR: equ    %01111000


;*** INT_CFDATA0 - Interrupt Request Configuration Data Register 0; 0x00000018 ***
INT_CFDATA0:        equ    $00000018                                ;*** INT_CFDATA0 - Interrupt Request Configuration Data Register 0; 0x00000018 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA0_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA0_PRIOLVL: equ    %00000111


;*** INT_CFDATA1 - Interrupt Request Configuration Data Register 1; 0x00000019 ***
INT_CFDATA1:        equ    $00000019                                ;*** INT_CFDATA1 - Interrupt Request Configuration Data Register 1; 0x00000019 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA1_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA1_PRIOLVL: equ    %00000111


;*** INT_CFDATA2 - Interrupt Request Configuration Data Register 2; 0x0000001A ***
INT_CFDATA2:        equ    $0000001A                                ;*** INT_CFDATA2 - Interrupt Request Configuration Data Register 2; 0x0000001A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA2_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA2_PRIOLVL: equ    %00000111


;*** INT_CFDATA3 - Interrupt Request Configuration Data Register 3; 0x0000001B ***
INT_CFDATA3:        equ    $0000001B                                ;*** INT_CFDATA3 - Interrupt Request Configuration Data Register 3; 0x0000001B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA3_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA3_PRIOLVL: equ    %00000111


;*** INT_CFDATA4 - Interrupt Request Configuration Data Register 4; 0x0000001C ***
INT_CFDATA4:        equ    $0000001C                                ;*** INT_CFDATA4 - Interrupt Request Configuration Data Register 4; 0x0000001C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA4_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA4_PRIOLVL: equ    %00000111


;*** INT_CFDATA5 - Interrupt Request Configuration Data Register 5; 0x0000001D ***
INT_CFDATA5:        equ    $0000001D                                ;*** INT_CFDATA5 - Interrupt Request Configuration Data Register 5; 0x0000001D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA5_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA5_PRIOLVL: equ    %00000111


;*** INT_CFDATA6 - Interrupt Request Configuration Data Register 6; 0x0000001E ***
INT_CFDATA6:        equ    $0000001E                                ;*** INT_CFDATA6 - Interrupt Request Configuration Data Register 6; 0x0000001E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA6_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA6_PRIOLVL: equ    %00000111


;*** INT_CFDATA7 - Interrupt Request Configuration Data Register 7; 0x0000001F ***
INT_CFDATA7:        equ    $0000001F                                ;*** INT_CFDATA7 - Interrupt Request Configuration Data Register 7; 0x0000001F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
INT_CFDATA7_PRIOLVL: equ    0                                        ; Interrupt Request Priority Level Bits
; bit position masks
mINT_CFDATA7_PRIOLVL: equ    %00000111


;*** MODE - Mode Register; 0x00000070 ***
MODE:               equ    $00000070                                ;*** MODE - Mode Register; 0x00000070 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MODE_MODC:          equ    7                                         ; Mode Select Bit
; bit position masks
mMODE_MODC:         equ    %10000000


;*** MMCEC - Error code register; 0x00000080 ***
MMCEC:              equ    $00000080                                ;*** MMCEC - Error code register; 0x00000080 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCEC_ERR:          equ    0                                         ; Error Type Field
MMCEC_ACC:          equ    4                                         ; Access Type Field
MMCEC_TGT:          equ    8                                         ; Target Field
MMCEC_ITR:          equ    12                                        ; Initiator Field
; bit position masks
mMMCEC_ERR:         equ    %00001111
mMMCEC_ACC:         equ    %11110000
mMMCEC_TGT:         equ    %111100000000
mMMCEC_ITR:         equ    %1111000000000000


;*** MMCECH - Error code register high; 0x00000080 ***
MMCECH:             equ    $00000080                                ;*** MMCECH - Error code register high; 0x00000080 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCECH_TGT:         equ    0                                         ; Target Field
MMCECH_ITR:         equ    4                                         ; Initiator Field
; bit position masks
mMMCECH_TGT:        equ    %00001111
mMMCECH_ITR:        equ    %11110000


;*** MMCECL - Error code register low; 0x00000081 ***
MMCECL:             equ    $00000081                                ;*** MMCECL - Error code register low; 0x00000081 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCECL_ERR:         equ    0                                         ; Error Type Field
MMCECL_ACC:         equ    4                                         ; Access Type Field
; bit position masks
mMMCECL_ERR:        equ    %00001111
mMMCECL_ACC:        equ    %11110000


;*** MMCCCR - Captured S12ZCPU Condition Code Register Low; 0x00000082 ***
MMCCCR:             equ    $00000082                                ;*** MMCCCR - Captured S12ZCPU Condition Code Register Low; 0x00000082 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCCCR_CPUI:        equ    4                                         ; S12ZCPU I-Interrupt Mask
MMCCCR_CPUX:        equ    6                                         ; S12ZCPU X-Interrupt Mask
MMCCCR_CPUU:        equ    15                                        ; S12ZCPU User State Flag
; bit position masks
mMMCCCR_CPUI:       equ    %00010000
mMMCCCR_CPUX:       equ    %01000000
mMMCCCR_CPUU:       equ    %1000000000000000


;*** MMCCCRH - Captured S12ZCPU Condition Code Register High; 0x00000082 ***
MMCCCRH:            equ    $00000082                                ;*** MMCCCRH - Captured S12ZCPU Condition Code Register High; 0x00000082 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCCCRH_CPUU:       equ    7                                         ; S12ZCPU User State Flag
; bit position masks
mMMCCCRH_CPUU:      equ    %10000000


;*** MMCCCRL - Captured S12ZCPU Condition Code Register Low; 0x00000083 ***
MMCCCRL:            equ    $00000083                                ;*** MMCCCRL - Captured S12ZCPU Condition Code Register Low; 0x00000083 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCCCRL_CPUI:       equ    4                                         ; S12ZCPU I-Interrupt Mask
MMCCCRL_CPUX:       equ    6                                         ; S12ZCPU X-Interrupt Mask
; bit position masks
mMMCCCRL_CPUI:      equ    %00010000
mMMCCCRL_CPUX:      equ    %01000000


;*** MMCPCH - Captured S12ZCPU Program Counter High; 0x00000085 ***
MMCPCH:             equ    $00000085                                ;*** MMCPCH - Captured S12ZCPU Program Counter High; 0x00000085 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCPCH_CPUPC:       equ    0                                         ; S12ZCPU Program Counter Value
; bit position masks
mMMCPCH_CPUPC:      equ    %11111111


;*** MMCPCM - Captured S12ZCPU Program Counter Middle; 0x00000086 ***
MMCPCM:             equ    $00000086                                ;*** MMCPCM - Captured S12ZCPU Program Counter Middle; 0x00000086 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCPCM_CPUPC:       equ    0                                         ; S12ZCPU Program Counter Value
; bit position masks
mMMCPCM_CPUPC:      equ    %11111111


;*** MMCPCL - Captured S12ZCPU Program Counter Low; 0x00000087 ***
MMCPCL:             equ    $00000087                                ;*** MMCPCL - Captured S12ZCPU Program Counter Low; 0x00000087 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MMCPCL_CPUPC:       equ    0                                         ; S12ZCPU Program Counter Value
; bit position masks
mMMCPCL_CPUPC:      equ    %11111111


;*** DBGC1 - Debug Control Register 1; 0x00000100 ***
DBGC1:              equ    $00000100                                ;*** DBGC1 - Debug Control Register 1; 0x00000100 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGC1_EEVE:         equ    0                                         ; External Event Enable Bits
DBGC1_BRKCPU:       equ    3                                         ; CPU Breakpoint Enable
DBGC1_BDMBP:        equ    4                                         ; Background Debug Mode Enable
DBGC1_TRIG:         equ    6                                         ; Immediate Trigger Request Bit
DBGC1_ARM:          equ    7                                         ; Arm Bit
; bit position masks
mDBGC1_EEVE:        equ    %00000011
mDBGC1_BRKCPU:      equ    %00001000
mDBGC1_BDMBP:       equ    %00010000
mDBGC1_TRIG:        equ    %01000000
mDBGC1_ARM:         equ    %10000000


;*** DBGC2 - Debug Control Register 2; 0x00000101 ***
DBGC2:              equ    $00000101                                ;*** DBGC2 - Debug Control Register 2; 0x00000101 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGC2_ABCM:         equ    0                                         ; A and B Comparator Match Control
DBGC2_CDCM:         equ    2                                         ; C and D Comparator Match Control
; bit position masks
mDBGC2_ABCM:        equ    %00000011
mDBGC2_CDCM:        equ    %00001100


;*** DBGTCRH - Debug Trace Control Register High; 0x00000102 ***
DBGTCRH:            equ    $00000102                                ;*** DBGTCRH - Debug Trace Control Register High; 0x00000102 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGTCRH_TALIGN:     equ    0                                         ; Trigger Align Bits
DBGTCRH_TRCMOD:     equ    2                                         ; Trace Mode Bits
DBGTCRH_TRANGE:     equ    4                                         ; Trace Range Bits
DBGTCRH_TSOURCE:    equ    6                                         ; Trace Source Control Bits
; bit position masks
mDBGTCRH_TALIGN:    equ    %00000011
mDBGTCRH_TRCMOD:    equ    %00001100
mDBGTCRH_TRANGE:    equ    %00110000
mDBGTCRH_TSOURCE:   equ    %01000000


;*** DBGTCRL - Debug Trace Control Register Low; 0x00000103 ***
DBGTCRL:            equ    $00000103                                ;*** DBGTCRL - Debug Trace Control Register Low; 0x00000103 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGTCRL_STAMP:      equ    0                                         ; Timestamp Enable
DBGTCRL_PROFILE:    equ    1                                         ; Profile Enable
DBGTCRL_PDOE:       equ    2                                         ; Profile Data Out Enable
DBGTCRL_DSTAMP:     equ    3                                         ; Comparator D Timestamp Enable
; bit position masks
mDBGTCRL_STAMP:     equ    %00000001
mDBGTCRL_PROFILE:   equ    %00000010
mDBGTCRL_PDOE:      equ    %00000100
mDBGTCRL_DSTAMP:    equ    %00001000


;*** DBGTB - Debug Trace Buffer Register; 0x00000104 ***
DBGTB:              equ    $00000104                                ;*** DBGTB - Debug Trace Buffer Register; 0x00000104 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGTB_BIT0:         equ    0                                         ; Trace Buffer Data Bits
DBGTB_BIT1:         equ    1                                         ; Trace Buffer Data Bit 1
DBGTB_BIT2:         equ    2                                         ; Trace Buffer Data Bit 2
DBGTB_BIT3:         equ    3                                         ; Trace Buffer Data Bit 3
DBGTB_BIT4:         equ    4                                         ; Trace Buffer Data Bit 4
DBGTB_BIT5:         equ    5                                         ; Trace Buffer Data Bit 5
DBGTB_BIT6:         equ    6                                         ; Trace Buffer Data Bit 6
DBGTB_BIT7:         equ    7                                         ; Trace Buffer Data Bit 7
DBGTB_BIT8:         equ    8                                         ; Trace Buffer Data Bit 8
DBGTB_BIT9:         equ    9                                         ; Trace Buffer Data Bit 9
DBGTB_BIT10:        equ    10                                        ; Trace Buffer Data Bit 10
DBGTB_BIT11:        equ    11                                        ; Trace Buffer Data Bit 11
DBGTB_BIT12:        equ    12                                        ; Trace Buffer Data Bit 12
DBGTB_BIT13:        equ    13                                        ; Trace Buffer Data Bit 13
DBGTB_BIT14:        equ    14                                        ; Trace Buffer Data Bit 14
DBGTB_BIT15:        equ    15                                        ; Trace Buffer Data Bit 15
; bit position masks
mDBGTB_BIT0:        equ    %00000001
mDBGTB_BIT1:        equ    %00000010
mDBGTB_BIT2:        equ    %00000100
mDBGTB_BIT3:        equ    %00001000
mDBGTB_BIT4:        equ    %00010000
mDBGTB_BIT5:        equ    %00100000
mDBGTB_BIT6:        equ    %01000000
mDBGTB_BIT7:        equ    %10000000
mDBGTB_BIT8:        equ    %100000000
mDBGTB_BIT9:        equ    %1000000000
mDBGTB_BIT10:       equ    %10000000000
mDBGTB_BIT11:       equ    %100000000000
mDBGTB_BIT12:       equ    %1000000000000
mDBGTB_BIT13:       equ    %10000000000000
mDBGTB_BIT14:       equ    %100000000000000
mDBGTB_BIT15:       equ    %1000000000000000


;*** DBGCNT - Debug Count Register; 0x00000106 ***
DBGCNT:             equ    $00000106                                ;*** DBGCNT - Debug Count Register; 0x00000106 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCNT_CNT:         equ    0                                         ; Count Value
; bit position masks
mDBGCNT_CNT:        equ    %01111111


;*** DBGSCR1 - Debug State Control Register 1; 0x00000107 ***
DBGSCR1:            equ    $00000107                                ;*** DBGSCR1 - Debug State Control Register 1; 0x00000107 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGSCR1_C0SC:       equ    0                                         ; Channel 0 State Control
DBGSCR1_C1SC:       equ    2                                         ; Channel 1 State Control
DBGSCR1_C2SC:       equ    4                                         ; Channel 2 State Control
DBGSCR1_C3SC:       equ    6                                         ; Channel 3 State Control
; bit position masks
mDBGSCR1_C0SC:      equ    %00000011
mDBGSCR1_C1SC:      equ    %00001100
mDBGSCR1_C2SC:      equ    %00110000
mDBGSCR1_C3SC:      equ    %11000000


;*** DBGSCR2 - Debug State Control Register 2; 0x00000108 ***
DBGSCR2:            equ    $00000108                                ;*** DBGSCR2 - Debug State Control Register 2; 0x00000108 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGSCR2_C0SC:       equ    0                                         ; Channel 0 State Control
DBGSCR2_C1SC:       equ    2                                         ; Channel 1 State Control
DBGSCR2_C2SC:       equ    4                                         ; Channel 2 State Control
DBGSCR2_C3SC:       equ    6                                         ; Channel 3 State Control
; bit position masks
mDBGSCR2_C0SC:      equ    %00000011
mDBGSCR2_C1SC:      equ    %00001100
mDBGSCR2_C2SC:      equ    %00110000
mDBGSCR2_C3SC:      equ    %11000000


;*** DBGSCR3 - Debug State Control Register 3; 0x00000109 ***
DBGSCR3:            equ    $00000109                                ;*** DBGSCR3 - Debug State Control Register 3; 0x00000109 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGSCR3_C0SC:       equ    0                                         ; Channel 0 State Control
DBGSCR3_C1SC:       equ    2                                         ; Channel 1 State Control
DBGSCR3_C2SC:       equ    4                                         ; Channel 2 State Control
DBGSCR3_C3SC:       equ    6                                         ; Channel 3 State Control
; bit position masks
mDBGSCR3_C0SC:      equ    %00000011
mDBGSCR3_C1SC:      equ    %00001100
mDBGSCR3_C2SC:      equ    %00110000
mDBGSCR3_C3SC:      equ    %11000000


;*** DBGEFR - Debug Event Flag Register; 0x0000010A ***
DBGEFR:             equ    $0000010A                                ;*** DBGEFR - Debug Event Flag Register; 0x0000010A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGEFR_ME0:         equ    0                                         ; Match Event 0
DBGEFR_ME1:         equ    1                                         ; Match Event 1
DBGEFR_ME2:         equ    2                                         ; Match Event 2
DBGEFR_ME3:         equ    3                                         ; Match Event 3
DBGEFR_EEVF:        equ    4                                         ; External Event Flag
DBGEFR_TRIGF:       equ    6                                         ; TRIG Flag
DBGEFR_PTBOVF:      equ    7                                         ; Profiling Trace Buffer Overflow Flag
; bit position masks
mDBGEFR_ME0:        equ    %00000001
mDBGEFR_ME1:        equ    %00000010
mDBGEFR_ME2:        equ    %00000100
mDBGEFR_ME3:        equ    %00001000
mDBGEFR_EEVF:       equ    %00010000
mDBGEFR_TRIGF:      equ    %01000000
mDBGEFR_PTBOVF:     equ    %10000000


;*** DBGSR - Debug Status Register; 0x0000010B ***
DBGSR:              equ    $0000010B                                ;*** DBGSR - Debug Status Register; 0x0000010B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGSR_SSF0:         equ    0                                         ; State Sequencer Flag Bits
DBGSR_SSF1:         equ    1                                         ; State Sequencer Flag Bit 1
DBGSR_SSF2:         equ    2                                         ; State Sequencer Flag Bit 2
DBGSR_PTACT:        equ    4                                         ; Profiling Transmission Active
DBGSR_TBF:          equ    7                                         ; Trace Buffer Full
; bit position masks
mDBGSR_SSF0:        equ    %00000001
mDBGSR_SSF1:        equ    %00000010
mDBGSR_SSF2:        equ    %00000100
mDBGSR_PTACT:       equ    %00010000
mDBGSR_TBF:         equ    %10000000


;*** DBGACTL - Debug Comparator A Control Register; 0x00000110 ***
DBGACTL:            equ    $00000110                                ;*** DBGACTL - Debug Comparator A Control Register; 0x00000110 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGACTL_COMPE:      equ    0                                         ; Determines if comparator is enabled
DBGACTL_RWE:        equ    2                                         ; Read/Write Enable Bit
DBGACTL_RW:         equ    3                                         ; Read/Write Comparator Value Bit
DBGACTL_INST:       equ    5                                         ; Instruction Select
DBGACTL_NDB:        equ    6                                         ; Not Data Bus
; bit position masks
mDBGACTL_COMPE:     equ    %00000001
mDBGACTL_RWE:       equ    %00000100
mDBGACTL_RW:        equ    %00001000
mDBGACTL_INST:      equ    %00100000
mDBGACTL_NDB:       equ    %01000000


;*** DBGAAH - Debug Comparator A Address Register High; 0x00000115 ***
DBGAAH:             equ    $00000115                                ;*** DBGAAH - Debug Comparator A Address Register High; 0x00000115 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAAH_DBGAA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGAAH_DBGAA:      equ    %11111111


;*** DBGAAM - Debug Comparator A Address Register Middle; 0x00000116 ***
DBGAAM:             equ    $00000116                                ;*** DBGAAM - Debug Comparator A Address Register Middle; 0x00000116 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAAM_DBGAA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGAAM_DBGAA:      equ    %11111111


;*** DBGAAL - Debug Comparator A Address Register Low; 0x00000117 ***
DBGAAL:             equ    $00000117                                ;*** DBGAAL - Debug Comparator A Address Register Low; 0x00000117 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAAL_DBGAA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGAAL_DBGAA:      equ    %11111111


;*** DBGAD0 - Debug Comparator A Data Register 0; 0x00000118 ***
DBGAD0:             equ    $00000118                                ;*** DBGAD0 - Debug Comparator A Data Register 0; 0x00000118 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAD0_BIT24:       equ    0                                         ; Comparator Data Bit 24
DBGAD0_BIT25:       equ    1                                         ; Comparator Data Bit 25
DBGAD0_BIT26:       equ    2                                         ; Comparator Data Bit 26
DBGAD0_BIT27:       equ    3                                         ; Comparator Data Bit 27
DBGAD0_BIT28:       equ    4                                         ; Comparator Data Bit 28
DBGAD0_BIT29:       equ    5                                         ; Comparator Data Bit 29
DBGAD0_BIT30:       equ    6                                         ; Comparator Data Bit 30
DBGAD0_BIT31:       equ    7                                         ; Comparator Data Bit 31
; bit position masks
mDBGAD0_BIT24:      equ    %00000001
mDBGAD0_BIT25:      equ    %00000010
mDBGAD0_BIT26:      equ    %00000100
mDBGAD0_BIT27:      equ    %00001000
mDBGAD0_BIT28:      equ    %00010000
mDBGAD0_BIT29:      equ    %00100000
mDBGAD0_BIT30:      equ    %01000000
mDBGAD0_BIT31:      equ    %10000000


;*** DBGAD1 - Debug Comparator A Data Register 1; 0x00000119 ***
DBGAD1:             equ    $00000119                                ;*** DBGAD1 - Debug Comparator A Data Register 1; 0x00000119 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAD1_BIT16:       equ    0                                         ; Comparator Data Bit 16
DBGAD1_BIT17:       equ    1                                         ; Comparator Data Bit 17
DBGAD1_BIT18:       equ    2                                         ; Comparator Data Bit 18
DBGAD1_BIT19:       equ    3                                         ; Comparator Data Bit 19
DBGAD1_BIT20:       equ    4                                         ; Comparator Data Bit 20
DBGAD1_BIT21:       equ    5                                         ; Comparator Data Bit 21
DBGAD1_BIT22:       equ    6                                         ; Comparator Data Bit 22
DBGAD1_BIT23:       equ    7                                         ; Comparator Data Bit 23
; bit position masks
mDBGAD1_BIT16:      equ    %00000001
mDBGAD1_BIT17:      equ    %00000010
mDBGAD1_BIT18:      equ    %00000100
mDBGAD1_BIT19:      equ    %00001000
mDBGAD1_BIT20:      equ    %00010000
mDBGAD1_BIT21:      equ    %00100000
mDBGAD1_BIT22:      equ    %01000000
mDBGAD1_BIT23:      equ    %10000000


;*** DBGAD2 - Debug Comparator A Data Register 2; 0x0000011A ***
DBGAD2:             equ    $0000011A                                ;*** DBGAD2 - Debug Comparator A Data Register 2; 0x0000011A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAD2_BIT8:        equ    0                                         ; Comparator Data Bit 8
DBGAD2_BIT9:        equ    1                                         ; Comparator Data Bit 9
DBGAD2_BIT10:       equ    2                                         ; Comparator Data Bit 10
DBGAD2_BIT11:       equ    3                                         ; Comparator Data Bit 11
DBGAD2_BIT12:       equ    4                                         ; Comparator Data Bit 12
DBGAD2_BIT13:       equ    5                                         ; Comparator Data Bit 13
DBGAD2_BIT14:       equ    6                                         ; Comparator Data Bit 14
DBGAD2_BIT15:       equ    7                                         ; Comparator Data Bit 15
; bit position masks
mDBGAD2_BIT8:       equ    %00000001
mDBGAD2_BIT9:       equ    %00000010
mDBGAD2_BIT10:      equ    %00000100
mDBGAD2_BIT11:      equ    %00001000
mDBGAD2_BIT12:      equ    %00010000
mDBGAD2_BIT13:      equ    %00100000
mDBGAD2_BIT14:      equ    %01000000
mDBGAD2_BIT15:      equ    %10000000


;*** DBGAD3 - Debug Comparator A Data Register 3; 0x0000011B ***
DBGAD3:             equ    $0000011B                                ;*** DBGAD3 - Debug Comparator A Data Register 3; 0x0000011B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGAD3_BIT0:        equ    0                                         ; Comparator Data Bit 0
DBGAD3_BIT1:        equ    1                                         ; Comparator Data Bit 1
DBGAD3_BIT2:        equ    2                                         ; Comparator Data Bit 2
DBGAD3_BIT3:        equ    3                                         ; Comparator Data Bit 3
DBGAD3_BIT4:        equ    4                                         ; Comparator Data Bit 4
DBGAD3_BIT5:        equ    5                                         ; Comparator Data Bit 5
DBGAD3_BIT6:        equ    6                                         ; Comparator Data Bit 6
DBGAD3_BIT7:        equ    7                                         ; Comparator Data Bit 7
; bit position masks
mDBGAD3_BIT0:       equ    %00000001
mDBGAD3_BIT1:       equ    %00000010
mDBGAD3_BIT2:       equ    %00000100
mDBGAD3_BIT3:       equ    %00001000
mDBGAD3_BIT4:       equ    %00010000
mDBGAD3_BIT5:       equ    %00100000
mDBGAD3_BIT6:       equ    %01000000
mDBGAD3_BIT7:       equ    %10000000


;*** DBGADM0 - Debug Comparator A Data Mask Register 0; 0x0000011C ***
DBGADM0:            equ    $0000011C                                ;*** DBGADM0 - Debug Comparator A Data Mask Register 0; 0x0000011C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGADM0_BIT24:      equ    0                                         ; Comparator Data Mask Bit 24
DBGADM0_BIT25:      equ    1                                         ; Comparator Data Mask Bit 25
DBGADM0_BIT26:      equ    2                                         ; Comparator Data Mask Bit 26
DBGADM0_BIT27:      equ    3                                         ; Comparator Data Mask Bit 27
DBGADM0_BIT28:      equ    4                                         ; Comparator Data Mask Bit 28
DBGADM0_BIT29:      equ    5                                         ; Comparator Data Mask Bit 29
DBGADM0_BIT30:      equ    6                                         ; Comparator Data Mask Bit 30
DBGADM0_BIT31:      equ    7                                         ; Comparator Data Mask Bit 31
; bit position masks
mDBGADM0_BIT24:     equ    %00000001
mDBGADM0_BIT25:     equ    %00000010
mDBGADM0_BIT26:     equ    %00000100
mDBGADM0_BIT27:     equ    %00001000
mDBGADM0_BIT28:     equ    %00010000
mDBGADM0_BIT29:     equ    %00100000
mDBGADM0_BIT30:     equ    %01000000
mDBGADM0_BIT31:     equ    %10000000


;*** DBGADM1 - Debug Comparator A Data Mask Register 1; 0x0000011D ***
DBGADM1:            equ    $0000011D                                ;*** DBGADM1 - Debug Comparator A Data Mask Register 1; 0x0000011D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGADM1_BIT16:      equ    0                                         ; Comparator Data Mask Bit 16
DBGADM1_BIT17:      equ    1                                         ; Comparator Data Mask Bit 17
DBGADM1_BIT18:      equ    2                                         ; Comparator Data Mask Bit 18
DBGADM1_BIT19:      equ    3                                         ; Comparator Data Mask Bit 19
DBGADM1_BIT20:      equ    4                                         ; Comparator Data Mask Bit 20
DBGADM1_BIT21:      equ    5                                         ; Comparator Data Mask Bit 21
DBGADM1_BIT22:      equ    6                                         ; Comparator Data Mask Bit 22
DBGADM1_BIT23:      equ    7                                         ; Comparator Data Mask Bit 23
; bit position masks
mDBGADM1_BIT16:     equ    %00000001
mDBGADM1_BIT17:     equ    %00000010
mDBGADM1_BIT18:     equ    %00000100
mDBGADM1_BIT19:     equ    %00001000
mDBGADM1_BIT20:     equ    %00010000
mDBGADM1_BIT21:     equ    %00100000
mDBGADM1_BIT22:     equ    %01000000
mDBGADM1_BIT23:     equ    %10000000


;*** DBGADM2 - Debug Comparator A Data Mask Register 2; 0x0000011E ***
DBGADM2:            equ    $0000011E                                ;*** DBGADM2 - Debug Comparator A Data Mask Register 2; 0x0000011E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGADM2_BIT8:       equ    0                                         ; Comparator Data Mask Bit 8
DBGADM2_BIT9:       equ    1                                         ; Comparator Data Mask Bit 9
DBGADM2_BIT10:      equ    2                                         ; Comparator Data Mask Bit 10
DBGADM2_BIT11:      equ    3                                         ; Comparator Data Mask Bit 11
DBGADM2_BIT12:      equ    4                                         ; Comparator Data Mask Bit 12
DBGADM2_BIT13:      equ    5                                         ; Comparator Data Mask Bit 13
DBGADM2_BIT14:      equ    6                                         ; Comparator Data Mask Bit 14
DBGADM2_BIT15:      equ    7                                         ; Comparator Data Mask Bit 15
; bit position masks
mDBGADM2_BIT8:      equ    %00000001
mDBGADM2_BIT9:      equ    %00000010
mDBGADM2_BIT10:     equ    %00000100
mDBGADM2_BIT11:     equ    %00001000
mDBGADM2_BIT12:     equ    %00010000
mDBGADM2_BIT13:     equ    %00100000
mDBGADM2_BIT14:     equ    %01000000
mDBGADM2_BIT15:     equ    %10000000


;*** DBGADM3 - Debug Comparator A Data Mask Register 3; 0x0000011F ***
DBGADM3:            equ    $0000011F                                ;*** DBGADM3 - Debug Comparator A Data Mask Register 3; 0x0000011F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGADM3_BIT0:       equ    0                                         ; Comparator Data Mask Bit 0
DBGADM3_BIT1:       equ    1                                         ; Comparator Data Mask Bit 1
DBGADM3_BIT2:       equ    2                                         ; Comparator Data Mask Bit 2
DBGADM3_BIT3:       equ    3                                         ; Comparator Data Mask Bit 3
DBGADM3_BIT4:       equ    4                                         ; Comparator Data Mask Bit 4
DBGADM3_BIT5:       equ    5                                         ; Comparator Data Mask Bit 5
DBGADM3_BIT6:       equ    6                                         ; Comparator Data Mask Bit 6
DBGADM3_BIT7:       equ    7                                         ; Comparator Data Mask Bit 7
; bit position masks
mDBGADM3_BIT0:      equ    %00000001
mDBGADM3_BIT1:      equ    %00000010
mDBGADM3_BIT2:      equ    %00000100
mDBGADM3_BIT3:      equ    %00001000
mDBGADM3_BIT4:      equ    %00010000
mDBGADM3_BIT5:      equ    %00100000
mDBGADM3_BIT6:      equ    %01000000
mDBGADM3_BIT7:      equ    %10000000


;*** DBGBCTL - Debug Comparator B Control Register; 0x00000120 ***
DBGBCTL:            equ    $00000120                                ;*** DBGBCTL - Debug Comparator B Control Register; 0x00000120 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGBCTL_COMPE:      equ    0                                         ; Determines if comparator is enabled
DBGBCTL_RWE:        equ    2                                         ; Read/Write Enable Bit
DBGBCTL_RW:         equ    3                                         ; Read/Write Comparator Value Bit
DBGBCTL_INST:       equ    5                                         ; Instruction Select
; bit position masks
mDBGBCTL_COMPE:     equ    %00000001
mDBGBCTL_RWE:       equ    %00000100
mDBGBCTL_RW:        equ    %00001000
mDBGBCTL_INST:      equ    %00100000


;*** DBGBAH - Debug Comparator B Address Register High; 0x00000125 ***
DBGBAH:             equ    $00000125                                ;*** DBGBAH - Debug Comparator B Address Register High; 0x00000125 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGBAH_DBGBA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGBAH_DBGBA:      equ    %11111111


;*** DBGBAM - Debug Comparator B Address Register Middle; 0x00000126 ***
DBGBAM:             equ    $00000126                                ;*** DBGBAM - Debug Comparator B Address Register Middle; 0x00000126 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGBAM_DBGBA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGBAM_DBGBA:      equ    %11111111


;*** DBGBAL - Debug Comparator B Address Register Low; 0x00000127 ***
DBGBAL:             equ    $00000127                                ;*** DBGBAL - Debug Comparator B Address Register Low; 0x00000127 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGBAL_DBGBA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGBAL_DBGBA:      equ    %11111111


;*** DBGCCTL - Debug Comparator C Control Register; 0x00000130 ***
DBGCCTL:            equ    $00000130                                ;*** DBGCCTL - Debug Comparator C Control Register; 0x00000130 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCCTL_COMPE:      equ    0                                         ; Determines if comparator is enabled
DBGCCTL_RWE:        equ    2                                         ; Read/Write Enable Bit
DBGCCTL_RW:         equ    3                                         ; Read/Write Comparator Value Bit
DBGCCTL_INST:       equ    5                                         ; Instruction Select
DBGCCTL_NDB:        equ    6                                         ; Not Data Bus
; bit position masks
mDBGCCTL_COMPE:     equ    %00000001
mDBGCCTL_RWE:       equ    %00000100
mDBGCCTL_RW:        equ    %00001000
mDBGCCTL_INST:      equ    %00100000
mDBGCCTL_NDB:       equ    %01000000


;*** DBGCAH - Debug Comparator C Address Register High; 0x00000135 ***
DBGCAH:             equ    $00000135                                ;*** DBGCAH - Debug Comparator C Address Register High; 0x00000135 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCAH_DBGCA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGCAH_DBGCA:      equ    %11111111


;*** DBGCAM - Debug Comparator C Address Register Middle; 0x00000136 ***
DBGCAM:             equ    $00000136                                ;*** DBGCAM - Debug Comparator C Address Register Middle; 0x00000136 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCAM_DBGCA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGCAM_DBGCA:      equ    %11111111


;*** DBGCAL - Debug Comparator C Address Register Low; 0x00000137 ***
DBGCAL:             equ    $00000137                                ;*** DBGCAL - Debug Comparator C Address Register Low; 0x00000137 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCAL_DBGCA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGCAL_DBGCA:      equ    %11111111


;*** DBGCD0 - Debug Comparator C Data Register 0; 0x00000138 ***
DBGCD0:             equ    $00000138                                ;*** DBGCD0 - Debug Comparator C Data Register 0; 0x00000138 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCD0_BIT24:       equ    0                                         ; Comparator Data Bit 24
DBGCD0_BIT25:       equ    1                                         ; Comparator Data Bit 25
DBGCD0_BIT26:       equ    2                                         ; Comparator Data Bit 26
DBGCD0_BIT27:       equ    3                                         ; Comparator Data Bit 27
DBGCD0_BIT28:       equ    4                                         ; Comparator Data Bit 28
DBGCD0_BIT29:       equ    5                                         ; Comparator Data Bit 29
DBGCD0_BIT30:       equ    6                                         ; Comparator Data Bit 30
DBGCD0_BIT31:       equ    7                                         ; Comparator Data Bit 31
; bit position masks
mDBGCD0_BIT24:      equ    %00000001
mDBGCD0_BIT25:      equ    %00000010
mDBGCD0_BIT26:      equ    %00000100
mDBGCD0_BIT27:      equ    %00001000
mDBGCD0_BIT28:      equ    %00010000
mDBGCD0_BIT29:      equ    %00100000
mDBGCD0_BIT30:      equ    %01000000
mDBGCD0_BIT31:      equ    %10000000


;*** DBGCD1 - Debug Comparator C Data Register 1; 0x00000139 ***
DBGCD1:             equ    $00000139                                ;*** DBGCD1 - Debug Comparator C Data Register 1; 0x00000139 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCD1_BIT16:       equ    0                                         ; Comparator Data Bit 16
DBGCD1_BIT17:       equ    1                                         ; Comparator Data Bit 17
DBGCD1_BIT18:       equ    2                                         ; Comparator Data Bit 18
DBGCD1_BIT19:       equ    3                                         ; Comparator Data Bit 19
DBGCD1_BIT20:       equ    4                                         ; Comparator Data Bit 20
DBGCD1_BIT21:       equ    5                                         ; Comparator Data Bit 21
DBGCD1_BIT22:       equ    6                                         ; Comparator Data Bit 22
DBGCD1_BIT23:       equ    7                                         ; Comparator Data Bit 23
; bit position masks
mDBGCD1_BIT16:      equ    %00000001
mDBGCD1_BIT17:      equ    %00000010
mDBGCD1_BIT18:      equ    %00000100
mDBGCD1_BIT19:      equ    %00001000
mDBGCD1_BIT20:      equ    %00010000
mDBGCD1_BIT21:      equ    %00100000
mDBGCD1_BIT22:      equ    %01000000
mDBGCD1_BIT23:      equ    %10000000


;*** DBGCD2 - Debug Comparator C Data Register 2; 0x0000013A ***
DBGCD2:             equ    $0000013A                                ;*** DBGCD2 - Debug Comparator C Data Register 2; 0x0000013A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCD2_BIT8:        equ    0                                         ; Comparator Data Bit 8
DBGCD2_BIT9:        equ    1                                         ; Comparator Data Bit 9
DBGCD2_BIT10:       equ    2                                         ; Comparator Data Bit 10
DBGCD2_BIT11:       equ    3                                         ; Comparator Data Bit 11
DBGCD2_BIT12:       equ    4                                         ; Comparator Data Bit 12
DBGCD2_BIT13:       equ    5                                         ; Comparator Data Bit 13
DBGCD2_BIT14:       equ    6                                         ; Comparator Data Bit 14
DBGCD2_BIT15:       equ    7                                         ; Comparator Data Bit 15
; bit position masks
mDBGCD2_BIT8:       equ    %00000001
mDBGCD2_BIT9:       equ    %00000010
mDBGCD2_BIT10:      equ    %00000100
mDBGCD2_BIT11:      equ    %00001000
mDBGCD2_BIT12:      equ    %00010000
mDBGCD2_BIT13:      equ    %00100000
mDBGCD2_BIT14:      equ    %01000000
mDBGCD2_BIT15:      equ    %10000000


;*** DBGCD3 - Debug Comparator C Data Register 3; 0x0000013B ***
DBGCD3:             equ    $0000013B                                ;*** DBGCD3 - Debug Comparator C Data Register 3; 0x0000013B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCD3_BIT0:        equ    0                                         ; Comparator Data Bit 0
DBGCD3_BIT1:        equ    1                                         ; Comparator Data Bit 1
DBGCD3_BIT2:        equ    2                                         ; Comparator Data Bit 2
DBGCD3_BIT3:        equ    3                                         ; Comparator Data Bit 3
DBGCD3_BIT4:        equ    4                                         ; Comparator Data Bit 4
DBGCD3_BIT5:        equ    5                                         ; Comparator Data Bit 5
DBGCD3_BIT6:        equ    6                                         ; Comparator Data Bit 6
DBGCD3_BIT7:        equ    7                                         ; Comparator Data Bit 7
; bit position masks
mDBGCD3_BIT0:       equ    %00000001
mDBGCD3_BIT1:       equ    %00000010
mDBGCD3_BIT2:       equ    %00000100
mDBGCD3_BIT3:       equ    %00001000
mDBGCD3_BIT4:       equ    %00010000
mDBGCD3_BIT5:       equ    %00100000
mDBGCD3_BIT6:       equ    %01000000
mDBGCD3_BIT7:       equ    %10000000


;*** DBGCDM0 - Debug Comparator C Data Mask Register 0; 0x0000013C ***
DBGCDM0:            equ    $0000013C                                ;*** DBGCDM0 - Debug Comparator C Data Mask Register 0; 0x0000013C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCDM0_BIT24:      equ    0                                         ; Comparator Data Mask Bit 24
DBGCDM0_BIT25:      equ    1                                         ; Comparator Data Mask Bit 25
DBGCDM0_BIT26:      equ    2                                         ; Comparator Data Mask Bit 26
DBGCDM0_BIT27:      equ    3                                         ; Comparator Data Mask Bit 27
DBGCDM0_BIT28:      equ    4                                         ; Comparator Data Mask Bit 28
DBGCDM0_BIT29:      equ    5                                         ; Comparator Data Mask Bit 29
DBGCDM0_BIT30:      equ    6                                         ; Comparator Data Mask Bit 30
DBGCDM0_BIT31:      equ    7                                         ; Comparator Data Mask Bit 31
; bit position masks
mDBGCDM0_BIT24:     equ    %00000001
mDBGCDM0_BIT25:     equ    %00000010
mDBGCDM0_BIT26:     equ    %00000100
mDBGCDM0_BIT27:     equ    %00001000
mDBGCDM0_BIT28:     equ    %00010000
mDBGCDM0_BIT29:     equ    %00100000
mDBGCDM0_BIT30:     equ    %01000000
mDBGCDM0_BIT31:     equ    %10000000


;*** DBGCDM1 - Debug Comparator C Data Mask Register 1; 0x0000013D ***
DBGCDM1:            equ    $0000013D                                ;*** DBGCDM1 - Debug Comparator C Data Mask Register 1; 0x0000013D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCDM1_BIT16:      equ    0                                         ; Comparator Data Mask Bit 16
DBGCDM1_BIT17:      equ    1                                         ; Comparator Data Mask Bit 17
DBGCDM1_BIT18:      equ    2                                         ; Comparator Data Mask Bit 18
DBGCDM1_BIT19:      equ    3                                         ; Comparator Data Mask Bit 19
DBGCDM1_BIT20:      equ    4                                         ; Comparator Data Mask Bit 20
DBGCDM1_BIT21:      equ    5                                         ; Comparator Data Mask Bit 21
DBGCDM1_BIT22:      equ    6                                         ; Comparator Data Mask Bit 22
DBGCDM1_BIT23:      equ    7                                         ; Comparator Data Mask Bit 23
; bit position masks
mDBGCDM1_BIT16:     equ    %00000001
mDBGCDM1_BIT17:     equ    %00000010
mDBGCDM1_BIT18:     equ    %00000100
mDBGCDM1_BIT19:     equ    %00001000
mDBGCDM1_BIT20:     equ    %00010000
mDBGCDM1_BIT21:     equ    %00100000
mDBGCDM1_BIT22:     equ    %01000000
mDBGCDM1_BIT23:     equ    %10000000


;*** DBGCDM2 - Debug Comparator C Data Mask Register 2; 0x0000013E ***
DBGCDM2:            equ    $0000013E                                ;*** DBGCDM2 - Debug Comparator C Data Mask Register 2; 0x0000013E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCDM2_BIT8:       equ    0                                         ; Comparator Data Mask Bit 8
DBGCDM2_BIT9:       equ    1                                         ; Comparator Data Mask Bit 9
DBGCDM2_BIT10:      equ    2                                         ; Comparator Data Mask Bit 10
DBGCDM2_BIT11:      equ    3                                         ; Comparator Data Mask Bit 11
DBGCDM2_BIT12:      equ    4                                         ; Comparator Data Mask Bit 12
DBGCDM2_BIT13:      equ    5                                         ; Comparator Data Mask Bit 13
DBGCDM2_BIT14:      equ    6                                         ; Comparator Data Mask Bit 14
DBGCDM2_BIT15:      equ    7                                         ; Comparator Data Mask Bit 15
; bit position masks
mDBGCDM2_BIT8:      equ    %00000001
mDBGCDM2_BIT9:      equ    %00000010
mDBGCDM2_BIT10:     equ    %00000100
mDBGCDM2_BIT11:     equ    %00001000
mDBGCDM2_BIT12:     equ    %00010000
mDBGCDM2_BIT13:     equ    %00100000
mDBGCDM2_BIT14:     equ    %01000000
mDBGCDM2_BIT15:     equ    %10000000


;*** DBGCDM3 - Debug Comparator C Data Mask Register 3; 0x0000013F ***
DBGCDM3:            equ    $0000013F                                ;*** DBGCDM3 - Debug Comparator C Data Mask Register 3; 0x0000013F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGCDM3_BIT0:       equ    0                                         ; Comparator Data Mask Bit 0
DBGCDM3_BIT1:       equ    1                                         ; Comparator Data Mask Bit 1
DBGCDM3_BIT2:       equ    2                                         ; Comparator Data Mask Bit 2
DBGCDM3_BIT3:       equ    3                                         ; Comparator Data Mask Bit 3
DBGCDM3_BIT4:       equ    4                                         ; Comparator Data Mask Bit 4
DBGCDM3_BIT5:       equ    5                                         ; Comparator Data Mask Bit 5
DBGCDM3_BIT6:       equ    6                                         ; Comparator Data Mask Bit 6
DBGCDM3_BIT7:       equ    7                                         ; Comparator Data Mask Bit 7
; bit position masks
mDBGCDM3_BIT0:      equ    %00000001
mDBGCDM3_BIT1:      equ    %00000010
mDBGCDM3_BIT2:      equ    %00000100
mDBGCDM3_BIT3:      equ    %00001000
mDBGCDM3_BIT4:      equ    %00010000
mDBGCDM3_BIT5:      equ    %00100000
mDBGCDM3_BIT6:      equ    %01000000
mDBGCDM3_BIT7:      equ    %10000000


;*** DBGDCTL - Debug Comparator D Control Register; 0x00000140 ***
DBGDCTL:            equ    $00000140                                ;*** DBGDCTL - Debug Comparator D Control Register; 0x00000140 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGDCTL_COMPE:      equ    0                                         ; Determines if comparator is enabled
DBGDCTL_RWE:        equ    2                                         ; Read/Write Enable Bit
DBGDCTL_RW:         equ    3                                         ; Read/Write Comparator Value Bit
DBGDCTL_INST:       equ    5                                         ; Instruction Select
; bit position masks
mDBGDCTL_COMPE:     equ    %00000001
mDBGDCTL_RWE:       equ    %00000100
mDBGDCTL_RW:        equ    %00001000
mDBGDCTL_INST:      equ    %00100000


;*** DBGDAH - Debug Comparator D Address Register High; 0x00000145 ***
DBGDAH:             equ    $00000145                                ;*** DBGDAH - Debug Comparator D Address Register High; 0x00000145 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGDAH_DBGDA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGDAH_DBGDA:      equ    %11111111


;*** DBGDAM - Debug Comparator D Address Register Middle; 0x00000146 ***
DBGDAM:             equ    $00000146                                ;*** DBGDAM - Debug Comparator D Address Register Middle; 0x00000146 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGDAM_DBGDA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGDAM_DBGDA:      equ    %11111111


;*** DBGDAL - Debug Comparator D Address Register Low; 0x00000147 ***
DBGDAL:             equ    $00000147                                ;*** DBGDAL - Debug Comparator D Address Register Low; 0x00000147 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DBGDAL_DBGDA:       equ    0                                         ; Comparator Address Bits
; bit position masks
mDBGDAL_DBGDA:      equ    %11111111


;*** MODRR0 - Module Routing Register 0; 0x00000200 ***
MODRR0:             equ    $00000200                                ;*** MODRR0 - Module Routing Register 0; 0x00000200 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MODRR0_C0RR:        equ    3                                         ; CAN0 routing
; bit position masks
mMODRR0_C0RR:       equ    %00001000


;*** MODRR1 - Module Routing Register 1; 0x00000201 ***
MODRR1:             equ    $00000201                                ;*** MODRR1 - Module Routing Register 1; 0x00000201 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MODRR1_PWM0RR:      equ    0                                         ; PWM0 routing
MODRR1_PWM2RR:      equ    1                                         ; PWM2 routing
MODRR1_PWM4RR:      equ    2                                         ; PWM4 routing
MODRR1_PWM6RR:      equ    3                                         ; PWM6 routing
; bit position masks
mMODRR1_PWM0RR:     equ    %00000001
mMODRR1_PWM2RR:     equ    %00000010
mMODRR1_PWM4RR:     equ    %00000100
mMODRR1_PWM6RR:     equ    %00001000


;*** MODRR2 - Module Routing Register 2; 0x00000202 ***
MODRR2:             equ    $00000202                                ;*** MODRR2 - Module Routing Register 2; 0x00000202 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MODRR2_T1IC0RR:     equ    0                                         ; TIM1 IC0 routing Bits
MODRR2_IIC0RR:      equ    4                                         ; IIC routing
MODRR2_SCI1RR:      equ    5                                         ; SCI1 routing
; bit position masks
mMODRR2_T1IC0RR:    equ    %00000011
mMODRR2_IIC0RR:     equ    %00010000
mMODRR2_SCI1RR:     equ    %00100000


;*** MODRR3 - Module Routing Register 3; 0x00000203 ***
MODRR3:             equ    $00000203                                ;*** MODRR3 - Module Routing Register 3; 0x00000203 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MODRR3_S0L0RR:      equ    0                                         ; SCI0-LINPHY0 routing
; bit position masks
mMODRR3_S0L0RR:     equ    %00000111


;*** ECLKCTL - ECLK Control Register; 0x00000208 ***
ECLKCTL:            equ    $00000208                                ;*** ECLKCTL - ECLK Control Register; 0x00000208 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECLKCTL_NECLK:      equ    7                                         ; No ECLK
; bit position masks
mECLKCTL_NECLK:     equ    %10000000


;*** IRQCR - Interrupt Control Register; 0x00000209 ***
IRQCR:              equ    $00000209                                ;*** IRQCR - Interrupt Control Register; 0x00000209 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IRQCR_IRQEN:        equ    6                                         ; External IRQ Enable
IRQCR_IRQE:         equ    7                                         ; IRQ Select Edge Sensitive Only
; bit position masks
mIRQCR_IRQEN:       equ    %01000000
mIRQCR_IRQE:        equ    %10000000


;*** PIMMISC - PIM Miscellaneous Register; 0x0000020A ***
PIMMISC:            equ    $0000020A                                ;*** PIMMISC - PIM Miscellaneous Register; 0x0000020A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIMMISC_CALCLKEN:   equ    0                                         ; RTC_CAL output Enable
; bit position masks
mPIMMISC_CALCLKEN:  equ    %00000001


;*** PTAB - Port AB Data Register; 0x00000220 ***
PTAB:               equ    $00000220                                ;*** PTAB - Port AB Data Register; 0x00000220 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTAB_PTB0:          equ    0                                         ; Port AB general purpose I/O data 0
PTAB_PTB1:          equ    1                                         ; Port AB general purpose I/O data 1
PTAB_PTB2:          equ    2                                         ; Port AB general purpose I/O data 2
PTAB_PTB3:          equ    3                                         ; Port AB general purpose I/O data 3
PTAB_PTA0:          equ    8                                         ; Port AB general purpose I/O data 8
PTAB_PTA1:          equ    9                                         ; Port AB general purpose I/O data 9
PTAB_PTA2:          equ    10                                        ; Port AB general purpose I/O data 10
PTAB_PTA3:          equ    11                                        ; Port AB general purpose I/O data 11
PTAB_PTA4:          equ    12                                        ; Port AB general purpose I/O data 12
PTAB_PTA5:          equ    13                                        ; Port AB general purpose I/O data 13
PTAB_PTA6:          equ    14                                        ; Port AB general purpose I/O data 14
PTAB_PTA7:          equ    15                                        ; Port AB general purpose I/O data 15
; bit position masks
mPTAB_PTB0:         equ    %00000001
mPTAB_PTB1:         equ    %00000010
mPTAB_PTB2:         equ    %00000100
mPTAB_PTB3:         equ    %00001000
mPTAB_PTA0:         equ    %100000000
mPTAB_PTA1:         equ    %1000000000
mPTAB_PTA2:         equ    %10000000000
mPTAB_PTA3:         equ    %100000000000
mPTAB_PTA4:         equ    %1000000000000
mPTAB_PTA5:         equ    %10000000000000
mPTAB_PTA6:         equ    %100000000000000
mPTAB_PTA7:         equ    %1000000000000000


;*** PTA - Port A Data Register; 0x00000220 ***
PTA:                equ    $00000220                                ;*** PTA - Port A Data Register; 0x00000220 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTA_PTA0:           equ    0                                         ; Port A general purpose I/O data 0
PTA_PTA1:           equ    1                                         ; Port A general purpose I/O data 1
PTA_PTA2:           equ    2                                         ; Port A general purpose I/O data 2
PTA_PTA3:           equ    3                                         ; Port A general purpose I/O data 3
PTA_PTA4:           equ    4                                         ; Port A general purpose I/O data 4
PTA_PTA5:           equ    5                                         ; Port A general purpose I/O data 5
PTA_PTA6:           equ    6                                         ; Port A general purpose I/O data 6
PTA_PTA7:           equ    7                                         ; Port A general purpose I/O data 7
; bit position masks
mPTA_PTA0:          equ    %00000001
mPTA_PTA1:          equ    %00000010
mPTA_PTA2:          equ    %00000100
mPTA_PTA3:          equ    %00001000
mPTA_PTA4:          equ    %00010000
mPTA_PTA5:          equ    %00100000
mPTA_PTA6:          equ    %01000000
mPTA_PTA7:          equ    %10000000


;*** PTB - Port B Data Register; 0x00000221 ***
PTB:                equ    $00000221                                ;*** PTB - Port B Data Register; 0x00000221 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTB_PTB0:           equ    0                                         ; Port B general purpose I/O data 0
PTB_PTB1:           equ    1                                         ; Port B general purpose I/O data 1
PTB_PTB2:           equ    2                                         ; Port B general purpose I/O data 2
PTB_PTB3:           equ    3                                         ; Port B general purpose I/O data 3
; bit position masks
mPTB_PTB0:          equ    %00000001
mPTB_PTB1:          equ    %00000010
mPTB_PTB2:          equ    %00000100
mPTB_PTB3:          equ    %00001000


;*** PTIAB - Port AB Input Register; 0x00000222 ***
PTIAB:              equ    $00000222                                ;*** PTIAB - Port AB Input Register; 0x00000222 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIAB_PTIB0:        equ    0                                         ; Port AB data input 0
PTIAB_PTIB1:        equ    1                                         ; Port AB data input 1
PTIAB_PTIB2:        equ    2                                         ; Port AB data input 2
PTIAB_PTIB3:        equ    3                                         ; Port AB data input 3
PTIAB_PTIA0:        equ    8                                         ; Port AB data input 0
PTIAB_PTIA1:        equ    9                                         ; Port AB data input 1
PTIAB_PTIA2:        equ    10                                        ; Port AB data input 2
PTIAB_PTIA3:        equ    11                                        ; Port AB data input 3
PTIAB_PTIA4:        equ    12                                        ; Port AB data input 4
PTIAB_PTIA5:        equ    13                                        ; Port AB data input 5
PTIAB_PTIA6:        equ    14                                        ; Port AB data input 6
PTIAB_PTIA7:        equ    15                                        ; Port AB data input 7
; bit position masks
mPTIAB_PTIB0:       equ    %00000001
mPTIAB_PTIB1:       equ    %00000010
mPTIAB_PTIB2:       equ    %00000100
mPTIAB_PTIB3:       equ    %00001000
mPTIAB_PTIA0:       equ    %100000000
mPTIAB_PTIA1:       equ    %1000000000
mPTIAB_PTIA2:       equ    %10000000000
mPTIAB_PTIA3:       equ    %100000000000
mPTIAB_PTIA4:       equ    %1000000000000
mPTIAB_PTIA5:       equ    %10000000000000
mPTIAB_PTIA6:       equ    %100000000000000
mPTIAB_PTIA7:       equ    %1000000000000000


;*** PTIA - Port A Input Register; 0x00000222 ***
PTIA:               equ    $00000222                                ;*** PTIA - Port A Input Register; 0x00000222 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIA_PTIA0:         equ    0                                         ; Port A data input 0
PTIA_PTIA1:         equ    1                                         ; Port A data input 1
PTIA_PTIA2:         equ    2                                         ; Port A data input 2
PTIA_PTIA3:         equ    3                                         ; Port A data input 3
PTIA_PTIA4:         equ    4                                         ; Port A data input 4
PTIA_PTIA5:         equ    5                                         ; Port A data input 5
PTIA_PTIA6:         equ    6                                         ; Port A data input 6
PTIA_PTIA7:         equ    7                                         ; Port A data input 7
; bit position masks
mPTIA_PTIA0:        equ    %00000001
mPTIA_PTIA1:        equ    %00000010
mPTIA_PTIA2:        equ    %00000100
mPTIA_PTIA3:        equ    %00001000
mPTIA_PTIA4:        equ    %00010000
mPTIA_PTIA5:        equ    %00100000
mPTIA_PTIA6:        equ    %01000000
mPTIA_PTIA7:        equ    %10000000


;*** PTIB - Port B Input Register; 0x00000223 ***
PTIB:               equ    $00000223                                ;*** PTIB - Port B Input Register; 0x00000223 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIB_PTIB0:         equ    0                                         ; Port B data input 0
PTIB_PTIB1:         equ    1                                         ; Port B data input 1
PTIB_PTIB2:         equ    2                                         ; Port B data input 2
PTIB_PTIB3:         equ    3                                         ; Port B data input 3
; bit position masks
mPTIB_PTIB0:        equ    %00000001
mPTIB_PTIB1:        equ    %00000010
mPTIB_PTIB2:        equ    %00000100
mPTIB_PTIB3:        equ    %00001000


;*** DDRAB - Port AB Data Direction Register; 0x00000224 ***
DDRAB:              equ    $00000224                                ;*** DDRAB - Port AB Data Direction Register; 0x00000224 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRAB_DDRB0:        equ    0                                         ; Port AB data direction select 0
DDRAB_DDRB1:        equ    1                                         ; Port AB data direction select 1
DDRAB_DDRB2:        equ    2                                         ; Port AB data direction select 2
DDRAB_DDRB3:        equ    3                                         ; Port AB data direction select 3
DDRAB_DDRA0:        equ    8                                         ; Port AB data direction select 8
DDRAB_DDRA1:        equ    9                                         ; Port AB data direction select 9
DDRAB_DDRA2:        equ    10                                        ; Port AB data direction select 10
DDRAB_DDRA3:        equ    11                                        ; Port AB data direction select 11
DDRAB_DDRA4:        equ    12                                        ; Port AB data direction select 12
DDRAB_DDRA5:        equ    13                                        ; Port AB data direction select 13
DDRAB_DDRA6:        equ    14                                        ; Port AB data direction select 14
DDRAB_DDRA7:        equ    15                                        ; Port AB data direction select 15
; bit position masks
mDDRAB_DDRB0:       equ    %00000001
mDDRAB_DDRB1:       equ    %00000010
mDDRAB_DDRB2:       equ    %00000100
mDDRAB_DDRB3:       equ    %00001000
mDDRAB_DDRA0:       equ    %100000000
mDDRAB_DDRA1:       equ    %1000000000
mDDRAB_DDRA2:       equ    %10000000000
mDDRAB_DDRA3:       equ    %100000000000
mDDRAB_DDRA4:       equ    %1000000000000
mDDRAB_DDRA5:       equ    %10000000000000
mDDRAB_DDRA6:       equ    %100000000000000
mDDRAB_DDRA7:       equ    %1000000000000000


;*** DDRA - Port A Data Direction Register; 0x00000224 ***
DDRA:               equ    $00000224                                ;*** DDRA - Port A Data Direction Register; 0x00000224 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRA_DDRA0:         equ    0                                         ; Port A data direction select 0
DDRA_DDRA1:         equ    1                                         ; Port A data direction select 1
DDRA_DDRA2:         equ    2                                         ; Port A data direction select 2
DDRA_DDRA3:         equ    3                                         ; Port A data direction select 3
DDRA_DDRA4:         equ    4                                         ; Port A data direction select 4
DDRA_DDRA5:         equ    5                                         ; Port A data direction select 5
DDRA_DDRA6:         equ    6                                         ; Port A data direction select 6
DDRA_DDRA7:         equ    7                                         ; Port A data direction select 7
; bit position masks
mDDRA_DDRA0:        equ    %00000001
mDDRA_DDRA1:        equ    %00000010
mDDRA_DDRA2:        equ    %00000100
mDDRA_DDRA3:        equ    %00001000
mDDRA_DDRA4:        equ    %00010000
mDDRA_DDRA5:        equ    %00100000
mDDRA_DDRA6:        equ    %01000000
mDDRA_DDRA7:        equ    %10000000


;*** DDRB - Port B Data Direction Register; 0x00000225 ***
DDRB:               equ    $00000225                                ;*** DDRB - Port B Data Direction Register; 0x00000225 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRB_DDRB0:         equ    0                                         ; Port B data direction select 0
DDRB_DDRB1:         equ    1                                         ; Port B data direction select 1
DDRB_DDRB2:         equ    2                                         ; Port B data direction select 2
DDRB_DDRB3:         equ    3                                         ; Port B data direction select 3
; bit position masks
mDDRB_DDRB0:        equ    %00000001
mDDRB_DDRB1:        equ    %00000010
mDDRB_DDRB2:        equ    %00000100
mDDRB_DDRB3:        equ    %00001000


;*** PERAB - Port AB Pull Up Enable Register; 0x00000226 ***
PERAB:              equ    $00000226                                ;*** PERAB - Port AB Pull Up Enable Register; 0x00000226 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERAB_PERB0:        equ    0                                         ; Port AB pull device enable 0
PERAB_PERB1:        equ    1                                         ; Port AB pull device enable 1
PERAB_PERB2:        equ    2                                         ; Port AB pull device enable 2
PERAB_PERB3:        equ    3                                         ; Port AB pull device enable 3
PERAB_PERA0:        equ    8                                         ; Port AB pull device enable 8
PERAB_PERA1:        equ    9                                         ; Port AB pull device enable 9
PERAB_PERA2:        equ    10                                        ; Port AB pull device enable 10
PERAB_PERA3:        equ    11                                        ; Port AB pull device enable 11
PERAB_PERA4:        equ    12                                        ; Port AB pull device enable 12
PERAB_PERA5:        equ    13                                        ; Port AB pull device enable 13
PERAB_PERA6:        equ    14                                        ; Port AB pull device enable 14
PERAB_PERA7:        equ    15                                        ; Port AB pull device enable 15
; bit position masks
mPERAB_PERB0:       equ    %00000001
mPERAB_PERB1:       equ    %00000010
mPERAB_PERB2:       equ    %00000100
mPERAB_PERB3:       equ    %00001000
mPERAB_PERA0:       equ    %100000000
mPERAB_PERA1:       equ    %1000000000
mPERAB_PERA2:       equ    %10000000000
mPERAB_PERA3:       equ    %100000000000
mPERAB_PERA4:       equ    %1000000000000
mPERAB_PERA5:       equ    %10000000000000
mPERAB_PERA6:       equ    %100000000000000
mPERAB_PERA7:       equ    %1000000000000000


;*** PERA - Port A Pull Device Enable Register; 0x00000226 ***
PERA:               equ    $00000226                                ;*** PERA - Port A Pull Device Enable Register; 0x00000226 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERA_PERA0:         equ    0                                         ; Port A pull device enable 0
PERA_PERA1:         equ    1                                         ; Port A pull device enable 1
PERA_PERA2:         equ    2                                         ; Port A pull device enable 2
PERA_PERA3:         equ    3                                         ; Port A pull device enable 3
PERA_PERA4:         equ    4                                         ; Port A pull device enable 4
PERA_PERA5:         equ    5                                         ; Port A pull device enable 5
PERA_PERA6:         equ    6                                         ; Port A pull device enable 6
PERA_PERA7:         equ    7                                         ; Port A pull device enable 7
; bit position masks
mPERA_PERA0:        equ    %00000001
mPERA_PERA1:        equ    %00000010
mPERA_PERA2:        equ    %00000100
mPERA_PERA3:        equ    %00001000
mPERA_PERA4:        equ    %00010000
mPERA_PERA5:        equ    %00100000
mPERA_PERA6:        equ    %01000000
mPERA_PERA7:        equ    %10000000


;*** PERB - Port B Pull Device Enable Register; 0x00000227 ***
PERB:               equ    $00000227                                ;*** PERB - Port B Pull Device Enable Register; 0x00000227 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERB_PERB0:         equ    0                                         ; Port B pull device enable 0
PERB_PERB1:         equ    1                                         ; Port B pull device enable 1
PERB_PERB2:         equ    2                                         ; Port B pull device enable 2
PERB_PERB3:         equ    3                                         ; Port B pull device enable 3
; bit position masks
mPERB_PERB0:        equ    %00000001
mPERB_PERB1:        equ    %00000010
mPERB_PERB2:        equ    %00000100
mPERB_PERB3:        equ    %00001000


;*** PPSAB - Port AB Polarity Select Register; 0x00000228 ***
PPSAB:              equ    $00000228                                ;*** PPSAB - Port AB Polarity Select Register; 0x00000228 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSAB_PPSB0:        equ    0                                         ; Port AB pull polarity select 0
PPSAB_PPSB1:        equ    1                                         ; Port AB pull polarity select 1
PPSAB_PPSB2:        equ    2                                         ; Port AB pull polarity select 2
PPSAB_PPSB3:        equ    3                                         ; Port AB pull polarity select 3
PPSAB_PPSA0:        equ    8                                         ; Port AB pull polarity select 0
PPSAB_PPSA1:        equ    9                                         ; Port AB pull polarity select 1
PPSAB_PPSA2:        equ    10                                        ; Port AB pull polarity select 2
PPSAB_PPSA3:        equ    11                                        ; Port AB pull polarity select 3
PPSAB_PPSA4:        equ    12                                        ; Port AB pull polarity select 4
PPSAB_PPSA5:        equ    13                                        ; Port AB pull polarity select 5
PPSAB_PPSA6:        equ    14                                        ; Port AB pull polarity select 6
PPSAB_PPSA7:        equ    15                                        ; Port AB pull polarity select 7
; bit position masks
mPPSAB_PPSB0:       equ    %00000001
mPPSAB_PPSB1:       equ    %00000010
mPPSAB_PPSB2:       equ    %00000100
mPPSAB_PPSB3:       equ    %00001000
mPPSAB_PPSA0:       equ    %100000000
mPPSAB_PPSA1:       equ    %1000000000
mPPSAB_PPSA2:       equ    %10000000000
mPPSAB_PPSA3:       equ    %100000000000
mPPSAB_PPSA4:       equ    %1000000000000
mPPSAB_PPSA5:       equ    %10000000000000
mPPSAB_PPSA6:       equ    %100000000000000
mPPSAB_PPSA7:       equ    %1000000000000000


;*** PPSA - Port A Polarity Select Register; 0x00000228 ***
PPSA:               equ    $00000228                                ;*** PPSA - Port A Polarity Select Register; 0x00000228 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSA_PPSA0:         equ    0                                         ; Port A pull polarity select 0
PPSA_PPSA1:         equ    1                                         ; Port A pull polarity select 1
PPSA_PPSA2:         equ    2                                         ; Port A pull polarity select 2
PPSA_PPSA3:         equ    3                                         ; Port A pull polarity select 3
PPSA_PPSA4:         equ    4                                         ; Port A pull polarity select 4
PPSA_PPSA5:         equ    5                                         ; Port A pull polarity select 5
PPSA_PPSA6:         equ    6                                         ; Port A pull polarity select 6
PPSA_PPSA7:         equ    7                                         ; Port A pull polarity select 7
; bit position masks
mPPSA_PPSA0:        equ    %00000001
mPPSA_PPSA1:        equ    %00000010
mPPSA_PPSA2:        equ    %00000100
mPPSA_PPSA3:        equ    %00001000
mPPSA_PPSA4:        equ    %00010000
mPPSA_PPSA5:        equ    %00100000
mPPSA_PPSA6:        equ    %01000000
mPPSA_PPSA7:        equ    %10000000


;*** PPSB - Port B Polarity Select Register; 0x00000229 ***
PPSB:               equ    $00000229                                ;*** PPSB - Port B Polarity Select Register; 0x00000229 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSB_PPSB0:         equ    0                                         ; Port B pull polarity select 0
PPSB_PPSB1:         equ    1                                         ; Port B pull polarity select 1
PPSB_PPSB2:         equ    2                                         ; Port B pull polarity select 2
PPSB_PPSB3:         equ    3                                         ; Port B pull polarity select 3
; bit position masks
mPPSB_PPSB0:        equ    %00000001
mPPSB_PPSB1:        equ    %00000010
mPPSB_PPSB2:        equ    %00000100
mPPSB_PPSB3:        equ    %00001000


;*** WOMA - Port A Wired-Or Mode Register; 0x0000023E ***
WOMA:               equ    $0000023E                                ;*** WOMA - Port A Wired-Or Mode Register; 0x0000023E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
WOMA_WOMA2:         equ    2                                         ; Port A wired-or mode 2
WOMA_WOMA3:         equ    3                                         ; Port A wired-or mode 3
; bit position masks
mWOMA_WOMA2:        equ    %00000100
mWOMA_WOMA3:        equ    %00001000


;*** PTCD - Port CD Data Register; 0x00000240 ***
PTCD:               equ    $00000240                                ;*** PTCD - Port CD Data Register; 0x00000240 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTCD_PTD0:          equ    0                                         ; Port CD general purpose I/O data 0
PTCD_PTD1:          equ    1                                         ; Port CD general purpose I/O data 1
PTCD_PTD2:          equ    2                                         ; Port CD general purpose I/O data 2
PTCD_PTD3:          equ    3                                         ; Port CD general purpose I/O data 3
PTCD_PTD4:          equ    4                                         ; Port CD general purpose I/O data 4
PTCD_PTD5:          equ    5                                         ; Port CD general purpose I/O data 5
PTCD_PTD6:          equ    6                                         ; Port CD general purpose I/O data 6
PTCD_PTD7:          equ    7                                         ; Port CD general purpose I/O data 7
PTCD_PTC0:          equ    8                                         ; Port CD general purpose I/O data 8
PTCD_PTC1:          equ    9                                         ; Port CD general purpose I/O data 9
PTCD_PTC2:          equ    10                                        ; Port CD general purpose I/O data 10
PTCD_PTC3:          equ    11                                        ; Port CD general purpose I/O data 11
PTCD_PTC4:          equ    12                                        ; Port CD general purpose I/O data 12
PTCD_PTC5:          equ    13                                        ; Port CD general purpose I/O data 13
PTCD_PTC6:          equ    14                                        ; Port CD general purpose I/O data 14
PTCD_PTC7:          equ    15                                        ; Port CD general purpose I/O data 15
; bit position masks
mPTCD_PTD0:         equ    %00000001
mPTCD_PTD1:         equ    %00000010
mPTCD_PTD2:         equ    %00000100
mPTCD_PTD3:         equ    %00001000
mPTCD_PTD4:         equ    %00010000
mPTCD_PTD5:         equ    %00100000
mPTCD_PTD6:         equ    %01000000
mPTCD_PTD7:         equ    %10000000
mPTCD_PTC0:         equ    %100000000
mPTCD_PTC1:         equ    %1000000000
mPTCD_PTC2:         equ    %10000000000
mPTCD_PTC3:         equ    %100000000000
mPTCD_PTC4:         equ    %1000000000000
mPTCD_PTC5:         equ    %10000000000000
mPTCD_PTC6:         equ    %100000000000000
mPTCD_PTC7:         equ    %1000000000000000


;*** PTC - Port C Data Register; 0x00000240 ***
PTC:                equ    $00000240                                ;*** PTC - Port C Data Register; 0x00000240 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTC_PTC0:           equ    0                                         ; Port C general purpose I/O data 0
PTC_PTC1:           equ    1                                         ; Port C general purpose I/O data 1
PTC_PTC2:           equ    2                                         ; Port C general purpose I/O data 2
PTC_PTC3:           equ    3                                         ; Port C general purpose I/O data 3
PTC_PTC4:           equ    4                                         ; Port C general purpose I/O data 4
PTC_PTC5:           equ    5                                         ; Port C general purpose I/O data 5
PTC_PTC6:           equ    6                                         ; Port C general purpose I/O data 6
PTC_PTC7:           equ    7                                         ; Port C general purpose I/O data 7
; bit position masks
mPTC_PTC0:          equ    %00000001
mPTC_PTC1:          equ    %00000010
mPTC_PTC2:          equ    %00000100
mPTC_PTC3:          equ    %00001000
mPTC_PTC4:          equ    %00010000
mPTC_PTC5:          equ    %00100000
mPTC_PTC6:          equ    %01000000
mPTC_PTC7:          equ    %10000000


;*** PTD - Port D Data Register; 0x00000241 ***
PTD:                equ    $00000241                                ;*** PTD - Port D Data Register; 0x00000241 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTD_PTD0:           equ    0                                         ; Port D general purpose I/O data 0
PTD_PTD1:           equ    1                                         ; Port D general purpose I/O data 1
PTD_PTD2:           equ    2                                         ; Port D general purpose I/O data 2
PTD_PTD3:           equ    3                                         ; Port D general purpose I/O data 3
PTD_PTD4:           equ    4                                         ; Port D general purpose I/O data 4
PTD_PTD5:           equ    5                                         ; Port D general purpose I/O data 5
PTD_PTD6:           equ    6                                         ; Port D general purpose I/O data 6
PTD_PTD7:           equ    7                                         ; Port D general purpose I/O data 7
; bit position masks
mPTD_PTD0:          equ    %00000001
mPTD_PTD1:          equ    %00000010
mPTD_PTD2:          equ    %00000100
mPTD_PTD3:          equ    %00001000
mPTD_PTD4:          equ    %00010000
mPTD_PTD5:          equ    %00100000
mPTD_PTD6:          equ    %01000000
mPTD_PTD7:          equ    %10000000


;*** PTICD - Port CD Input Register; 0x00000242 ***
PTICD:              equ    $00000242                                ;*** PTICD - Port CD Input Register; 0x00000242 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTICD_PTID0:        equ    0                                         ; Port CD data input 0
PTICD_PTID1:        equ    1                                         ; Port CD data input 1
PTICD_PTID2:        equ    2                                         ; Port CD data input 2
PTICD_PTID3:        equ    3                                         ; Port CD data input 3
PTICD_PTID4:        equ    4                                         ; Port CD data input 4
PTICD_PTID5:        equ    5                                         ; Port CD data input 5
PTICD_PTID6:        equ    6                                         ; Port CD data input 6
PTICD_PTID7:        equ    7                                         ; Port CD data input 7
PTICD_PTIC0:        equ    8                                         ; Port CD data input 0
PTICD_PTIC1:        equ    9                                         ; Port CD data input 1
PTICD_PTIC2:        equ    10                                        ; Port CD data input 2
PTICD_PTIC3:        equ    11                                        ; Port CD data input 3
PTICD_PTIC4:        equ    12                                        ; Port CD data input 4
PTICD_PTIC5:        equ    13                                        ; Port CD data input 5
PTICD_PTIC6:        equ    14                                        ; Port CD data input 6
PTICD_PTIC7:        equ    15                                        ; Port CD data input 7
; bit position masks
mPTICD_PTID0:       equ    %00000001
mPTICD_PTID1:       equ    %00000010
mPTICD_PTID2:       equ    %00000100
mPTICD_PTID3:       equ    %00001000
mPTICD_PTID4:       equ    %00010000
mPTICD_PTID5:       equ    %00100000
mPTICD_PTID6:       equ    %01000000
mPTICD_PTID7:       equ    %10000000
mPTICD_PTIC0:       equ    %100000000
mPTICD_PTIC1:       equ    %1000000000
mPTICD_PTIC2:       equ    %10000000000
mPTICD_PTIC3:       equ    %100000000000
mPTICD_PTIC4:       equ    %1000000000000
mPTICD_PTIC5:       equ    %10000000000000
mPTICD_PTIC6:       equ    %100000000000000
mPTICD_PTIC7:       equ    %1000000000000000


;*** PTIC - Port C Input Register; 0x00000242 ***
PTIC:               equ    $00000242                                ;*** PTIC - Port C Input Register; 0x00000242 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIC_PTIC0:         equ    0                                         ; Port C data input 0
PTIC_PTIC1:         equ    1                                         ; Port C data input 1
PTIC_PTIC2:         equ    2                                         ; Port C data input 2
PTIC_PTIC3:         equ    3                                         ; Port C data input 3
PTIC_PTIC4:         equ    4                                         ; Port C data input 4
PTIC_PTIC5:         equ    5                                         ; Port C data input 5
PTIC_PTIC6:         equ    6                                         ; Port C data input 6
PTIC_PTIC7:         equ    7                                         ; Port C data input 7
; bit position masks
mPTIC_PTIC0:        equ    %00000001
mPTIC_PTIC1:        equ    %00000010
mPTIC_PTIC2:        equ    %00000100
mPTIC_PTIC3:        equ    %00001000
mPTIC_PTIC4:        equ    %00010000
mPTIC_PTIC5:        equ    %00100000
mPTIC_PTIC6:        equ    %01000000
mPTIC_PTIC7:        equ    %10000000


;*** PTID - Port D Input Register; 0x00000243 ***
PTID:               equ    $00000243                                ;*** PTID - Port D Input Register; 0x00000243 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTID_PTID0:         equ    0                                         ; Port D data input 0
PTID_PTID1:         equ    1                                         ; Port D data input 1
PTID_PTID2:         equ    2                                         ; Port D data input 2
PTID_PTID3:         equ    3                                         ; Port D data input 3
PTID_PTID4:         equ    4                                         ; Port D data input 4
PTID_PTID5:         equ    5                                         ; Port D data input 5
PTID_PTID6:         equ    6                                         ; Port D data input 6
PTID_PTID7:         equ    7                                         ; Port D data input 7
; bit position masks
mPTID_PTID0:        equ    %00000001
mPTID_PTID1:        equ    %00000010
mPTID_PTID2:        equ    %00000100
mPTID_PTID3:        equ    %00001000
mPTID_PTID4:        equ    %00010000
mPTID_PTID5:        equ    %00100000
mPTID_PTID6:        equ    %01000000
mPTID_PTID7:        equ    %10000000


;*** DDRCD - Port CD Data Direction Register; 0x00000244 ***
DDRCD:              equ    $00000244                                ;*** DDRCD - Port CD Data Direction Register; 0x00000244 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRCD_DDRD0:        equ    0                                         ; Port CD data direction select 0
DDRCD_DDRD1:        equ    1                                         ; Port CD data direction select 1
DDRCD_DDRD2:        equ    2                                         ; Port CD data direction select 2
DDRCD_DDRD3:        equ    3                                         ; Port CD data direction select 3
DDRCD_DDRD4:        equ    4                                         ; Port CD data direction select 4
DDRCD_DDRD5:        equ    5                                         ; Port CD data direction select 5
DDRCD_DDRD6:        equ    6                                         ; Port CD data direction select 6
DDRCD_DDRD7:        equ    7                                         ; Port CD data direction select 7
DDRCD_DDRC0:        equ    8                                         ; Port CD data direction select 8
DDRCD_DDRC1:        equ    9                                         ; Port CD data direction select 9
DDRCD_DDRC2:        equ    10                                        ; Port CD data direction select 10
DDRCD_DDRC3:        equ    11                                        ; Port CD data direction select 11
DDRCD_DDRC4:        equ    12                                        ; Port CD data direction select 12
DDRCD_DDRC5:        equ    13                                        ; Port CD data direction select 13
DDRCD_DDRC6:        equ    14                                        ; Port CD data direction select 14
DDRCD_DDRC7:        equ    15                                        ; Port CD data direction select 15
; bit position masks
mDDRCD_DDRD0:       equ    %00000001
mDDRCD_DDRD1:       equ    %00000010
mDDRCD_DDRD2:       equ    %00000100
mDDRCD_DDRD3:       equ    %00001000
mDDRCD_DDRD4:       equ    %00010000
mDDRCD_DDRD5:       equ    %00100000
mDDRCD_DDRD6:       equ    %01000000
mDDRCD_DDRD7:       equ    %10000000
mDDRCD_DDRC0:       equ    %100000000
mDDRCD_DDRC1:       equ    %1000000000
mDDRCD_DDRC2:       equ    %10000000000
mDDRCD_DDRC3:       equ    %100000000000
mDDRCD_DDRC4:       equ    %1000000000000
mDDRCD_DDRC5:       equ    %10000000000000
mDDRCD_DDRC6:       equ    %100000000000000
mDDRCD_DDRC7:       equ    %1000000000000000


;*** DDRC - Port C Data Direction Register; 0x00000244 ***
DDRC:               equ    $00000244                                ;*** DDRC - Port C Data Direction Register; 0x00000244 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRC_DDRC0:         equ    0                                         ; Port C data direction select 0
DDRC_DDRC1:         equ    1                                         ; Port C data direction select 1
DDRC_DDRC2:         equ    2                                         ; Port C data direction select 2
DDRC_DDRC3:         equ    3                                         ; Port C data direction select 3
DDRC_DDRC4:         equ    4                                         ; Port C data direction select 4
DDRC_DDRC5:         equ    5                                         ; Port C data direction select 5
DDRC_DDRC6:         equ    6                                         ; Port C data direction select 6
DDRC_DDRC7:         equ    7                                         ; Port C data direction select 7
; bit position masks
mDDRC_DDRC0:        equ    %00000001
mDDRC_DDRC1:        equ    %00000010
mDDRC_DDRC2:        equ    %00000100
mDDRC_DDRC3:        equ    %00001000
mDDRC_DDRC4:        equ    %00010000
mDDRC_DDRC5:        equ    %00100000
mDDRC_DDRC6:        equ    %01000000
mDDRC_DDRC7:        equ    %10000000


;*** DDRD - Port D Data Direction Register; 0x00000245 ***
DDRD:               equ    $00000245                                ;*** DDRD - Port D Data Direction Register; 0x00000245 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRD_DDRD0:         equ    0                                         ; Port D data direction select 0
DDRD_DDRD1:         equ    1                                         ; Port D data direction select 1
DDRD_DDRD2:         equ    2                                         ; Port D data direction select 2
DDRD_DDRD3:         equ    3                                         ; Port D data direction select 3
DDRD_DDRD4:         equ    4                                         ; Port D data direction select 4
DDRD_DDRD5:         equ    5                                         ; Port D data direction select 5
DDRD_DDRD6:         equ    6                                         ; Port D data direction select 6
DDRD_DDRD7:         equ    7                                         ; Port D data direction select 7
; bit position masks
mDDRD_DDRD0:        equ    %00000001
mDDRD_DDRD1:        equ    %00000010
mDDRD_DDRD2:        equ    %00000100
mDDRD_DDRD3:        equ    %00001000
mDDRD_DDRD4:        equ    %00010000
mDDRD_DDRD5:        equ    %00100000
mDDRD_DDRD6:        equ    %01000000
mDDRD_DDRD7:        equ    %10000000


;*** PERCD - Port CD Pull Up Enable Register; 0x00000246 ***
PERCD:              equ    $00000246                                ;*** PERCD - Port CD Pull Up Enable Register; 0x00000246 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERCD_PERD0:        equ    0                                         ; Port CD pull device enable 0
PERCD_PERD1:        equ    1                                         ; Port CD pull device enable 1
PERCD_PERD2:        equ    2                                         ; Port CD pull device enable 2
PERCD_PERD3:        equ    3                                         ; Port CD pull device enable 3
PERCD_PERD4:        equ    4                                         ; Port CD pull device enable 4
PERCD_PERD5:        equ    5                                         ; Port CD pull device enable 5
PERCD_PERD6:        equ    6                                         ; Port CD pull device enable 6
PERCD_PERD7:        equ    7                                         ; Port CD pull device enable 7
PERCD_PERC0:        equ    8                                         ; Port CD pull device enable 8
PERCD_PERC1:        equ    9                                         ; Port CD pull device enable 9
PERCD_PERC2:        equ    10                                        ; Port CD pull device enable 10
PERCD_PERC3:        equ    11                                        ; Port CD pull device enable 11
PERCD_PERC4:        equ    12                                        ; Port CD pull device enable 12
PERCD_PERC5:        equ    13                                        ; Port CD pull device enable 13
PERCD_PERC6:        equ    14                                        ; Port CD pull device enable 14
PERCD_PERC7:        equ    15                                        ; Port CD pull device enable 15
; bit position masks
mPERCD_PERD0:       equ    %00000001
mPERCD_PERD1:       equ    %00000010
mPERCD_PERD2:       equ    %00000100
mPERCD_PERD3:       equ    %00001000
mPERCD_PERD4:       equ    %00010000
mPERCD_PERD5:       equ    %00100000
mPERCD_PERD6:       equ    %01000000
mPERCD_PERD7:       equ    %10000000
mPERCD_PERC0:       equ    %100000000
mPERCD_PERC1:       equ    %1000000000
mPERCD_PERC2:       equ    %10000000000
mPERCD_PERC3:       equ    %100000000000
mPERCD_PERC4:       equ    %1000000000000
mPERCD_PERC5:       equ    %10000000000000
mPERCD_PERC6:       equ    %100000000000000
mPERCD_PERC7:       equ    %1000000000000000


;*** PERC - Port C Pull Device Enable Register; 0x00000246 ***
PERC:               equ    $00000246                                ;*** PERC - Port C Pull Device Enable Register; 0x00000246 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERC_PERC0:         equ    0                                         ; Port C pull device enable 0
PERC_PERC1:         equ    1                                         ; Port C pull device enable 1
PERC_PERC2:         equ    2                                         ; Port C pull device enable 2
PERC_PERC3:         equ    3                                         ; Port C pull device enable 3
PERC_PERC4:         equ    4                                         ; Port C pull device enable 4
PERC_PERC5:         equ    5                                         ; Port C pull device enable 5
PERC_PERC6:         equ    6                                         ; Port C pull device enable 6
PERC_PERC7:         equ    7                                         ; Port C pull device enable 7
; bit position masks
mPERC_PERC0:        equ    %00000001
mPERC_PERC1:        equ    %00000010
mPERC_PERC2:        equ    %00000100
mPERC_PERC3:        equ    %00001000
mPERC_PERC4:        equ    %00010000
mPERC_PERC5:        equ    %00100000
mPERC_PERC6:        equ    %01000000
mPERC_PERC7:        equ    %10000000


;*** PERD - Port D Pull Device Enable Register; 0x00000247 ***
PERD:               equ    $00000247                                ;*** PERD - Port D Pull Device Enable Register; 0x00000247 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERD_PERD0:         equ    0                                         ; Port D pull device enable 0
PERD_PERD1:         equ    1                                         ; Port D pull device enable 1
PERD_PERD2:         equ    2                                         ; Port D pull device enable 2
PERD_PERD3:         equ    3                                         ; Port D pull device enable 3
PERD_PERD4:         equ    4                                         ; Port D pull device enable 4
PERD_PERD5:         equ    5                                         ; Port D pull device enable 5
PERD_PERD6:         equ    6                                         ; Port D pull device enable 6
PERD_PERD7:         equ    7                                         ; Port D pull device enable 7
; bit position masks
mPERD_PERD0:        equ    %00000001
mPERD_PERD1:        equ    %00000010
mPERD_PERD2:        equ    %00000100
mPERD_PERD3:        equ    %00001000
mPERD_PERD4:        equ    %00010000
mPERD_PERD5:        equ    %00100000
mPERD_PERD6:        equ    %01000000
mPERD_PERD7:        equ    %10000000


;*** PPSCD - Port CD Polarity Select Register; 0x00000248 ***
PPSCD:              equ    $00000248                                ;*** PPSCD - Port CD Polarity Select Register; 0x00000248 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSCD_PPSD0:        equ    0                                         ; Port CD pull polarity select 0
PPSCD_PPSD1:        equ    1                                         ; Port CD pull polarity select 1
PPSCD_PPSD2:        equ    2                                         ; Port CD pull polarity select 2
PPSCD_PPSD3:        equ    3                                         ; Port CD pull polarity select 3
PPSCD_PPSD4:        equ    4                                         ; Port CD pull polarity select 4
PPSCD_PPSD5:        equ    5                                         ; Port CD pull polarity select 5
PPSCD_PPSD6:        equ    6                                         ; Port CD pull polarity select 6
PPSCD_PPSD7:        equ    7                                         ; Port CD pull polarity select 7
PPSCD_PPSC0:        equ    8                                         ; Port CD pull polarity select 0
PPSCD_PPSC1:        equ    9                                         ; Port CD pull polarity select 1
PPSCD_PPSC2:        equ    10                                        ; Port CD pull polarity select 2
PPSCD_PPSC3:        equ    11                                        ; Port CD pull polarity select 3
PPSCD_PPSC4:        equ    12                                        ; Port CD pull polarity select 4
PPSCD_PPSC5:        equ    13                                        ; Port CD pull polarity select 5
PPSCD_PPSC6:        equ    14                                        ; Port CD pull polarity select 6
PPSCD_PPSC7:        equ    15                                        ; Port CD pull polarity select 7
; bit position masks
mPPSCD_PPSD0:       equ    %00000001
mPPSCD_PPSD1:       equ    %00000010
mPPSCD_PPSD2:       equ    %00000100
mPPSCD_PPSD3:       equ    %00001000
mPPSCD_PPSD4:       equ    %00010000
mPPSCD_PPSD5:       equ    %00100000
mPPSCD_PPSD6:       equ    %01000000
mPPSCD_PPSD7:       equ    %10000000
mPPSCD_PPSC0:       equ    %100000000
mPPSCD_PPSC1:       equ    %1000000000
mPPSCD_PPSC2:       equ    %10000000000
mPPSCD_PPSC3:       equ    %100000000000
mPPSCD_PPSC4:       equ    %1000000000000
mPPSCD_PPSC5:       equ    %10000000000000
mPPSCD_PPSC6:       equ    %100000000000000
mPPSCD_PPSC7:       equ    %1000000000000000


;*** PPSC - Port C Polarity Select Register; 0x00000248 ***
PPSC:               equ    $00000248                                ;*** PPSC - Port C Polarity Select Register; 0x00000248 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSC_PPSC0:         equ    0                                         ; Port C pull polarity select 0
PPSC_PPSC1:         equ    1                                         ; Port C pull polarity select 1
PPSC_PPSC2:         equ    2                                         ; Port C pull polarity select 2
PPSC_PPSC3:         equ    3                                         ; Port C pull polarity select 3
PPSC_PPSC4:         equ    4                                         ; Port C pull polarity select 4
PPSC_PPSC5:         equ    5                                         ; Port C pull polarity select 5
PPSC_PPSC6:         equ    6                                         ; Port C pull polarity select 6
PPSC_PPSC7:         equ    7                                         ; Port C pull polarity select 7
; bit position masks
mPPSC_PPSC0:        equ    %00000001
mPPSC_PPSC1:        equ    %00000010
mPPSC_PPSC2:        equ    %00000100
mPPSC_PPSC3:        equ    %00001000
mPPSC_PPSC4:        equ    %00010000
mPPSC_PPSC5:        equ    %00100000
mPPSC_PPSC6:        equ    %01000000
mPPSC_PPSC7:        equ    %10000000


;*** PPSD - Port D Polarity Select Register; 0x00000249 ***
PPSD:               equ    $00000249                                ;*** PPSD - Port D Polarity Select Register; 0x00000249 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSD_PPSD0:         equ    0                                         ; Port D pull polarity select 0
PPSD_PPSD1:         equ    1                                         ; Port D pull polarity select 1
PPSD_PPSD2:         equ    2                                         ; Port D pull polarity select 2
PPSD_PPSD3:         equ    3                                         ; Port D pull polarity select 3
PPSD_PPSD4:         equ    4                                         ; Port D pull polarity select 4
PPSD_PPSD5:         equ    5                                         ; Port D pull polarity select 5
PPSD_PPSD6:         equ    6                                         ; Port D pull polarity select 6
PPSD_PPSD7:         equ    7                                         ; Port D pull polarity select 7
; bit position masks
mPPSD_PPSD0:        equ    %00000001
mPPSD_PPSD1:        equ    %00000010
mPPSD_PPSD2:        equ    %00000100
mPPSD_PPSD3:        equ    %00001000
mPPSD_PPSD4:        equ    %00010000
mPPSD_PPSD5:        equ    %00100000
mPPSD_PPSD6:        equ    %01000000
mPPSD_PPSD7:        equ    %10000000


;*** PTEF - Port EF Data Register; 0x00000260 ***
PTEF:               equ    $00000260                                ;*** PTEF - Port EF Data Register; 0x00000260 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTEF_PTF0:          equ    0                                         ; Port EF general purpose I/O data 0
PTEF_PTF1:          equ    1                                         ; Port EF general purpose I/O data 1
PTEF_PTF2:          equ    2                                         ; Port EF general purpose I/O data 2
PTEF_PTF3:          equ    3                                         ; Port EF general purpose I/O data 3
PTEF_PTF4:          equ    4                                         ; Port EF general purpose I/O data 4
PTEF_PTF5:          equ    5                                         ; Port EF general purpose I/O data 5
PTEF_PTF6:          equ    6                                         ; Port EF general purpose I/O data 6
PTEF_PTF7:          equ    7                                         ; Port EF general purpose I/O data 7
PTEF_PTE0:          equ    8                                         ; Port EF general purpose I/O data 8
PTEF_PTE1:          equ    9                                         ; Port EF general purpose I/O data 9
PTEF_PTE2:          equ    10                                        ; Port EF general purpose I/O data 10
PTEF_PTE3:          equ    11                                        ; Port EF general purpose I/O data 11
; bit position masks
mPTEF_PTF0:         equ    %00000001
mPTEF_PTF1:         equ    %00000010
mPTEF_PTF2:         equ    %00000100
mPTEF_PTF3:         equ    %00001000
mPTEF_PTF4:         equ    %00010000
mPTEF_PTF5:         equ    %00100000
mPTEF_PTF6:         equ    %01000000
mPTEF_PTF7:         equ    %10000000
mPTEF_PTE0:         equ    %100000000
mPTEF_PTE1:         equ    %1000000000
mPTEF_PTE2:         equ    %10000000000
mPTEF_PTE3:         equ    %100000000000


;*** PTE - Port E Data Register; 0x00000260 ***
PTE:                equ    $00000260                                ;*** PTE - Port E Data Register; 0x00000260 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTE_PTE0:           equ    0                                         ; Port E general purpose I/O data 0
PTE_PTE1:           equ    1                                         ; Port E general purpose I/O data 1
PTE_PTE2:           equ    2                                         ; Port E general purpose I/O data 2
PTE_PTE3:           equ    3                                         ; Port E general purpose I/O data 3
; bit position masks
mPTE_PTE0:          equ    %00000001
mPTE_PTE1:          equ    %00000010
mPTE_PTE2:          equ    %00000100
mPTE_PTE3:          equ    %00001000


;*** PTF - Port F Data Register; 0x00000261 ***
PTF:                equ    $00000261                                ;*** PTF - Port F Data Register; 0x00000261 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTF_PTF0:           equ    0                                         ; Port F general purpose I/O data 0
PTF_PTF1:           equ    1                                         ; Port F general purpose I/O data 1
PTF_PTF2:           equ    2                                         ; Port F general purpose I/O data 2
PTF_PTF3:           equ    3                                         ; Port F general purpose I/O data 3
PTF_PTF4:           equ    4                                         ; Port F general purpose I/O data 4
PTF_PTF5:           equ    5                                         ; Port F general purpose I/O data 5
PTF_PTF6:           equ    6                                         ; Port F general purpose I/O data 6
PTF_PTF7:           equ    7                                         ; Port F general purpose I/O data 7
; bit position masks
mPTF_PTF0:          equ    %00000001
mPTF_PTF1:          equ    %00000010
mPTF_PTF2:          equ    %00000100
mPTF_PTF3:          equ    %00001000
mPTF_PTF4:          equ    %00010000
mPTF_PTF5:          equ    %00100000
mPTF_PTF6:          equ    %01000000
mPTF_PTF7:          equ    %10000000


;*** PTIEF - Port EF Input Register; 0x00000262 ***
PTIEF:              equ    $00000262                                ;*** PTIEF - Port EF Input Register; 0x00000262 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIEF_PTIF0:        equ    0                                         ; Port EF data input 0
PTIEF_PTIF1:        equ    1                                         ; Port EF data input 1
PTIEF_PTIF2:        equ    2                                         ; Port EF data input 2
PTIEF_PTIF3:        equ    3                                         ; Port EF data input 3
PTIEF_PTIF4:        equ    4                                         ; Port EF data input 4
PTIEF_PTIF5:        equ    5                                         ; Port EF data input 5
PTIEF_PTIF6:        equ    6                                         ; Port EF data input 6
PTIEF_PTIF7:        equ    7                                         ; Port EF data input 7
PTIEF_PTIE0:        equ    8                                         ; Port EF data input 0
PTIEF_PTIE1:        equ    9                                         ; Port EF data input 1
PTIEF_PTIE2:        equ    10                                        ; Port EF data input 2
PTIEF_PTIE3:        equ    11                                        ; Port EF data input 3
; bit position masks
mPTIEF_PTIF0:       equ    %00000001
mPTIEF_PTIF1:       equ    %00000010
mPTIEF_PTIF2:       equ    %00000100
mPTIEF_PTIF3:       equ    %00001000
mPTIEF_PTIF4:       equ    %00010000
mPTIEF_PTIF5:       equ    %00100000
mPTIEF_PTIF6:       equ    %01000000
mPTIEF_PTIF7:       equ    %10000000
mPTIEF_PTIE0:       equ    %100000000
mPTIEF_PTIE1:       equ    %1000000000
mPTIEF_PTIE2:       equ    %10000000000
mPTIEF_PTIE3:       equ    %100000000000


;*** PTIE - Port E Input Register; 0x00000262 ***
PTIE:               equ    $00000262                                ;*** PTIE - Port E Input Register; 0x00000262 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIE_PTIE0:         equ    0                                         ; Port E data input 0
PTIE_PTIE1:         equ    1                                         ; Port E data input 1
PTIE_PTIE2:         equ    2                                         ; Port E data input 2
PTIE_PTIE3:         equ    3                                         ; Port E data input 3
; bit position masks
mPTIE_PTIE0:        equ    %00000001
mPTIE_PTIE1:        equ    %00000010
mPTIE_PTIE2:        equ    %00000100
mPTIE_PTIE3:        equ    %00001000


;*** PTIF - Port F Input Register; 0x00000263 ***
PTIF:               equ    $00000263                                ;*** PTIF - Port F Input Register; 0x00000263 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIF_PTIF0:         equ    0                                         ; Port F data input 0
PTIF_PTIF1:         equ    1                                         ; Port F data input 1
PTIF_PTIF2:         equ    2                                         ; Port F data input 2
PTIF_PTIF3:         equ    3                                         ; Port F data input 3
PTIF_PTIF4:         equ    4                                         ; Port F data input 4
PTIF_PTIF5:         equ    5                                         ; Port F data input 5
PTIF_PTIF6:         equ    6                                         ; Port F data input 6
PTIF_PTIF7:         equ    7                                         ; Port F data input 7
; bit position masks
mPTIF_PTIF0:        equ    %00000001
mPTIF_PTIF1:        equ    %00000010
mPTIF_PTIF2:        equ    %00000100
mPTIF_PTIF3:        equ    %00001000
mPTIF_PTIF4:        equ    %00010000
mPTIF_PTIF5:        equ    %00100000
mPTIF_PTIF6:        equ    %01000000
mPTIF_PTIF7:        equ    %10000000


;*** DDREF - Port EF Data Direction Register; 0x00000264 ***
DDREF:              equ    $00000264                                ;*** DDREF - Port EF Data Direction Register; 0x00000264 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDREF_DDRF0:        equ    0                                         ; Port EF data direction select 0
DDREF_DDRF1:        equ    1                                         ; Port EF data direction select 1
DDREF_DDRF2:        equ    2                                         ; Port EF data direction select 2
DDREF_DDRF3:        equ    3                                         ; Port EF data direction select 3
DDREF_DDRF4:        equ    4                                         ; Port EF data direction select 4
DDREF_DDRF5:        equ    5                                         ; Port EF data direction select 5
DDREF_DDRF6:        equ    6                                         ; Port EF data direction select 6
DDREF_DDRF7:        equ    7                                         ; Port EF data direction select 7
DDREF_DDRE0:        equ    8                                         ; Port EF data direction select 8
DDREF_DDRE1:        equ    9                                         ; Port EF data direction select 9
DDREF_DDRE2:        equ    10                                        ; Port EF data direction select 10
DDREF_DDRE3:        equ    11                                        ; Port EF data direction select 11
; bit position masks
mDDREF_DDRF0:       equ    %00000001
mDDREF_DDRF1:       equ    %00000010
mDDREF_DDRF2:       equ    %00000100
mDDREF_DDRF3:       equ    %00001000
mDDREF_DDRF4:       equ    %00010000
mDDREF_DDRF5:       equ    %00100000
mDDREF_DDRF6:       equ    %01000000
mDDREF_DDRF7:       equ    %10000000
mDDREF_DDRE0:       equ    %100000000
mDDREF_DDRE1:       equ    %1000000000
mDDREF_DDRE2:       equ    %10000000000
mDDREF_DDRE3:       equ    %100000000000


;*** DDRE - Port E Data Direction Register; 0x00000264 ***
DDRE:               equ    $00000264                                ;*** DDRE - Port E Data Direction Register; 0x00000264 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRE_DDRE0:         equ    0                                         ; Port E data direction select 0
DDRE_DDRE1:         equ    1                                         ; Port E data direction select 1
DDRE_DDRE2:         equ    2                                         ; Port E data direction select 2
DDRE_DDRE3:         equ    3                                         ; Port E data direction select 3
; bit position masks
mDDRE_DDRE0:        equ    %00000001
mDDRE_DDRE1:        equ    %00000010
mDDRE_DDRE2:        equ    %00000100
mDDRE_DDRE3:        equ    %00001000


;*** DDRF - Port F Data Direction Register; 0x00000265 ***
DDRF:               equ    $00000265                                ;*** DDRF - Port F Data Direction Register; 0x00000265 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRF_DDRF0:         equ    0                                         ; Port F data direction select 0
DDRF_DDRF1:         equ    1                                         ; Port F data direction select 1
DDRF_DDRF2:         equ    2                                         ; Port F data direction select 2
DDRF_DDRF3:         equ    3                                         ; Port F data direction select 3
DDRF_DDRF4:         equ    4                                         ; Port F data direction select 4
DDRF_DDRF5:         equ    5                                         ; Port F data direction select 5
DDRF_DDRF6:         equ    6                                         ; Port F data direction select 6
DDRF_DDRF7:         equ    7                                         ; Port F data direction select 7
; bit position masks
mDDRF_DDRF0:        equ    %00000001
mDDRF_DDRF1:        equ    %00000010
mDDRF_DDRF2:        equ    %00000100
mDDRF_DDRF3:        equ    %00001000
mDDRF_DDRF4:        equ    %00010000
mDDRF_DDRF5:        equ    %00100000
mDDRF_DDRF6:        equ    %01000000
mDDRF_DDRF7:        equ    %10000000


;*** PEREF - Port EF Pull Up Enable Register; 0x00000266 ***
PEREF:              equ    $00000266                                ;*** PEREF - Port EF Pull Up Enable Register; 0x00000266 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PEREF_PERF0:        equ    0                                         ; Port EF pull device enable 0
PEREF_PERF1:        equ    1                                         ; Port EF pull device enable 1
PEREF_PERF2:        equ    2                                         ; Port EF pull device enable 2
PEREF_PERF3:        equ    3                                         ; Port EF pull device enable 3
PEREF_PERF4:        equ    4                                         ; Port EF pull device enable 4
PEREF_PERF5:        equ    5                                         ; Port EF pull device enable 5
PEREF_PERF6:        equ    6                                         ; Port EF pull device enable 6
PEREF_PERF7:        equ    7                                         ; Port EF pull device enable 7
PEREF_PERE0:        equ    8                                         ; Port EF pull device enable 8
PEREF_PERE1:        equ    9                                         ; Port EF pull device enable 9
PEREF_PERE2:        equ    10                                        ; Port EF pull device enable 10
PEREF_PERE3:        equ    11                                        ; Port EF pull device enable 11
; bit position masks
mPEREF_PERF0:       equ    %00000001
mPEREF_PERF1:       equ    %00000010
mPEREF_PERF2:       equ    %00000100
mPEREF_PERF3:       equ    %00001000
mPEREF_PERF4:       equ    %00010000
mPEREF_PERF5:       equ    %00100000
mPEREF_PERF6:       equ    %01000000
mPEREF_PERF7:       equ    %10000000
mPEREF_PERE0:       equ    %100000000
mPEREF_PERE1:       equ    %1000000000
mPEREF_PERE2:       equ    %10000000000
mPEREF_PERE3:       equ    %100000000000


;*** PERE - Port E Pull Device Enable Register; 0x00000266 ***
PERE:               equ    $00000266                                ;*** PERE - Port E Pull Device Enable Register; 0x00000266 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERE_PERE0:         equ    0                                         ; Port E pull device enable 0
PERE_PERE1:         equ    1                                         ; Port E pull device enable 1
PERE_PERE2:         equ    2                                         ; Port E pull device enable 2
PERE_PERE3:         equ    3                                         ; Port E pull device enable 3
; bit position masks
mPERE_PERE0:        equ    %00000001
mPERE_PERE1:        equ    %00000010
mPERE_PERE2:        equ    %00000100
mPERE_PERE3:        equ    %00001000


;*** PERF - Port F Pull Device Enable Register; 0x00000267 ***
PERF:               equ    $00000267                                ;*** PERF - Port F Pull Device Enable Register; 0x00000267 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERF_PERF0:         equ    0                                         ; Port F pull device enable 0
PERF_PERF1:         equ    1                                         ; Port F pull device enable 1
PERF_PERF2:         equ    2                                         ; Port F pull device enable 2
PERF_PERF3:         equ    3                                         ; Port F pull device enable 3
PERF_PERF4:         equ    4                                         ; Port F pull device enable 4
PERF_PERF5:         equ    5                                         ; Port F pull device enable 5
PERF_PERF6:         equ    6                                         ; Port F pull device enable 6
PERF_PERF7:         equ    7                                         ; Port F pull device enable 7
; bit position masks
mPERF_PERF0:        equ    %00000001
mPERF_PERF1:        equ    %00000010
mPERF_PERF2:        equ    %00000100
mPERF_PERF3:        equ    %00001000
mPERF_PERF4:        equ    %00010000
mPERF_PERF5:        equ    %00100000
mPERF_PERF6:        equ    %01000000
mPERF_PERF7:        equ    %10000000


;*** PPSEF - Port EF Polarity Select Register; 0x00000268 ***
PPSEF:              equ    $00000268                                ;*** PPSEF - Port EF Polarity Select Register; 0x00000268 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSEF_PPSF0:        equ    0                                         ; Port EF pull polarity select 0
PPSEF_PPSF1:        equ    1                                         ; Port EF pull polarity select 1
PPSEF_PPSF2:        equ    2                                         ; Port EF pull polarity select 2
PPSEF_PPSF3:        equ    3                                         ; Port EF pull polarity select 3
PPSEF_PPSF4:        equ    4                                         ; Port EF pull polarity select 4
PPSEF_PPSF5:        equ    5                                         ; Port EF pull polarity select 5
PPSEF_PPSF6:        equ    6                                         ; Port EF pull polarity select 6
PPSEF_PPSF7:        equ    7                                         ; Port EF pull polarity select 7
PPSEF_PPSE0:        equ    8                                         ; Port EF pull polarity select 0
PPSEF_PPSE1:        equ    9                                         ; Port EF pull polarity select 1
PPSEF_PPSE2:        equ    10                                        ; Port EF pull polarity select 2
PPSEF_PPSE3:        equ    11                                        ; Port EF pull polarity select 3
; bit position masks
mPPSEF_PPSF0:       equ    %00000001
mPPSEF_PPSF1:       equ    %00000010
mPPSEF_PPSF2:       equ    %00000100
mPPSEF_PPSF3:       equ    %00001000
mPPSEF_PPSF4:       equ    %00010000
mPPSEF_PPSF5:       equ    %00100000
mPPSEF_PPSF6:       equ    %01000000
mPPSEF_PPSF7:       equ    %10000000
mPPSEF_PPSE0:       equ    %100000000
mPPSEF_PPSE1:       equ    %1000000000
mPPSEF_PPSE2:       equ    %10000000000
mPPSEF_PPSE3:       equ    %100000000000


;*** PPSE - Port E Polarity Select Register; 0x00000268 ***
PPSE:               equ    $00000268                                ;*** PPSE - Port E Polarity Select Register; 0x00000268 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSE_PPSE0:         equ    0                                         ; Port E pull polarity select 0
PPSE_PPSE1:         equ    1                                         ; Port E pull polarity select 1
PPSE_PPSE2:         equ    2                                         ; Port E pull polarity select 2
PPSE_PPSE3:         equ    3                                         ; Port E pull polarity select 3
; bit position masks
mPPSE_PPSE0:        equ    %00000001
mPPSE_PPSE1:        equ    %00000010
mPPSE_PPSE2:        equ    %00000100
mPPSE_PPSE3:        equ    %00001000


;*** PPSF - Port F Polarity Select Register; 0x00000269 ***
PPSF:               equ    $00000269                                ;*** PPSF - Port F Polarity Select Register; 0x00000269 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSF_PPSF0:         equ    0                                         ; Port F pull polarity select 0
PPSF_PPSF1:         equ    1                                         ; Port F pull polarity select 1
PPSF_PPSF2:         equ    2                                         ; Port F pull polarity select 2
PPSF_PPSF3:         equ    3                                         ; Port F pull polarity select 3
PPSF_PPSF4:         equ    4                                         ; Port F pull polarity select 4
PPSF_PPSF5:         equ    5                                         ; Port F pull polarity select 5
PPSF_PPSF6:         equ    6                                         ; Port F pull polarity select 6
PPSF_PPSF7:         equ    7                                         ; Port F pull polarity select 7
; bit position masks
mPPSF_PPSF0:        equ    %00000001
mPPSF_PPSF1:        equ    %00000010
mPPSF_PPSF2:        equ    %00000100
mPPSF_PPSF3:        equ    %00001000
mPPSF_PPSF4:        equ    %00010000
mPPSF_PPSF5:        equ    %00100000
mPPSF_PPSF6:        equ    %01000000
mPPSF_PPSF7:        equ    %10000000


;*** PTADL - Port ADL Data Register; 0x00000281 ***
PTADL:              equ    $00000281                                ;*** PTADL - Port ADL Data Register; 0x00000281 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTADL_PTADL0:       equ    0                                         ; Port ADL general purpose I/O data 0
PTADL_PTADL1:       equ    1                                         ; Port ADL general purpose I/O data 1
PTADL_PTADL2:       equ    2                                         ; Port ADL general purpose I/O data 2
PTADL_PTADL3:       equ    3                                         ; Port ADL general purpose I/O data 3
PTADL_PTADL4:       equ    4                                         ; Port ADL general purpose I/O data 4
PTADL_PTADL5:       equ    5                                         ; Port ADL general purpose I/O data 5
PTADL_PTADL6:       equ    6                                         ; Port ADL general purpose I/O data 6
PTADL_PTADL7:       equ    7                                         ; Port ADL general purpose I/O data 7
; bit position masks
mPTADL_PTADL0:      equ    %00000001
mPTADL_PTADL1:      equ    %00000010
mPTADL_PTADL2:      equ    %00000100
mPTADL_PTADL3:      equ    %00001000
mPTADL_PTADL4:      equ    %00010000
mPTADL_PTADL5:      equ    %00100000
mPTADL_PTADL6:      equ    %01000000
mPTADL_PTADL7:      equ    %10000000


;*** PTIADL - Port ADL Input Register; 0x00000283 ***
PTIADL:             equ    $00000283                                ;*** PTIADL - Port ADL Input Register; 0x00000283 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIADL_PTIADL0:     equ    0                                         ; Port ADL data input 0
PTIADL_PTIADL1:     equ    1                                         ; Port ADL data input 1
PTIADL_PTIADL2:     equ    2                                         ; Port ADL data input 2
PTIADL_PTIADL3:     equ    3                                         ; Port ADL data input 3
PTIADL_PTIADL4:     equ    4                                         ; Port ADL data input 4
PTIADL_PTIADL5:     equ    5                                         ; Port ADL data input 5
PTIADL_PTIADL6:     equ    6                                         ; Port ADL data input 6
PTIADL_PTIADL7:     equ    7                                         ; Port ADL data input 7
; bit position masks
mPTIADL_PTIADL0:    equ    %00000001
mPTIADL_PTIADL1:    equ    %00000010
mPTIADL_PTIADL2:    equ    %00000100
mPTIADL_PTIADL3:    equ    %00001000
mPTIADL_PTIADL4:    equ    %00010000
mPTIADL_PTIADL5:    equ    %00100000
mPTIADL_PTIADL6:    equ    %01000000
mPTIADL_PTIADL7:    equ    %10000000


;*** DDRADL - Port ADL Data Direction Register; 0x00000285 ***
DDRADL:             equ    $00000285                                ;*** DDRADL - Port ADL Data Direction Register; 0x00000285 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRADL_DDRADL0:     equ    0                                         ; Port ADL data direction select 0
DDRADL_DDRADL1:     equ    1                                         ; Port ADL data direction select 1
DDRADL_DDRADL2:     equ    2                                         ; Port ADL data direction select 2
DDRADL_DDRADL3:     equ    3                                         ; Port ADL data direction select 3
DDRADL_DDRADL4:     equ    4                                         ; Port ADL data direction select 4
DDRADL_DDRADL5:     equ    5                                         ; Port ADL data direction select 5
DDRADL_DDRADL6:     equ    6                                         ; Port ADL data direction select 6
DDRADL_DDRADL7:     equ    7                                         ; Port ADL data direction select 7
; bit position masks
mDDRADL_DDRADL0:    equ    %00000001
mDDRADL_DDRADL1:    equ    %00000010
mDDRADL_DDRADL2:    equ    %00000100
mDDRADL_DDRADL3:    equ    %00001000
mDDRADL_DDRADL4:    equ    %00010000
mDDRADL_DDRADL5:    equ    %00100000
mDDRADL_DDRADL6:    equ    %01000000
mDDRADL_DDRADL7:    equ    %10000000


;*** PERADL - Port ADL Pull Device Enable Register; 0x00000287 ***
PERADL:             equ    $00000287                                ;*** PERADL - Port ADL Pull Device Enable Register; 0x00000287 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERADL_PERADL0:     equ    0                                         ; Port ADL pull device enable 0
PERADL_PERADL1:     equ    1                                         ; Port ADL pull device enable 1
PERADL_PERADL2:     equ    2                                         ; Port ADL pull device enable 2
PERADL_PERADL3:     equ    3                                         ; Port ADL pull device enable 3
PERADL_PERADL4:     equ    4                                         ; Port ADL pull device enable 4
PERADL_PERADL5:     equ    5                                         ; Port ADL pull device enable 5
PERADL_PERADL6:     equ    6                                         ; Port ADL pull device enable 6
PERADL_PERADL7:     equ    7                                         ; Port ADL pull device enable 7
; bit position masks
mPERADL_PERADL0:    equ    %00000001
mPERADL_PERADL1:    equ    %00000010
mPERADL_PERADL2:    equ    %00000100
mPERADL_PERADL3:    equ    %00001000
mPERADL_PERADL4:    equ    %00010000
mPERADL_PERADL5:    equ    %00100000
mPERADL_PERADL6:    equ    %01000000
mPERADL_PERADL7:    equ    %10000000


;*** PPSADL - Port ADL Polarity Select Register; 0x00000289 ***
PPSADL:             equ    $00000289                                ;*** PPSADL - Port ADL Polarity Select Register; 0x00000289 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSADL_PPSADL0:     equ    0                                         ; Port ADL pull polarity select 0
PPSADL_PPSADL1:     equ    1                                         ; Port ADL pull polarity select 1
PPSADL_PPSADL2:     equ    2                                         ; Port ADL pull polarity select 2
PPSADL_PPSADL3:     equ    3                                         ; Port ADL pull polarity select 3
PPSADL_PPSADL4:     equ    4                                         ; Port ADL pull polarity select 4
PPSADL_PPSADL5:     equ    5                                         ; Port ADL pull polarity select 5
PPSADL_PPSADL6:     equ    6                                         ; Port ADL pull polarity select 6
PPSADL_PPSADL7:     equ    7                                         ; Port ADL pull polarity select 7
; bit position masks
mPPSADL_PPSADL0:    equ    %00000001
mPPSADL_PPSADL1:    equ    %00000010
mPPSADL_PPSADL2:    equ    %00000100
mPPSADL_PPSADL3:    equ    %00001000
mPPSADL_PPSADL4:    equ    %00010000
mPPSADL_PPSADL5:    equ    %00100000
mPPSADL_PPSADL6:    equ    %01000000
mPPSADL_PPSADL7:    equ    %10000000


;*** PIEADL - Port ADL Interrupt Enable Register; 0x0000028D ***
PIEADL:             equ    $0000028D                                ;*** PIEADL - Port ADL Interrupt Enable Register; 0x0000028D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIEADL_PIEADL0:     equ    0                                         ; Port ADL interrupt enable 0
PIEADL_PIEADL1:     equ    1                                         ; Port ADL interrupt enable 1
PIEADL_PIEADL2:     equ    2                                         ; Port ADL interrupt enable 2
PIEADL_PIEADL3:     equ    3                                         ; Port ADL interrupt enable 3
PIEADL_PIEADL4:     equ    4                                         ; Port ADL interrupt enable 4
PIEADL_PIEADL5:     equ    5                                         ; Port ADL interrupt enable 5
PIEADL_PIEADL6:     equ    6                                         ; Port ADL interrupt enable 6
PIEADL_PIEADL7:     equ    7                                         ; Port ADL interrupt enable 7
; bit position masks
mPIEADL_PIEADL0:    equ    %00000001
mPIEADL_PIEADL1:    equ    %00000010
mPIEADL_PIEADL2:    equ    %00000100
mPIEADL_PIEADL3:    equ    %00001000
mPIEADL_PIEADL4:    equ    %00010000
mPIEADL_PIEADL5:    equ    %00100000
mPIEADL_PIEADL6:    equ    %01000000
mPIEADL_PIEADL7:    equ    %10000000


;*** PIFADL - Port ADL Interrupt Flag Register; 0x0000028F ***
PIFADL:             equ    $0000028F                                ;*** PIFADL - Port ADL Interrupt Flag Register; 0x0000028F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIFADL_PIFADL0:     equ    0                                         ; Port ADL interrupt flag 0
PIFADL_PIFADL1:     equ    1                                         ; Port ADL interrupt flag 1
PIFADL_PIFADL2:     equ    2                                         ; Port ADL interrupt flag 2
PIFADL_PIFADL3:     equ    3                                         ; Port ADL interrupt flag 3
PIFADL_PIFADL4:     equ    4                                         ; Port ADL interrupt flag 4
PIFADL_PIFADL5:     equ    5                                         ; Port ADL interrupt flag 5
PIFADL_PIFADL6:     equ    6                                         ; Port ADL interrupt flag 6
PIFADL_PIFADL7:     equ    7                                         ; Port ADL interrupt flag 7
; bit position masks
mPIFADL_PIFADL0:    equ    %00000001
mPIFADL_PIFADL1:    equ    %00000010
mPIFADL_PIFADL2:    equ    %00000100
mPIFADL_PIFADL3:    equ    %00001000
mPIFADL_PIFADL4:    equ    %00010000
mPIFADL_PIFADL5:    equ    %00100000
mPIFADL_PIFADL6:    equ    %01000000
mPIFADL_PIFADL7:    equ    %10000000


;*** DIENADL - Digital Input Enable Register; 0x00000299 ***
DIENADL:            equ    $00000299                                ;*** DIENADL - Digital Input Enable Register; 0x00000299 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DIENADL_DIENADL0:   equ    0                                         ; Digital input enable 0
DIENADL_DIENADL1:   equ    1                                         ; Digital input enable 1
DIENADL_DIENADL2:   equ    2                                         ; Digital input enable 2
DIENADL_DIENADL3:   equ    3                                         ; Digital input enable 3
DIENADL_DIENADL4:   equ    4                                         ; Digital input enable 4
DIENADL_DIENADL5:   equ    5                                         ; Digital input enable 5
DIENADL_DIENADL6:   equ    6                                         ; Digital input enable 6
DIENADL_DIENADL7:   equ    7                                         ; Digital input enable 7
; bit position masks
mDIENADL_DIENADL0:  equ    %00000001
mDIENADL_DIENADL1:  equ    %00000010
mDIENADL_DIENADL2:  equ    %00000100
mDIENADL_DIENADL3:  equ    %00001000
mDIENADL_DIENADL4:  equ    %00010000
mDIENADL_DIENADL5:  equ    %00100000
mDIENADL_DIENADL6:  equ    %01000000
mDIENADL_DIENADL7:  equ    %10000000


;*** PTT - Port T Data Register; 0x000002C0 ***
PTT:                equ    $000002C0                                ;*** PTT - Port T Data Register; 0x000002C0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTT_PTT0:           equ    0                                         ; Port T general purpose I/O data 0
PTT_PTT1:           equ    1                                         ; Port T general purpose I/O data 1
PTT_PTT2:           equ    2                                         ; Port T general purpose I/O data 2
PTT_PTT3:           equ    3                                         ; Port T general purpose I/O data 3
PTT_PTT4:           equ    4                                         ; Port T general purpose I/O data 4
PTT_PTT5:           equ    5                                         ; Port T general purpose I/O data 5
PTT_PTT6:           equ    6                                         ; Port T general purpose I/O data 6
PTT_PTT7:           equ    7                                         ; Port T general purpose I/O data 7
; bit position masks
mPTT_PTT0:          equ    %00000001
mPTT_PTT1:          equ    %00000010
mPTT_PTT2:          equ    %00000100
mPTT_PTT3:          equ    %00001000
mPTT_PTT4:          equ    %00010000
mPTT_PTT5:          equ    %00100000
mPTT_PTT6:          equ    %01000000
mPTT_PTT7:          equ    %10000000


;*** PTIT - Port T Input Register; 0x000002C1 ***
PTIT:               equ    $000002C1                                ;*** PTIT - Port T Input Register; 0x000002C1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIT_PTIT0:         equ    0                                         ; Port T data input 0
PTIT_PTIT1:         equ    1                                         ; Port T data input 1
PTIT_PTIT2:         equ    2                                         ; Port T data input 2
PTIT_PTIT3:         equ    3                                         ; Port T data input 3
PTIT_PTIT4:         equ    4                                         ; Port T data input 4
PTIT_PTIT5:         equ    5                                         ; Port T data input 5
PTIT_PTIT6:         equ    6                                         ; Port T data input 6
PTIT_PTIT7:         equ    7                                         ; Port T data input 7
; bit position masks
mPTIT_PTIT0:        equ    %00000001
mPTIT_PTIT1:        equ    %00000010
mPTIT_PTIT2:        equ    %00000100
mPTIT_PTIT3:        equ    %00001000
mPTIT_PTIT4:        equ    %00010000
mPTIT_PTIT5:        equ    %00100000
mPTIT_PTIT6:        equ    %01000000
mPTIT_PTIT7:        equ    %10000000


;*** DDRT - Port T Data Direction Register; 0x000002C2 ***
DDRT:               equ    $000002C2                                ;*** DDRT - Port T Data Direction Register; 0x000002C2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRT_DDRT0:         equ    0                                         ; Port T data direction select 0
DDRT_DDRT1:         equ    1                                         ; Port T data direction select 1
DDRT_DDRT2:         equ    2                                         ; Port T data direction select 2
DDRT_DDRT3:         equ    3                                         ; Port T data direction select 3
DDRT_DDRT4:         equ    4                                         ; Port T data direction select 4
DDRT_DDRT5:         equ    5                                         ; Port T data direction select 5
DDRT_DDRT6:         equ    6                                         ; Port T data direction select 6
DDRT_DDRT7:         equ    7                                         ; Port T data direction select 7
; bit position masks
mDDRT_DDRT0:        equ    %00000001
mDDRT_DDRT1:        equ    %00000010
mDDRT_DDRT2:        equ    %00000100
mDDRT_DDRT3:        equ    %00001000
mDDRT_DDRT4:        equ    %00010000
mDDRT_DDRT5:        equ    %00100000
mDDRT_DDRT6:        equ    %01000000
mDDRT_DDRT7:        equ    %10000000


;*** PERT - Port T Pull Device Enable Register; 0x000002C3 ***
PERT:               equ    $000002C3                                ;*** PERT - Port T Pull Device Enable Register; 0x000002C3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERT_PERT0:         equ    0                                         ; Port T pull device enable 0
PERT_PERT1:         equ    1                                         ; Port T pull device enable 1
PERT_PERT2:         equ    2                                         ; Port T pull device enable 2
PERT_PERT3:         equ    3                                         ; Port T pull device enable 3
PERT_PERT4:         equ    4                                         ; Port T pull device enable 4
PERT_PERT5:         equ    5                                         ; Port T pull device enable 5
PERT_PERT6:         equ    6                                         ; Port T pull device enable 6
PERT_PERT7:         equ    7                                         ; Port T pull device enable 7
; bit position masks
mPERT_PERT0:        equ    %00000001
mPERT_PERT1:        equ    %00000010
mPERT_PERT2:        equ    %00000100
mPERT_PERT3:        equ    %00001000
mPERT_PERT4:        equ    %00010000
mPERT_PERT5:        equ    %00100000
mPERT_PERT6:        equ    %01000000
mPERT_PERT7:        equ    %10000000


;*** PPST - Port T Polarity Select Register; 0x000002C4 ***
PPST:               equ    $000002C4                                ;*** PPST - Port T Polarity Select Register; 0x000002C4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPST_PPST0:         equ    0                                         ; Port T pull polarity select 0
PPST_PPST1:         equ    1                                         ; Port T pull polarity select 1
PPST_PPST2:         equ    2                                         ; Port T pull polarity select 2
PPST_PPST3:         equ    3                                         ; Port T pull polarity select 3
PPST_PPST4:         equ    4                                         ; Port T pull polarity select 4
PPST_PPST5:         equ    5                                         ; Port T pull polarity select 5
PPST_PPST6:         equ    6                                         ; Port T pull polarity select 6
PPST_PPST7:         equ    7                                         ; Port T pull polarity select 7
; bit position masks
mPPST_PPST0:        equ    %00000001
mPPST_PPST1:        equ    %00000010
mPPST_PPST2:        equ    %00000100
mPPST_PPST3:        equ    %00001000
mPPST_PPST4:        equ    %00010000
mPPST_PPST5:        equ    %00100000
mPPST_PPST6:        equ    %01000000
mPPST_PPST7:        equ    %10000000


;*** PIET - Port T Interrupt Enable Register; 0x000002C6 ***
PIET:               equ    $000002C6                                ;*** PIET - Port T Interrupt Enable Register; 0x000002C6 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIET_PIET0:         equ    0                                         ; Port T interrupt enable 0
PIET_PIET1:         equ    1                                         ; Port T interrupt enable 1
PIET_PIET2:         equ    2                                         ; Port T interrupt enable 2
PIET_PIET3:         equ    3                                         ; Port T interrupt enable 3
PIET_PIET4:         equ    4                                         ; Port T interrupt enable 4
PIET_PIET5:         equ    5                                         ; Port T interrupt enable 5
PIET_PIET6:         equ    6                                         ; Port T interrupt enable 6
PIET_PIET7:         equ    7                                         ; Port T interrupt enable 7
; bit position masks
mPIET_PIET0:        equ    %00000001
mPIET_PIET1:        equ    %00000010
mPIET_PIET2:        equ    %00000100
mPIET_PIET3:        equ    %00001000
mPIET_PIET4:        equ    %00010000
mPIET_PIET5:        equ    %00100000
mPIET_PIET6:        equ    %01000000
mPIET_PIET7:        equ    %10000000


;*** PIFT - Port T Interrupt Flag Register; 0x000002C7 ***
PIFT:               equ    $000002C7                                ;*** PIFT - Port T Interrupt Flag Register; 0x000002C7 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIFT_PIFT0:         equ    0                                         ; Port T interrupt flag 0
PIFT_PIFT1:         equ    1                                         ; Port T interrupt flag 1
PIFT_PIFT2:         equ    2                                         ; Port T interrupt flag 2
PIFT_PIFT3:         equ    3                                         ; Port T interrupt flag 3
PIFT_PIFT4:         equ    4                                         ; Port T interrupt flag 4
PIFT_PIFT5:         equ    5                                         ; Port T interrupt flag 5
PIFT_PIFT6:         equ    6                                         ; Port T interrupt flag 6
PIFT_PIFT7:         equ    7                                         ; Port T interrupt flag 7
; bit position masks
mPIFT_PIFT0:        equ    %00000001
mPIFT_PIFT1:        equ    %00000010
mPIFT_PIFT2:        equ    %00000100
mPIFT_PIFT3:        equ    %00001000
mPIFT_PIFT4:        equ    %00010000
mPIFT_PIFT5:        equ    %00100000
mPIFT_PIFT6:        equ    %01000000
mPIFT_PIFT7:        equ    %10000000


;*** PTS - Port S Data Register; 0x000002D0 ***
PTS:                equ    $000002D0                                ;*** PTS - Port S Data Register; 0x000002D0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTS_PTS0:           equ    0                                         ; Port S general purpose I/O data 0
PTS_PTS1:           equ    1                                         ; Port S general purpose I/O data 1
PTS_PTS2:           equ    2                                         ; Port S general purpose I/O data 2
PTS_PTS3:           equ    3                                         ; Port S general purpose I/O data 3
PTS_PTS4:           equ    4                                         ; Port S general purpose I/O data 4
PTS_PTS5:           equ    5                                         ; Port S general purpose I/O data 5
PTS_PTS6:           equ    6                                         ; Port S general purpose I/O data 6
PTS_PTS7:           equ    7                                         ; Port S general purpose I/O data 7
; bit position masks
mPTS_PTS0:          equ    %00000001
mPTS_PTS1:          equ    %00000010
mPTS_PTS2:          equ    %00000100
mPTS_PTS3:          equ    %00001000
mPTS_PTS4:          equ    %00010000
mPTS_PTS5:          equ    %00100000
mPTS_PTS6:          equ    %01000000
mPTS_PTS7:          equ    %10000000


;*** PTIS - Port S Input Register; 0x000002D1 ***
PTIS:               equ    $000002D1                                ;*** PTIS - Port S Input Register; 0x000002D1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIS_PTIS0:         equ    0                                         ; Port S data input 0
PTIS_PTIS1:         equ    1                                         ; Port S data input 1
PTIS_PTIS2:         equ    2                                         ; Port S data input 2
PTIS_PTIS3:         equ    3                                         ; Port S data input 3
PTIS_PTIS4:         equ    4                                         ; Port S data input 4
PTIS_PTIS5:         equ    5                                         ; Port S data input 5
PTIS_PTIS6:         equ    6                                         ; Port S data input 6
PTIS_PTIS7:         equ    7                                         ; Port S data input 7
; bit position masks
mPTIS_PTIS0:        equ    %00000001
mPTIS_PTIS1:        equ    %00000010
mPTIS_PTIS2:        equ    %00000100
mPTIS_PTIS3:        equ    %00001000
mPTIS_PTIS4:        equ    %00010000
mPTIS_PTIS5:        equ    %00100000
mPTIS_PTIS6:        equ    %01000000
mPTIS_PTIS7:        equ    %10000000


;*** DDRS - Port S Data Direction Register; 0x000002D2 ***
DDRS:               equ    $000002D2                                ;*** DDRS - Port S Data Direction Register; 0x000002D2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRS_DDRS0:         equ    0                                         ; Port S data direction select 0
DDRS_DDRS1:         equ    1                                         ; Port S data direction select 1
DDRS_DDRS2:         equ    2                                         ; Port S data direction select 2
DDRS_DDRS3:         equ    3                                         ; Port S data direction select 3
DDRS_DDRS4:         equ    4                                         ; Port S data direction select 4
DDRS_DDRS5:         equ    5                                         ; Port S data direction select 5
DDRS_DDRS6:         equ    6                                         ; Port S data direction select 6
DDRS_DDRS7:         equ    7                                         ; Port S data direction select 7
; bit position masks
mDDRS_DDRS0:        equ    %00000001
mDDRS_DDRS1:        equ    %00000010
mDDRS_DDRS2:        equ    %00000100
mDDRS_DDRS3:        equ    %00001000
mDDRS_DDRS4:        equ    %00010000
mDDRS_DDRS5:        equ    %00100000
mDDRS_DDRS6:        equ    %01000000
mDDRS_DDRS7:        equ    %10000000


;*** PERS - Port S Pull Device Enable Register; 0x000002D3 ***
PERS:               equ    $000002D3                                ;*** PERS - Port S Pull Device Enable Register; 0x000002D3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERS_PERS0:         equ    0                                         ; Port S pull device enable 0
PERS_PERS1:         equ    1                                         ; Port S pull device enable 1
PERS_PERS2:         equ    2                                         ; Port S pull device enable 2
PERS_PERS3:         equ    3                                         ; Port S pull device enable 3
PERS_PERS4:         equ    4                                         ; Port S pull device enable 4
PERS_PERS5:         equ    5                                         ; Port S pull device enable 5
PERS_PERS6:         equ    6                                         ; Port S pull device enable 6
PERS_PERS7:         equ    7                                         ; Port S pull device enable 7
; bit position masks
mPERS_PERS0:        equ    %00000001
mPERS_PERS1:        equ    %00000010
mPERS_PERS2:        equ    %00000100
mPERS_PERS3:        equ    %00001000
mPERS_PERS4:        equ    %00010000
mPERS_PERS5:        equ    %00100000
mPERS_PERS6:        equ    %01000000
mPERS_PERS7:        equ    %10000000


;*** PPSS - Port S Polarity Select Register; 0x000002D4 ***
PPSS:               equ    $000002D4                                ;*** PPSS - Port S Polarity Select Register; 0x000002D4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSS_PPSS0:         equ    0                                         ; Port S pull polarity select 0
PPSS_PPSS1:         equ    1                                         ; Port S pull polarity select 1
PPSS_PPSS2:         equ    2                                         ; Port S pull polarity select 2
PPSS_PPSS3:         equ    3                                         ; Port S pull polarity select 3
PPSS_PPSS4:         equ    4                                         ; Port S pull polarity select 4
PPSS_PPSS5:         equ    5                                         ; Port S pull polarity select 5
PPSS_PPSS6:         equ    6                                         ; Port S pull polarity select 6
PPSS_PPSS7:         equ    7                                         ; Port S pull polarity select 7
; bit position masks
mPPSS_PPSS0:        equ    %00000001
mPPSS_PPSS1:        equ    %00000010
mPPSS_PPSS2:        equ    %00000100
mPPSS_PPSS3:        equ    %00001000
mPPSS_PPSS4:        equ    %00010000
mPPSS_PPSS5:        equ    %00100000
mPPSS_PPSS6:        equ    %01000000
mPPSS_PPSS7:        equ    %10000000


;*** PIES - Port S Interrupt Enable Register; 0x000002D6 ***
PIES:               equ    $000002D6                                ;*** PIES - Port S Interrupt Enable Register; 0x000002D6 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIES_PIES0:         equ    0                                         ; Port S interrupt enable 0
PIES_PIES1:         equ    1                                         ; Port S interrupt enable 1
PIES_PIES2:         equ    2                                         ; Port S interrupt enable 2
PIES_PIES3:         equ    3                                         ; Port S interrupt enable 3
PIES_PIES4:         equ    4                                         ; Port S interrupt enable 4
PIES_PIES5:         equ    5                                         ; Port S interrupt enable 5
PIES_PIES6:         equ    6                                         ; Port S interrupt enable 6
PIES_PIES7:         equ    7                                         ; Port S interrupt enable 7
; bit position masks
mPIES_PIES0:        equ    %00000001
mPIES_PIES1:        equ    %00000010
mPIES_PIES2:        equ    %00000100
mPIES_PIES3:        equ    %00001000
mPIES_PIES4:        equ    %00010000
mPIES_PIES5:        equ    %00100000
mPIES_PIES6:        equ    %01000000
mPIES_PIES7:        equ    %10000000


;*** PIFS - Port S Interrupt Flag Register; 0x000002D7 ***
PIFS:               equ    $000002D7                                ;*** PIFS - Port S Interrupt Flag Register; 0x000002D7 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PIFS_PIFS0:         equ    0                                         ; Port S interrupt flag 0
PIFS_PIFS1:         equ    1                                         ; Port S interrupt flag 1
PIFS_PIFS2:         equ    2                                         ; Port S interrupt flag 2
PIFS_PIFS3:         equ    3                                         ; Port S interrupt flag 3
PIFS_PIFS4:         equ    4                                         ; Port S interrupt flag 4
PIFS_PIFS5:         equ    5                                         ; Port S interrupt flag 5
PIFS_PIFS6:         equ    6                                         ; Port S interrupt flag 6
PIFS_PIFS7:         equ    7                                         ; Port S interrupt flag 7
; bit position masks
mPIFS_PIFS0:        equ    %00000001
mPIFS_PIFS1:        equ    %00000010
mPIFS_PIFS2:        equ    %00000100
mPIFS_PIFS3:        equ    %00001000
mPIFS_PIFS4:        equ    %00010000
mPIFS_PIFS5:        equ    %00100000
mPIFS_PIFS6:        equ    %01000000
mPIFS_PIFS7:        equ    %10000000


;*** WOMS - Port S Wired-Or Mode Register; 0x000002DF ***
WOMS:               equ    $000002DF                                ;*** WOMS - Port S Wired-Or Mode Register; 0x000002DF ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
WOMS_WOMS0:         equ    0                                         ; Port S wired-or mode 0
WOMS_WOMS1:         equ    1                                         ; Port S wired-or mode 1
WOMS_WOMS2:         equ    2                                         ; Port S wired-or mode 2
WOMS_WOMS3:         equ    3                                         ; Port S wired-or mode 3
WOMS_WOMS4:         equ    4                                         ; Port S wired-or mode 4
WOMS_WOMS5:         equ    5                                         ; Port S wired-or mode 5
WOMS_WOMS6:         equ    6                                         ; Port S wired-or mode 6
WOMS_WOMS7:         equ    7                                         ; Port S wired-or mode bit 7
; bit position masks
mWOMS_WOMS0:        equ    %00000001
mWOMS_WOMS1:        equ    %00000010
mWOMS_WOMS2:        equ    %00000100
mWOMS_WOMS3:        equ    %00001000
mWOMS_WOMS4:        equ    %00010000
mWOMS_WOMS5:        equ    %00100000
mWOMS_WOMS6:        equ    %01000000
mWOMS_WOMS7:        equ    %10000000


;*** PTP - Port P Data Register; 0x000002F0 ***
PTP:                equ    $000002F0                                ;*** PTP - Port P Data Register; 0x000002F0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTP_PTP0:           equ    0                                         ; Port P general purpose I/O data 0
PTP_PTP1:           equ    1                                         ; Port P general purpose I/O data 1
PTP_PTP2:           equ    2                                         ; Port P general purpose I/O data 2
PTP_PTP3:           equ    3                                         ; Port P general purpose I/O data 3
PTP_PTP4:           equ    4                                         ; Port P general purpose I/O data 4
PTP_PTP5:           equ    5                                         ; Port P general purpose I/O data 5
PTP_PTP6:           equ    6                                         ; Port P general purpose I/O data 6
PTP_PTP7:           equ    7                                         ; Port P general purpose I/O data 7
; bit position masks
mPTP_PTP0:          equ    %00000001
mPTP_PTP1:          equ    %00000010
mPTP_PTP2:          equ    %00000100
mPTP_PTP3:          equ    %00001000
mPTP_PTP4:          equ    %00010000
mPTP_PTP5:          equ    %00100000
mPTP_PTP6:          equ    %01000000
mPTP_PTP7:          equ    %10000000


;*** PTIP - Port P Input Register; 0x000002F1 ***
PTIP:               equ    $000002F1                                ;*** PTIP - Port P Input Register; 0x000002F1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIP_PTIP0:         equ    0                                         ; Port P data input 0
PTIP_PTIP1:         equ    1                                         ; Port P data input 1
PTIP_PTIP2:         equ    2                                         ; Port P data input 2
PTIP_PTIP3:         equ    3                                         ; Port P data input 3
PTIP_PTIP4:         equ    4                                         ; Port P data input 4
PTIP_PTIP5:         equ    5                                         ; Port P data input 5
PTIP_PTIP6:         equ    6                                         ; Port P data input 6
PTIP_PTIP7:         equ    7                                         ; Port P data input 7
; bit position masks
mPTIP_PTIP0:        equ    %00000001
mPTIP_PTIP1:        equ    %00000010
mPTIP_PTIP2:        equ    %00000100
mPTIP_PTIP3:        equ    %00001000
mPTIP_PTIP4:        equ    %00010000
mPTIP_PTIP5:        equ    %00100000
mPTIP_PTIP6:        equ    %01000000
mPTIP_PTIP7:        equ    %10000000


;*** DDRP - Port P Data Direction Register; 0x000002F2 ***
DDRP:               equ    $000002F2                                ;*** DDRP - Port P Data Direction Register; 0x000002F2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRP_DDRP0:         equ    0                                         ; Port P data direction select 0
DDRP_DDRP1:         equ    1                                         ; Port P data direction select 1
DDRP_DDRP2:         equ    2                                         ; Port P data direction select 2
DDRP_DDRP3:         equ    3                                         ; Port P data direction select 3
DDRP_DDRP4:         equ    4                                         ; Port P data direction select 4
DDRP_DDRP5:         equ    5                                         ; Port P data direction select 5
DDRP_DDRP6:         equ    6                                         ; Port P data direction select 6
DDRP_DDRP7:         equ    7                                         ; Port P data direction select 7
; bit position masks
mDDRP_DDRP0:        equ    %00000001
mDDRP_DDRP1:        equ    %00000010
mDDRP_DDRP2:        equ    %00000100
mDDRP_DDRP3:        equ    %00001000
mDDRP_DDRP4:        equ    %00010000
mDDRP_DDRP5:        equ    %00100000
mDDRP_DDRP6:        equ    %01000000
mDDRP_DDRP7:        equ    %10000000


;*** PERP - Port P Pull Device Enable Register; 0x000002F3 ***
PERP:               equ    $000002F3                                ;*** PERP - Port P Pull Device Enable Register; 0x000002F3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERP_PERP0:         equ    0                                         ; Port P pull device enable 0
PERP_PERP1:         equ    1                                         ; Port P pull device enable 1
PERP_PERP2:         equ    2                                         ; Port P pull device enable 2
PERP_PERP3:         equ    3                                         ; Port P pull device enable 3
PERP_PERP4:         equ    4                                         ; Port P pull device enable 4
PERP_PERP5:         equ    5                                         ; Port P pull device enable 5
PERP_PERP6:         equ    6                                         ; Port P pull device enable 6
PERP_PERP7:         equ    7                                         ; Port P pull device enable 7
; bit position masks
mPERP_PERP0:        equ    %00000001
mPERP_PERP1:        equ    %00000010
mPERP_PERP2:        equ    %00000100
mPERP_PERP3:        equ    %00001000
mPERP_PERP4:        equ    %00010000
mPERP_PERP5:        equ    %00100000
mPERP_PERP6:        equ    %01000000
mPERP_PERP7:        equ    %10000000


;*** PPSP - Port P Polarity Select Register; 0x000002F4 ***
PPSP:               equ    $000002F4                                ;*** PPSP - Port P Polarity Select Register; 0x000002F4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSP_PPSP0:         equ    0                                         ; Port P pull polarity select 0
PPSP_PPSP1:         equ    1                                         ; Port P pull polarity select 1
PPSP_PPSP2:         equ    2                                         ; Port P pull polarity select 2
PPSP_PPSP3:         equ    3                                         ; Port P pull polarity select 3
PPSP_PPSP4:         equ    4                                         ; Port P pull polarity select 4
PPSP_PPSP5:         equ    5                                         ; Port P pull polarity select 5
PPSP_PPSP6:         equ    6                                         ; Port P pull polarity select 6
PPSP_PPSP7:         equ    7                                         ; Port P pull polarity select 7
; bit position masks
mPPSP_PPSP0:        equ    %00000001
mPPSP_PPSP1:        equ    %00000010
mPPSP_PPSP2:        equ    %00000100
mPPSP_PPSP3:        equ    %00001000
mPPSP_PPSP4:        equ    %00010000
mPPSP_PPSP5:        equ    %00100000
mPPSP_PPSP6:        equ    %01000000
mPPSP_PPSP7:        equ    %10000000


;*** PTH - Port H Data Register; 0x00000300 ***
PTH:                equ    $00000300                                ;*** PTH - Port H Data Register; 0x00000300 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTH_PTH0:           equ    0                                         ; Port H general purpose I/O data 0
PTH_PTH1:           equ    1                                         ; Port H general purpose I/O data 1
PTH_PTH2:           equ    2                                         ; Port H general purpose I/O data 2
PTH_PTH3:           equ    3                                         ; Port H general purpose I/O data 3
PTH_PTH4:           equ    4                                         ; Port H general purpose I/O data 4
PTH_PTH5:           equ    5                                         ; Port H general purpose I/O data 5
PTH_PTH6:           equ    6                                         ; Port H general purpose I/O data 6
PTH_PTH7:           equ    7                                         ; Port H general purpose I/O data 7
; bit position masks
mPTH_PTH0:          equ    %00000001
mPTH_PTH1:          equ    %00000010
mPTH_PTH2:          equ    %00000100
mPTH_PTH3:          equ    %00001000
mPTH_PTH4:          equ    %00010000
mPTH_PTH5:          equ    %00100000
mPTH_PTH6:          equ    %01000000
mPTH_PTH7:          equ    %10000000


;*** PTIH - Port H Input Register; 0x00000301 ***
PTIH:               equ    $00000301                                ;*** PTIH - Port H Input Register; 0x00000301 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIH_PTIH0:         equ    0                                         ; Port H data input 0
PTIH_PTIH1:         equ    1                                         ; Port H data input 1
PTIH_PTIH2:         equ    2                                         ; Port H data input 2
PTIH_PTIH3:         equ    3                                         ; Port H data input 3
PTIH_PTIH4:         equ    4                                         ; Port H data input 4
PTIH_PTIH5:         equ    5                                         ; Port H data input 5
PTIH_PTIH6:         equ    6                                         ; Port H data input 6
PTIH_PTIH7:         equ    7                                         ; Port H data input 7
; bit position masks
mPTIH_PTIH0:        equ    %00000001
mPTIH_PTIH1:        equ    %00000010
mPTIH_PTIH2:        equ    %00000100
mPTIH_PTIH3:        equ    %00001000
mPTIH_PTIH4:        equ    %00010000
mPTIH_PTIH5:        equ    %00100000
mPTIH_PTIH6:        equ    %01000000
mPTIH_PTIH7:        equ    %10000000


;*** DDRH - Port H Data Direction Register; 0x00000302 ***
DDRH:               equ    $00000302                                ;*** DDRH - Port H Data Direction Register; 0x00000302 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRH_DDRH0:         equ    0                                         ; Port H data direction select 0
DDRH_DDRH1:         equ    1                                         ; Port H data direction select 1
DDRH_DDRH2:         equ    2                                         ; Port H data direction select 2
DDRH_DDRH3:         equ    3                                         ; Port H data direction select 3
DDRH_DDRH4:         equ    4                                         ; Port H data direction select 4
DDRH_DDRH5:         equ    5                                         ; Port H data direction select 5
DDRH_DDRH6:         equ    6                                         ; Port H data direction select 6
DDRH_DDRH7:         equ    7                                         ; Port H data direction select 7
; bit position masks
mDDRH_DDRH0:        equ    %00000001
mDDRH_DDRH1:        equ    %00000010
mDDRH_DDRH2:        equ    %00000100
mDDRH_DDRH3:        equ    %00001000
mDDRH_DDRH4:        equ    %00010000
mDDRH_DDRH5:        equ    %00100000
mDDRH_DDRH6:        equ    %01000000
mDDRH_DDRH7:        equ    %10000000


;*** PERH - Port H Pull Device Enable Register; 0x00000303 ***
PERH:               equ    $00000303                                ;*** PERH - Port H Pull Device Enable Register; 0x00000303 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERH_PERH0:         equ    0                                         ; Port H pull device enable 0
PERH_PERH1:         equ    1                                         ; Port H pull device enable 1
PERH_PERH2:         equ    2                                         ; Port H pull device enable 2
PERH_PERH3:         equ    3                                         ; Port H pull device enable 3
PERH_PERH4:         equ    4                                         ; Port H pull device enable 4
PERH_PERH5:         equ    5                                         ; Port H pull device enable 5
PERH_PERH6:         equ    6                                         ; Port H pull device enable 6
PERH_PERH7:         equ    7                                         ; Port H pull device enable 7
; bit position masks
mPERH_PERH0:        equ    %00000001
mPERH_PERH1:        equ    %00000010
mPERH_PERH2:        equ    %00000100
mPERH_PERH3:        equ    %00001000
mPERH_PERH4:        equ    %00010000
mPERH_PERH5:        equ    %00100000
mPERH_PERH6:        equ    %01000000
mPERH_PERH7:        equ    %10000000


;*** PPSH - Port H Polarity Select Register; 0x00000304 ***
PPSH:               equ    $00000304                                ;*** PPSH - Port H Polarity Select Register; 0x00000304 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSH_PPSH0:         equ    0                                         ; Port H pull polarity select 0
PPSH_PPSH1:         equ    1                                         ; Port H pull polarity select 1
PPSH_PPSH2:         equ    2                                         ; Port H pull polarity select 2
PPSH_PPSH3:         equ    3                                         ; Port H pull polarity select 3
PPSH_PPSH4:         equ    4                                         ; Port H pull polarity select 4
PPSH_PPSH5:         equ    5                                         ; Port H pull polarity select 5
PPSH_PPSH6:         equ    6                                         ; Port H pull polarity select 6
PPSH_PPSH7:         equ    7                                         ; Port H pull polarity select 7
; bit position masks
mPPSH_PPSH0:        equ    %00000001
mPPSH_PPSH1:        equ    %00000010
mPPSH_PPSH2:        equ    %00000100
mPPSH_PPSH3:        equ    %00001000
mPPSH_PPSH4:        equ    %00010000
mPPSH_PPSH5:        equ    %00100000
mPPSH_PPSH6:        equ    %01000000
mPPSH_PPSH7:        equ    %10000000


;*** PTJ - Port J Data Register; 0x00000310 ***
PTJ:                equ    $00000310                                ;*** PTJ - Port J Data Register; 0x00000310 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTJ_PTJ0:           equ    0                                         ; Port J general purpose I/O data 0
PTJ_PTJ1:           equ    1                                         ; Port J general purpose I/O data 1
PTJ_PTJ2:           equ    2                                         ; Port J general purpose I/O data 2
PTJ_PTJ3:           equ    3                                         ; Port J general purpose I/O data 3
; bit position masks
mPTJ_PTJ0:          equ    %00000001
mPTJ_PTJ1:          equ    %00000010
mPTJ_PTJ2:          equ    %00000100
mPTJ_PTJ3:          equ    %00001000


;*** PTIJ - Port J Input Register; 0x00000311 ***
PTIJ:               equ    $00000311                                ;*** PTIJ - Port J Input Register; 0x00000311 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIJ_PTIJ0:         equ    0                                         ; Port J data input 0
PTIJ_PTIJ1:         equ    1                                         ; Port J data input 1
PTIJ_PTIJ2:         equ    2                                         ; Port J data input 2
PTIJ_PTIJ3:         equ    3                                         ; Port J data input 3
; bit position masks
mPTIJ_PTIJ0:        equ    %00000001
mPTIJ_PTIJ1:        equ    %00000010
mPTIJ_PTIJ2:        equ    %00000100
mPTIJ_PTIJ3:        equ    %00001000


;*** DDRJ - Port J Data Direction Register; 0x00000312 ***
DDRJ:               equ    $00000312                                ;*** DDRJ - Port J Data Direction Register; 0x00000312 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRJ_DDRJ0:         equ    0                                         ; Port J data direction select 0
DDRJ_DDRJ1:         equ    1                                         ; Port J data direction select 1
DDRJ_DDRJ2:         equ    2                                         ; Port J data direction select 2
DDRJ_DDRJ3:         equ    3                                         ; Port J data direction select 3
; bit position masks
mDDRJ_DDRJ0:        equ    %00000001
mDDRJ_DDRJ1:        equ    %00000010
mDDRJ_DDRJ2:        equ    %00000100
mDDRJ_DDRJ3:        equ    %00001000


;*** PERJ - Port J Pull Device Enable Register; 0x00000313 ***
PERJ:               equ    $00000313                                ;*** PERJ - Port J Pull Device Enable Register; 0x00000313 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERJ_PERJ0:         equ    0                                         ; Port J pull device enable 0
PERJ_PERJ1:         equ    1                                         ; Port J pull device enable 1
PERJ_PERJ2:         equ    2                                         ; Port J pull device enable 2
PERJ_PERJ3:         equ    3                                         ; Port J pull device enable 3
; bit position masks
mPERJ_PERJ0:        equ    %00000001
mPERJ_PERJ1:        equ    %00000010
mPERJ_PERJ2:        equ    %00000100
mPERJ_PERJ3:        equ    %00001000


;*** PPSJ - Port J Polarity Select Register; 0x00000314 ***
PPSJ:               equ    $00000314                                ;*** PPSJ - Port J Polarity Select Register; 0x00000314 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSJ_PPSJ0:         equ    0                                         ; Port J pull polarity select 0
PPSJ_PPSJ1:         equ    1                                         ; Port J pull polarity select 1
PPSJ_PPSJ2:         equ    2                                         ; Port J pull polarity select 2
PPSJ_PPSJ3:         equ    3                                         ; Port J pull polarity select 3
; bit position masks
mPPSJ_PPSJ0:        equ    %00000001
mPPSJ_PPSJ1:        equ    %00000010
mPPSJ_PPSJ2:        equ    %00000100
mPPSJ_PPSJ3:        equ    %00001000


;*** PTG - Port G Data Register; 0x00000320 ***
PTG:                equ    $00000320                                ;*** PTG - Port G Data Register; 0x00000320 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTG_PTG0:           equ    0                                         ; Port G general purpose I/O data 0
PTG_PTG1:           equ    1                                         ; Port G general purpose I/O data 1
PTG_PTG2:           equ    2                                         ; Port G general purpose I/O data 2
PTG_PTG3:           equ    3                                         ; Port G general purpose I/O data 3
PTG_PTG4:           equ    4                                         ; Port G general purpose I/O data 4
PTG_PTG5:           equ    5                                         ; Port G general purpose I/O data 5
PTG_PTG6:           equ    6                                         ; Port G general purpose I/O data 6
PTG_PTG7:           equ    7                                         ; Port G general purpose I/O data 7
; bit position masks
mPTG_PTG0:          equ    %00000001
mPTG_PTG1:          equ    %00000010
mPTG_PTG2:          equ    %00000100
mPTG_PTG3:          equ    %00001000
mPTG_PTG4:          equ    %00010000
mPTG_PTG5:          equ    %00100000
mPTG_PTG6:          equ    %01000000
mPTG_PTG7:          equ    %10000000


;*** PTIG - Port G Input Register; 0x00000321 ***
PTIG:               equ    $00000321                                ;*** PTIG - Port G Input Register; 0x00000321 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIG_PTIG0:         equ    0                                         ; Port G data input 0
PTIG_PTIG1:         equ    1                                         ; Port G data input 1
PTIG_PTIG2:         equ    2                                         ; Port G data input 2
PTIG_PTIG3:         equ    3                                         ; Port G data input 3
PTIG_PTIG4:         equ    4                                         ; Port G data input 4
PTIG_PTIG5:         equ    5                                         ; Port G data input 5
PTIG_PTIG6:         equ    6                                         ; Port G data input 6
PTIG_PTIG7:         equ    7                                         ; Port G data input 7
; bit position masks
mPTIG_PTIG0:        equ    %00000001
mPTIG_PTIG1:        equ    %00000010
mPTIG_PTIG2:        equ    %00000100
mPTIG_PTIG3:        equ    %00001000
mPTIG_PTIG4:        equ    %00010000
mPTIG_PTIG5:        equ    %00100000
mPTIG_PTIG6:        equ    %01000000
mPTIG_PTIG7:        equ    %10000000


;*** DDRG - Port G Data Direction Register; 0x00000322 ***
DDRG:               equ    $00000322                                ;*** DDRG - Port G Data Direction Register; 0x00000322 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRG_DDRG0:         equ    0                                         ; Port G data direction select 0
DDRG_DDRG1:         equ    1                                         ; Port G data direction select 1
DDRG_DDRG2:         equ    2                                         ; Port G data direction select 2
DDRG_DDRG3:         equ    3                                         ; Port G data direction select 3
DDRG_DDRG4:         equ    4                                         ; Port G data direction select 4
DDRG_DDRG5:         equ    5                                         ; Port G data direction select 5
DDRG_DDRG6:         equ    6                                         ; Port G data direction select 6
DDRG_DDRG7:         equ    7                                         ; Port G data direction select 7
; bit position masks
mDDRG_DDRG0:        equ    %00000001
mDDRG_DDRG1:        equ    %00000010
mDDRG_DDRG2:        equ    %00000100
mDDRG_DDRG3:        equ    %00001000
mDDRG_DDRG4:        equ    %00010000
mDDRG_DDRG5:        equ    %00100000
mDDRG_DDRG6:        equ    %01000000
mDDRG_DDRG7:        equ    %10000000


;*** PERG - Port G Pull Device Enable Register; 0x00000323 ***
PERG:               equ    $00000323                                ;*** PERG - Port G Pull Device Enable Register; 0x00000323 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERG_PERG0:         equ    0                                         ; Port G pull device enable 0
PERG_PERG1:         equ    1                                         ; Port G pull device enable 1
PERG_PERG2:         equ    2                                         ; Port G pull device enable 2
PERG_PERG3:         equ    3                                         ; Port G pull device enable 3
PERG_PERG4:         equ    4                                         ; Port G pull device enable 4
PERG_PERG5:         equ    5                                         ; Port G pull device enable 5
PERG_PERG6:         equ    6                                         ; Port G pull device enable 6
PERG_PERG7:         equ    7                                         ; Port G pull device enable 7
; bit position masks
mPERG_PERG0:        equ    %00000001
mPERG_PERG1:        equ    %00000010
mPERG_PERG2:        equ    %00000100
mPERG_PERG3:        equ    %00001000
mPERG_PERG4:        equ    %00010000
mPERG_PERG5:        equ    %00100000
mPERG_PERG6:        equ    %01000000
mPERG_PERG7:        equ    %10000000


;*** PPSG - Port G Polarity Select Register; 0x00000324 ***
PPSG:               equ    $00000324                                ;*** PPSG - Port G Polarity Select Register; 0x00000324 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSG_PPSG0:         equ    0                                         ; Port G pull polarity select 0
PPSG_PPSG1:         equ    1                                         ; Port G pull polarity select 1
PPSG_PPSG2:         equ    2                                         ; Port G pull polarity select 2
PPSG_PPSG3:         equ    3                                         ; Port G pull polarity select 3
PPSG_PPSG4:         equ    4                                         ; Port G pull polarity select 4
PPSG_PPSG5:         equ    5                                         ; Port G pull polarity select 5
PPSG_PPSG6:         equ    6                                         ; Port G pull polarity select 6
PPSG_PPSG7:         equ    7                                         ; Port G pull polarity select 7
; bit position masks
mPPSG_PPSG0:        equ    %00000001
mPPSG_PPSG1:        equ    %00000010
mPPSG_PPSG2:        equ    %00000100
mPPSG_PPSG3:        equ    %00001000
mPPSG_PPSG4:        equ    %00010000
mPPSG_PPSG5:        equ    %00100000
mPPSG_PPSG6:        equ    %01000000
mPPSG_PPSG7:        equ    %10000000


;*** PTU - Port U Data Register; 0x00000350 ***
PTU:                equ    $00000350                                ;*** PTU - Port U Data Register; 0x00000350 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTU_PTU0:           equ    0                                         ; Port U general purpose I/O data 0
PTU_PTU1:           equ    1                                         ; Port U general purpose I/O data 1
PTU_PTU2:           equ    2                                         ; Port U general purpose I/O data 2
PTU_PTU3:           equ    3                                         ; Port U general purpose I/O data 3
PTU_PTU4:           equ    4                                         ; Port U general purpose I/O data 4
PTU_PTU5:           equ    5                                         ; Port U general purpose I/O data 5
PTU_PTU6:           equ    6                                         ; Port U general purpose I/O data 6
PTU_PTU7:           equ    7                                         ; Port U general purpose I/O data 7
; bit position masks
mPTU_PTU0:          equ    %00000001
mPTU_PTU1:          equ    %00000010
mPTU_PTU2:          equ    %00000100
mPTU_PTU3:          equ    %00001000
mPTU_PTU4:          equ    %00010000
mPTU_PTU5:          equ    %00100000
mPTU_PTU6:          equ    %01000000
mPTU_PTU7:          equ    %10000000


;*** PTIU - Port U Input Register; 0x00000351 ***
PTIU:               equ    $00000351                                ;*** PTIU - Port U Input Register; 0x00000351 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PTIU_PTIU0:         equ    0                                         ; Port U data input 0
PTIU_PTIU1:         equ    1                                         ; Port U data input 1
PTIU_PTIU2:         equ    2                                         ; Port U data input 2
PTIU_PTIU3:         equ    3                                         ; Port U data input 3
PTIU_PTIU4:         equ    4                                         ; Port U data input 4
PTIU_PTIU5:         equ    5                                         ; Port U data input 5
PTIU_PTIU6:         equ    6                                         ; Port U data input 6
PTIU_PTIU7:         equ    7                                         ; Port U data input 7
; bit position masks
mPTIU_PTIU0:        equ    %00000001
mPTIU_PTIU1:        equ    %00000010
mPTIU_PTIU2:        equ    %00000100
mPTIU_PTIU3:        equ    %00001000
mPTIU_PTIU4:        equ    %00010000
mPTIU_PTIU5:        equ    %00100000
mPTIU_PTIU6:        equ    %01000000
mPTIU_PTIU7:        equ    %10000000


;*** DDRU - Port U Data Direction Register; 0x00000352 ***
DDRU:               equ    $00000352                                ;*** DDRU - Port U Data Direction Register; 0x00000352 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DDRU_DDRU0:         equ    0                                         ; Port U data direction select 0
DDRU_DDRU1:         equ    1                                         ; Port U data direction select 1
DDRU_DDRU2:         equ    2                                         ; Port U data direction select 2
DDRU_DDRU3:         equ    3                                         ; Port U data direction select 3
DDRU_DDRU4:         equ    4                                         ; Port U data direction select 4
DDRU_DDRU5:         equ    5                                         ; Port U data direction select 5
DDRU_DDRU6:         equ    6                                         ; Port U data direction select 6
DDRU_DDRU7:         equ    7                                         ; Port U data direction select 7
; bit position masks
mDDRU_DDRU0:        equ    %00000001
mDDRU_DDRU1:        equ    %00000010
mDDRU_DDRU2:        equ    %00000100
mDDRU_DDRU3:        equ    %00001000
mDDRU_DDRU4:        equ    %00010000
mDDRU_DDRU5:        equ    %00100000
mDDRU_DDRU6:        equ    %01000000
mDDRU_DDRU7:        equ    %10000000


;*** PERU - Port U Pull Device Enable Register; 0x00000353 ***
PERU:               equ    $00000353                                ;*** PERU - Port U Pull Device Enable Register; 0x00000353 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PERU_PERU0:         equ    0                                         ; Port U pull device enable 0
PERU_PERU1:         equ    1                                         ; Port U pull device enable 1
PERU_PERU2:         equ    2                                         ; Port U pull device enable 2
PERU_PERU3:         equ    3                                         ; Port U pull device enable 3
PERU_PERU4:         equ    4                                         ; Port U pull device enable 4
PERU_PERU5:         equ    5                                         ; Port U pull device enable 5
PERU_PERU6:         equ    6                                         ; Port U pull device enable 6
PERU_PERU7:         equ    7                                         ; Port U pull device enable 7
; bit position masks
mPERU_PERU0:        equ    %00000001
mPERU_PERU1:        equ    %00000010
mPERU_PERU2:        equ    %00000100
mPERU_PERU3:        equ    %00001000
mPERU_PERU4:        equ    %00010000
mPERU_PERU5:        equ    %00100000
mPERU_PERU6:        equ    %01000000
mPERU_PERU7:        equ    %10000000


;*** PPSU - Port U Polarity Select Register; 0x00000354 ***
PPSU:               equ    $00000354                                ;*** PPSU - Port U Polarity Select Register; 0x00000354 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PPSU_PPSU0:         equ    0                                         ; Port U pull polarity select 0
PPSU_PPSU1:         equ    1                                         ; Port U pull polarity select 1
PPSU_PPSU2:         equ    2                                         ; Port U pull polarity select 2
PPSU_PPSU3:         equ    3                                         ; Port U pull polarity select 3
PPSU_PPSU4:         equ    4                                         ; Port U pull polarity select 4
PPSU_PPSU5:         equ    5                                         ; Port U pull polarity select 5
PPSU_PPSU6:         equ    6                                         ; Port U pull polarity select 6
PPSU_PPSU7:         equ    7                                         ; Port U pull polarity select 7
; bit position masks
mPPSU_PPSU0:        equ    %00000001
mPPSU_PPSU1:        equ    %00000010
mPPSU_PPSU2:        equ    %00000100
mPPSU_PPSU3:        equ    %00001000
mPPSU_PPSU4:        equ    %00010000
mPPSU_PPSU5:        equ    %00100000
mPPSU_PPSU6:        equ    %01000000
mPPSU_PPSU7:        equ    %10000000


;*** SRRU - Port U Slew Rate Register; 0x0000035E ***
SRRU:               equ    $0000035E                                ;*** SRRU - Port U Slew Rate Register; 0x0000035E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SRRU_SRRU0:         equ    0                                         ; Slew rate port U control 0
SRRU_SRRU1:         equ    1                                         ; Slew rate port U control 1
SRRU_SRRU2:         equ    2                                         ; Slew rate port U control 2
SRRU_SRRU3:         equ    3                                         ; Slew rate port U control 3
SRRU_SRRU4:         equ    4                                         ; Slew rate port U control 4
SRRU_SRRU5:         equ    5                                         ; Slew rate port U control 5
SRRU_SRRU6:         equ    6                                         ; Slew rate port U control 6
SRRU_SRRU7:         equ    7                                         ; Slew rate port U control 7
; bit position masks
mSRRU_SRRU0:        equ    %00000001
mSRRU_SRRU1:        equ    %00000010
mSRRU_SRRU2:        equ    %00000100
mSRRU_SRRU3:        equ    %00001000
mSRRU_SRRU4:        equ    %00010000
mSRRU_SRRU5:        equ    %00100000
mSRRU_SRRU6:        equ    %01000000
mSRRU_SRRU7:        equ    %10000000


;*** FCLKDIV - Flash Clock Divider Register; 0x00000380 ***
FCLKDIV:            equ    $00000380                                ;*** FCLKDIV - Flash Clock Divider Register; 0x00000380 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCLKDIV_FDIV0:      equ    0                                         ; Clock Divider Bit 0
FCLKDIV_FDIV1:      equ    1                                         ; Clock Divider Bit 1
FCLKDIV_FDIV2:      equ    2                                         ; Clock Divider Bit 2
FCLKDIV_FDIV3:      equ    3                                         ; Clock Divider Bit 3
FCLKDIV_FDIV4:      equ    4                                         ; Clock Divider Bit 4
FCLKDIV_FDIV5:      equ    5                                         ; Clock Divider Bit 5
FCLKDIV_FDIVLCK:    equ    6                                         ; Clock divider locked
FCLKDIV_FDIVLD:     equ    7                                         ; Clock Divider Loaded
; bit position masks
mFCLKDIV_FDIV0:     equ    %00000001
mFCLKDIV_FDIV1:     equ    %00000010
mFCLKDIV_FDIV2:     equ    %00000100
mFCLKDIV_FDIV3:     equ    %00001000
mFCLKDIV_FDIV4:     equ    %00010000
mFCLKDIV_FDIV5:     equ    %00100000
mFCLKDIV_FDIVLCK:   equ    %01000000
mFCLKDIV_FDIVLD:    equ    %10000000


;*** FSEC - Flash Security Register; 0x00000381 ***
FSEC:               equ    $00000381                                ;*** FSEC - Flash Security Register; 0x00000381 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FSEC_SEC0:          equ    0                                         ; Flash Security Bit 0
FSEC_SEC1:          equ    1                                         ; Flash Security Bit 1
FSEC_RNV2:          equ    2                                         ; Reserved Nonvolatile Bit 2
FSEC_RNV3:          equ    3                                         ; Reserved Nonvolatile Bit 3
FSEC_RNV4:          equ    4                                         ; Reserved Nonvolatile Bit 4
FSEC_RNV5:          equ    5                                         ; Reserved Nonvolatile Bit 5
FSEC_KEYEN0:        equ    6                                         ; Backdoor Key Security Enable Bit 0
FSEC_KEYEN1:        equ    7                                         ; Backdoor Key Security Enable Bit 1
; bit position masks
mFSEC_SEC0:         equ    %00000001
mFSEC_SEC1:         equ    %00000010
mFSEC_RNV2:         equ    %00000100
mFSEC_RNV3:         equ    %00001000
mFSEC_RNV4:         equ    %00010000
mFSEC_RNV5:         equ    %00100000
mFSEC_KEYEN0:       equ    %01000000
mFSEC_KEYEN1:       equ    %10000000


;*** FCCOBIX - Flash CCOB Index Register; 0x00000382 ***
FCCOBIX:            equ    $00000382                                ;*** FCCOBIX - Flash CCOB Index Register; 0x00000382 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOBIX_CCOBIX0:    equ    0                                         ; Common Command Register Index Bit 0
FCCOBIX_CCOBIX1:    equ    1                                         ; Common Command Register Index Bit 1
FCCOBIX_CCOBIX2:    equ    2                                         ; Common Command Register Index Bit 2
; bit position masks
mFCCOBIX_CCOBIX0:   equ    %00000001
mFCCOBIX_CCOBIX1:   equ    %00000010
mFCCOBIX_CCOBIX2:   equ    %00000100


;*** FPSTAT - Flash Protection Status Register; 0x00000383 ***
FPSTAT:             equ    $00000383                                ;*** FPSTAT - Flash Protection Status Register; 0x00000383 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FPSTAT_WSTATACK:    equ    0                                         ; Wait-State Switch Acknowledge
FPSTAT_FPOVRD:      equ    7                                         ; Flash Protection Override Status
; bit position masks
mFPSTAT_WSTATACK:   equ    %00000001
mFPSTAT_FPOVRD:     equ    %10000000


;*** FCNFG - Flash Configuration Register; 0x00000384 ***
FCNFG:              equ    $00000384                                ;*** FCNFG - Flash Configuration Register; 0x00000384 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCNFG_FSFD:         equ    0                                         ; Force Single Bit Fault Detect
FCNFG_FDFD:         equ    1                                         ; Force Double Bit Fault Detect
FCNFG_WSTAT:        equ    2                                         ; Wait State control bits
FCNFG_IGNSF:        equ    4                                         ; Ignore Single Bit Fault
FCNFG_ERSAREQ:      equ    5                                         ; Erase All Request
FCNFG_CCIE:         equ    7                                         ; Command Complete Interrupt Enable
; bit position masks
mFCNFG_FSFD:        equ    %00000001
mFCNFG_FDFD:        equ    %00000010
mFCNFG_WSTAT:       equ    %00001100
mFCNFG_IGNSF:       equ    %00010000
mFCNFG_ERSAREQ:     equ    %00100000
mFCNFG_CCIE:        equ    %10000000


;*** FERCNFG - Flash Error Configuration Register; 0x00000385 ***
FERCNFG:            equ    $00000385                                ;*** FERCNFG - Flash Error Configuration Register; 0x00000385 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FERCNFG_SFDIE:      equ    0                                         ; Single Bit Fault Detect Interrupt Enable
; bit position masks
mFERCNFG_SFDIE:     equ    %00000001


;*** FSTAT - Flash Status Register; 0x00000386 ***
FSTAT:              equ    $00000386                                ;*** FSTAT - Flash Status Register; 0x00000386 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FSTAT_MGSTAT0:      equ    0                                         ; Memory Controller Command Completion Status Flag 0
FSTAT_MGSTAT1:      equ    1                                         ; Memory Controller Command Completion Status Flag 1
FSTAT_MGBUSY:       equ    3                                         ; Memory Controller Busy Flag
FSTAT_FPVIOL:       equ    4                                         ; Flash Protection Violation Flag
FSTAT_ACCERR:       equ    5                                         ; Flash Access Error Flag
FSTAT_CCIF:         equ    7                                         ; Command Complete Interrupt Flag
; bit position masks
mFSTAT_MGSTAT0:     equ    %00000001
mFSTAT_MGSTAT1:     equ    %00000010
mFSTAT_MGBUSY:      equ    %00001000
mFSTAT_FPVIOL:      equ    %00010000
mFSTAT_ACCERR:      equ    %00100000
mFSTAT_CCIF:        equ    %10000000


;*** FERSTAT - Flash Error Status Register; 0x00000387 ***
FERSTAT:            equ    $00000387                                ;*** FERSTAT - Flash Error Status Register; 0x00000387 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FERSTAT_SFDIF:      equ    0                                         ; Single Bit Fault Detect Interrupt Flag
FERSTAT_DFDF:       equ    1                                         ; Double Bit Fault Detect Flag
; bit position masks
mFERSTAT_SFDIF:     equ    %00000001
mFERSTAT_DFDF:      equ    %00000010


;*** FPROT - P-Flash Protection Register; 0x00000388 ***
FPROT:              equ    $00000388                                ;*** FPROT - P-Flash Protection Register; 0x00000388 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FPROT_FPLS0:        equ    0                                         ; Flash Protection Lower Address Size Bit 0
FPROT_FPLS1:        equ    1                                         ; Flash Protection Lower Address Size Bit 1
FPROT_FPLDIS:       equ    2                                         ; Flash Protection Lower Address Range Disable
FPROT_FPHS0:        equ    3                                         ; Flash Protection Higher Address Size Bit 0
FPROT_FPHS1:        equ    4                                         ; Flash Protection Higher Address Size Bit 1
FPROT_FPHDIS:       equ    5                                         ; Flash Protection Higher Address Range Disable
FPROT_RNV6:         equ    6                                         ; Reserved Nonvolatile Bit
FPROT_FPOPEN:       equ    7                                         ; Flash Protection Operation Enable
; bit position masks
mFPROT_FPLS0:       equ    %00000001
mFPROT_FPLS1:       equ    %00000010
mFPROT_FPLDIS:      equ    %00000100
mFPROT_FPHS0:       equ    %00001000
mFPROT_FPHS1:       equ    %00010000
mFPROT_FPHDIS:      equ    %00100000
mFPROT_RNV6:        equ    %01000000
mFPROT_FPOPEN:      equ    %10000000


;*** DFPROT - D-Flash Protection Register; 0x00000389 ***
DFPROT:             equ    $00000389                                ;*** DFPROT - D-Flash Protection Register; 0x00000389 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
DFPROT_DPS0:        equ    0                                         ; D-Flash Protection Size Bit 0
DFPROT_DPS1:        equ    1                                         ; D-Flash Protection Size Bit 1
DFPROT_DPS2:        equ    2                                         ; D-Flash Protection Size Bit 2
DFPROT_DPS3:        equ    3                                         ; D-Flash Protection Size Bit 3
DFPROT_DPS4:        equ    4                                         ; D-Flash Protection Size Bit 4
DFPROT_DPS5:        equ    5                                         ; D-Flash Protection Size Bit 5
DFPROT_DPOPEN:      equ    7                                         ; D-Flash Protection Control
; bit position masks
mDFPROT_DPS0:       equ    %00000001
mDFPROT_DPS1:       equ    %00000010
mDFPROT_DPS2:       equ    %00000100
mDFPROT_DPS3:       equ    %00001000
mDFPROT_DPS4:       equ    %00010000
mDFPROT_DPS5:       equ    %00100000
mDFPROT_DPOPEN:     equ    %10000000


;*** FOPT - Flash Option Register; 0x0000038A ***
FOPT:               equ    $0000038A                                ;*** FOPT - Flash Option Register; 0x0000038A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FOPT_NV0:           equ    0                                         ; Nonvolatile Bit 0
FOPT_NV1:           equ    1                                         ; Nonvolatile Bit 1
FOPT_NV2:           equ    2                                         ; Nonvolatile Bit 2
FOPT_NV3:           equ    3                                         ; Nonvolatile Bit 3
FOPT_NV4:           equ    4                                         ; Nonvolatile Bit 4
FOPT_NV5:           equ    5                                         ; Nonvolatile Bit 5
FOPT_NV6:           equ    6                                         ; Nonvolatile Bit 6
FOPT_NV7:           equ    7                                         ; Nonvolatile Bit 7
; bit position masks
mFOPT_NV0:          equ    %00000001
mFOPT_NV1:          equ    %00000010
mFOPT_NV2:          equ    %00000100
mFOPT_NV3:          equ    %00001000
mFOPT_NV4:          equ    %00010000
mFOPT_NV5:          equ    %00100000
mFOPT_NV6:          equ    %01000000
mFOPT_NV7:          equ    %10000000


;*** FCCOB0 - Flash Common Command Object Register; 0x0000038C ***
FCCOB0:             equ    $0000038C                                ;*** FCCOB0 - Flash Common Command Object Register; 0x0000038C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB0_CCOB0:       equ    0                                         ; Flash Common Command Object Bit 0
FCCOB0_CCOB1:       equ    1                                         ; Flash Common Command Object Bit 1
FCCOB0_CCOB2:       equ    2                                         ; Flash Common Command Object Bit 2
FCCOB0_CCOB3:       equ    3                                         ; Flash Common Command Object Bit 3
FCCOB0_CCOB4:       equ    4                                         ; Flash Common Command Object Bit 4
FCCOB0_CCOB5:       equ    5                                         ; Flash Common Command Object Bit 5
FCCOB0_CCOB6:       equ    6                                         ; Flash Common Command Object Bit 6
FCCOB0_CCOB7:       equ    7                                         ; Flash Common Command Object Bit 7
FCCOB0_CCOB8:       equ    8                                         ; Flash Common Command Object Bit 8
FCCOB0_CCOB9:       equ    9                                         ; Flash Common Command Object Bit 9
FCCOB0_CCOB10:      equ    10                                        ; Flash Common Command Object Bit 10
FCCOB0_CCOB11:      equ    11                                        ; Flash Common Command Object Bit 11
FCCOB0_CCOB12:      equ    12                                        ; Flash Common Command Object Bit 12
FCCOB0_CCOB13:      equ    13                                        ; Flash Common Command Object Bit 13
FCCOB0_CCOB14:      equ    14                                        ; Flash Common Command Object Bit 14
FCCOB0_CCOB15:      equ    15                                        ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB0_CCOB0:      equ    %00000001
mFCCOB0_CCOB1:      equ    %00000010
mFCCOB0_CCOB2:      equ    %00000100
mFCCOB0_CCOB3:      equ    %00001000
mFCCOB0_CCOB4:      equ    %00010000
mFCCOB0_CCOB5:      equ    %00100000
mFCCOB0_CCOB6:      equ    %01000000
mFCCOB0_CCOB7:      equ    %10000000
mFCCOB0_CCOB8:      equ    %100000000
mFCCOB0_CCOB9:      equ    %1000000000
mFCCOB0_CCOB10:     equ    %10000000000
mFCCOB0_CCOB11:     equ    %100000000000
mFCCOB0_CCOB12:     equ    %1000000000000
mFCCOB0_CCOB13:     equ    %10000000000000
mFCCOB0_CCOB14:     equ    %100000000000000
mFCCOB0_CCOB15:     equ    %1000000000000000


;*** FCCOB0HI - Flash Common Command Object Register High; 0x0000038C ***
FCCOB0HI:           equ    $0000038C                                ;*** FCCOB0HI - Flash Common Command Object Register High; 0x0000038C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB0HI_CCOB8:     equ    0                                         ; Flash Common Command Object Bit 8
FCCOB0HI_CCOB9:     equ    1                                         ; Flash Common Command Object Bit 9
FCCOB0HI_CCOB10:    equ    2                                         ; Flash Common Command Object Bit 10
FCCOB0HI_CCOB11:    equ    3                                         ; Flash Common Command Object Bit 11
FCCOB0HI_CCOB12:    equ    4                                         ; Flash Common Command Object Bit 12
FCCOB0HI_CCOB13:    equ    5                                         ; Flash Common Command Object Bit 13
FCCOB0HI_CCOB14:    equ    6                                         ; Flash Common Command Object Bit 14
FCCOB0HI_CCOB15:    equ    7                                         ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB0HI_CCOB8:    equ    %00000001
mFCCOB0HI_CCOB9:    equ    %00000010
mFCCOB0HI_CCOB10:   equ    %00000100
mFCCOB0HI_CCOB11:   equ    %00001000
mFCCOB0HI_CCOB12:   equ    %00010000
mFCCOB0HI_CCOB13:   equ    %00100000
mFCCOB0HI_CCOB14:   equ    %01000000
mFCCOB0HI_CCOB15:   equ    %10000000


;*** FCCOB0LO - Flash Common Command Object Register Low; 0x0000038D ***
FCCOB0LO:           equ    $0000038D                                ;*** FCCOB0LO - Flash Common Command Object Register Low; 0x0000038D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB0LO_CCOB0:     equ    0                                         ; Flash Common Command Object Bit 0
FCCOB0LO_CCOB1:     equ    1                                         ; Flash Common Command Object Bit 1
FCCOB0LO_CCOB2:     equ    2                                         ; Flash Common Command Object Bit 2
FCCOB0LO_CCOB3:     equ    3                                         ; Flash Common Command Object Bit 3
FCCOB0LO_CCOB4:     equ    4                                         ; Flash Common Command Object Bit 4
FCCOB0LO_CCOB5:     equ    5                                         ; Flash Common Command Object Bit 5
FCCOB0LO_CCOB6:     equ    6                                         ; Flash Common Command Object Bit 6
FCCOB0LO_CCOB7:     equ    7                                         ; Flash Common Command Object Bit 7
; bit position masks
mFCCOB0LO_CCOB0:    equ    %00000001
mFCCOB0LO_CCOB1:    equ    %00000010
mFCCOB0LO_CCOB2:    equ    %00000100
mFCCOB0LO_CCOB3:    equ    %00001000
mFCCOB0LO_CCOB4:    equ    %00010000
mFCCOB0LO_CCOB5:    equ    %00100000
mFCCOB0LO_CCOB6:    equ    %01000000
mFCCOB0LO_CCOB7:    equ    %10000000


;*** FCCOB1 - Flash Common Command Object Register; 0x0000038E ***
FCCOB1:             equ    $0000038E                                ;*** FCCOB1 - Flash Common Command Object Register; 0x0000038E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB1_CCOB0:       equ    0                                         ; Flash Common Command Object Bit 0
FCCOB1_CCOB1:       equ    1                                         ; Flash Common Command Object Bit 1
FCCOB1_CCOB2:       equ    2                                         ; Flash Common Command Object Bit 2
FCCOB1_CCOB3:       equ    3                                         ; Flash Common Command Object Bit 3
FCCOB1_CCOB4:       equ    4                                         ; Flash Common Command Object Bit 4
FCCOB1_CCOB5:       equ    5                                         ; Flash Common Command Object Bit 5
FCCOB1_CCOB6:       equ    6                                         ; Flash Common Command Object Bit 6
FCCOB1_CCOB7:       equ    7                                         ; Flash Common Command Object Bit 7
FCCOB1_CCOB8:       equ    8                                         ; Flash Common Command Object Bit 8
FCCOB1_CCOB9:       equ    9                                         ; Flash Common Command Object Bit 9
FCCOB1_CCOB10:      equ    10                                        ; Flash Common Command Object Bit 10
FCCOB1_CCOB11:      equ    11                                        ; Flash Common Command Object Bit 11
FCCOB1_CCOB12:      equ    12                                        ; Flash Common Command Object Bit 12
FCCOB1_CCOB13:      equ    13                                        ; Flash Common Command Object Bit 13
FCCOB1_CCOB14:      equ    14                                        ; Flash Common Command Object Bit 14
FCCOB1_CCOB15:      equ    15                                        ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB1_CCOB0:      equ    %00000001
mFCCOB1_CCOB1:      equ    %00000010
mFCCOB1_CCOB2:      equ    %00000100
mFCCOB1_CCOB3:      equ    %00001000
mFCCOB1_CCOB4:      equ    %00010000
mFCCOB1_CCOB5:      equ    %00100000
mFCCOB1_CCOB6:      equ    %01000000
mFCCOB1_CCOB7:      equ    %10000000
mFCCOB1_CCOB8:      equ    %100000000
mFCCOB1_CCOB9:      equ    %1000000000
mFCCOB1_CCOB10:     equ    %10000000000
mFCCOB1_CCOB11:     equ    %100000000000
mFCCOB1_CCOB12:     equ    %1000000000000
mFCCOB1_CCOB13:     equ    %10000000000000
mFCCOB1_CCOB14:     equ    %100000000000000
mFCCOB1_CCOB15:     equ    %1000000000000000


;*** FCCOB1HI - Flash Common Command Object Register High; 0x0000038E ***
FCCOB1HI:           equ    $0000038E                                ;*** FCCOB1HI - Flash Common Command Object Register High; 0x0000038E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB1HI_CCOB8:     equ    0                                         ; Flash Common Command Object Bit 8
FCCOB1HI_CCOB9:     equ    1                                         ; Flash Common Command Object Bit 9
FCCOB1HI_CCOB10:    equ    2                                         ; Flash Common Command Object Bit 10
FCCOB1HI_CCOB11:    equ    3                                         ; Flash Common Command Object Bit 11
FCCOB1HI_CCOB12:    equ    4                                         ; Flash Common Command Object Bit 12
FCCOB1HI_CCOB13:    equ    5                                         ; Flash Common Command Object Bit 13
FCCOB1HI_CCOB14:    equ    6                                         ; Flash Common Command Object Bit 14
FCCOB1HI_CCOB15:    equ    7                                         ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB1HI_CCOB8:    equ    %00000001
mFCCOB1HI_CCOB9:    equ    %00000010
mFCCOB1HI_CCOB10:   equ    %00000100
mFCCOB1HI_CCOB11:   equ    %00001000
mFCCOB1HI_CCOB12:   equ    %00010000
mFCCOB1HI_CCOB13:   equ    %00100000
mFCCOB1HI_CCOB14:   equ    %01000000
mFCCOB1HI_CCOB15:   equ    %10000000


;*** FCCOB1LO - Flash Common Command Object Register Low; 0x0000038F ***
FCCOB1LO:           equ    $0000038F                                ;*** FCCOB1LO - Flash Common Command Object Register Low; 0x0000038F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB1LO_CCOB0:     equ    0                                         ; Flash Common Command Object Bit 0
FCCOB1LO_CCOB1:     equ    1                                         ; Flash Common Command Object Bit 1
FCCOB1LO_CCOB2:     equ    2                                         ; Flash Common Command Object Bit 2
FCCOB1LO_CCOB3:     equ    3                                         ; Flash Common Command Object Bit 3
FCCOB1LO_CCOB4:     equ    4                                         ; Flash Common Command Object Bit 4
FCCOB1LO_CCOB5:     equ    5                                         ; Flash Common Command Object Bit 5
FCCOB1LO_CCOB6:     equ    6                                         ; Flash Common Command Object Bit 6
FCCOB1LO_CCOB7:     equ    7                                         ; Flash Common Command Object Bit 7
; bit position masks
mFCCOB1LO_CCOB0:    equ    %00000001
mFCCOB1LO_CCOB1:    equ    %00000010
mFCCOB1LO_CCOB2:    equ    %00000100
mFCCOB1LO_CCOB3:    equ    %00001000
mFCCOB1LO_CCOB4:    equ    %00010000
mFCCOB1LO_CCOB5:    equ    %00100000
mFCCOB1LO_CCOB6:    equ    %01000000
mFCCOB1LO_CCOB7:    equ    %10000000


;*** FCCOB2 - Flash Common Command Object Register; 0x00000390 ***
FCCOB2:             equ    $00000390                                ;*** FCCOB2 - Flash Common Command Object Register; 0x00000390 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB2_CCOB0:       equ    0                                         ; Flash Common Command Object Bit 0
FCCOB2_CCOB1:       equ    1                                         ; Flash Common Command Object Bit 1
FCCOB2_CCOB2:       equ    2                                         ; Flash Common Command Object Bit 2
FCCOB2_CCOB3:       equ    3                                         ; Flash Common Command Object Bit 3
FCCOB2_CCOB4:       equ    4                                         ; Flash Common Command Object Bit 4
FCCOB2_CCOB5:       equ    5                                         ; Flash Common Command Object Bit 5
FCCOB2_CCOB6:       equ    6                                         ; Flash Common Command Object Bit 6
FCCOB2_CCOB7:       equ    7                                         ; Flash Common Command Object Bit 7
FCCOB2_CCOB8:       equ    8                                         ; Flash Common Command Object Bit 8
FCCOB2_CCOB9:       equ    9                                         ; Flash Common Command Object Bit 9
FCCOB2_CCOB10:      equ    10                                        ; Flash Common Command Object Bit 10
FCCOB2_CCOB11:      equ    11                                        ; Flash Common Command Object Bit 11
FCCOB2_CCOB12:      equ    12                                        ; Flash Common Command Object Bit 12
FCCOB2_CCOB13:      equ    13                                        ; Flash Common Command Object Bit 13
FCCOB2_CCOB14:      equ    14                                        ; Flash Common Command Object Bit 14
FCCOB2_CCOB15:      equ    15                                        ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB2_CCOB0:      equ    %00000001
mFCCOB2_CCOB1:      equ    %00000010
mFCCOB2_CCOB2:      equ    %00000100
mFCCOB2_CCOB3:      equ    %00001000
mFCCOB2_CCOB4:      equ    %00010000
mFCCOB2_CCOB5:      equ    %00100000
mFCCOB2_CCOB6:      equ    %01000000
mFCCOB2_CCOB7:      equ    %10000000
mFCCOB2_CCOB8:      equ    %100000000
mFCCOB2_CCOB9:      equ    %1000000000
mFCCOB2_CCOB10:     equ    %10000000000
mFCCOB2_CCOB11:     equ    %100000000000
mFCCOB2_CCOB12:     equ    %1000000000000
mFCCOB2_CCOB13:     equ    %10000000000000
mFCCOB2_CCOB14:     equ    %100000000000000
mFCCOB2_CCOB15:     equ    %1000000000000000


;*** FCCOB2HI - Flash Common Command Object Register High; 0x00000390 ***
FCCOB2HI:           equ    $00000390                                ;*** FCCOB2HI - Flash Common Command Object Register High; 0x00000390 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB2HI_CCOB8:     equ    0                                         ; Flash Common Command Object Bit 8
FCCOB2HI_CCOB9:     equ    1                                         ; Flash Common Command Object Bit 9
FCCOB2HI_CCOB10:    equ    2                                         ; Flash Common Command Object Bit 10
FCCOB2HI_CCOB11:    equ    3                                         ; Flash Common Command Object Bit 11
FCCOB2HI_CCOB12:    equ    4                                         ; Flash Common Command Object Bit 12
FCCOB2HI_CCOB13:    equ    5                                         ; Flash Common Command Object Bit 13
FCCOB2HI_CCOB14:    equ    6                                         ; Flash Common Command Object Bit 14
FCCOB2HI_CCOB15:    equ    7                                         ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB2HI_CCOB8:    equ    %00000001
mFCCOB2HI_CCOB9:    equ    %00000010
mFCCOB2HI_CCOB10:   equ    %00000100
mFCCOB2HI_CCOB11:   equ    %00001000
mFCCOB2HI_CCOB12:   equ    %00010000
mFCCOB2HI_CCOB13:   equ    %00100000
mFCCOB2HI_CCOB14:   equ    %01000000
mFCCOB2HI_CCOB15:   equ    %10000000


;*** FCCOB2LO - Flash Common Command Object Register Low; 0x00000391 ***
FCCOB2LO:           equ    $00000391                                ;*** FCCOB2LO - Flash Common Command Object Register Low; 0x00000391 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB2LO_CCOB0:     equ    0                                         ; Flash Common Command Object Bit 0
FCCOB2LO_CCOB1:     equ    1                                         ; Flash Common Command Object Bit 1
FCCOB2LO_CCOB2:     equ    2                                         ; Flash Common Command Object Bit 2
FCCOB2LO_CCOB3:     equ    3                                         ; Flash Common Command Object Bit 3
FCCOB2LO_CCOB4:     equ    4                                         ; Flash Common Command Object Bit 4
FCCOB2LO_CCOB5:     equ    5                                         ; Flash Common Command Object Bit 5
FCCOB2LO_CCOB6:     equ    6                                         ; Flash Common Command Object Bit 6
FCCOB2LO_CCOB7:     equ    7                                         ; Flash Common Command Object Bit 7
; bit position masks
mFCCOB2LO_CCOB0:    equ    %00000001
mFCCOB2LO_CCOB1:    equ    %00000010
mFCCOB2LO_CCOB2:    equ    %00000100
mFCCOB2LO_CCOB3:    equ    %00001000
mFCCOB2LO_CCOB4:    equ    %00010000
mFCCOB2LO_CCOB5:    equ    %00100000
mFCCOB2LO_CCOB6:    equ    %01000000
mFCCOB2LO_CCOB7:    equ    %10000000


;*** FCCOB3 - Flash Common Command Object Register; 0x00000392 ***
FCCOB3:             equ    $00000392                                ;*** FCCOB3 - Flash Common Command Object Register; 0x00000392 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB3_CCOB0:       equ    0                                         ; Flash Common Command Object Bit 0
FCCOB3_CCOB1:       equ    1                                         ; Flash Common Command Object Bit 1
FCCOB3_CCOB2:       equ    2                                         ; Flash Common Command Object Bit 2
FCCOB3_CCOB3:       equ    3                                         ; Flash Common Command Object Bit 3
FCCOB3_CCOB4:       equ    4                                         ; Flash Common Command Object Bit 4
FCCOB3_CCOB5:       equ    5                                         ; Flash Common Command Object Bit 5
FCCOB3_CCOB6:       equ    6                                         ; Flash Common Command Object Bit 6
FCCOB3_CCOB7:       equ    7                                         ; Flash Common Command Object Bit 7
FCCOB3_CCOB8:       equ    8                                         ; Flash Common Command Object Bit 8
FCCOB3_CCOB9:       equ    9                                         ; Flash Common Command Object Bit 9
FCCOB3_CCOB10:      equ    10                                        ; Flash Common Command Object Bit 10
FCCOB3_CCOB11:      equ    11                                        ; Flash Common Command Object Bit 11
FCCOB3_CCOB12:      equ    12                                        ; Flash Common Command Object Bit 12
FCCOB3_CCOB13:      equ    13                                        ; Flash Common Command Object Bit 13
FCCOB3_CCOB14:      equ    14                                        ; Flash Common Command Object Bit 14
FCCOB3_CCOB15:      equ    15                                        ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB3_CCOB0:      equ    %00000001
mFCCOB3_CCOB1:      equ    %00000010
mFCCOB3_CCOB2:      equ    %00000100
mFCCOB3_CCOB3:      equ    %00001000
mFCCOB3_CCOB4:      equ    %00010000
mFCCOB3_CCOB5:      equ    %00100000
mFCCOB3_CCOB6:      equ    %01000000
mFCCOB3_CCOB7:      equ    %10000000
mFCCOB3_CCOB8:      equ    %100000000
mFCCOB3_CCOB9:      equ    %1000000000
mFCCOB3_CCOB10:     equ    %10000000000
mFCCOB3_CCOB11:     equ    %100000000000
mFCCOB3_CCOB12:     equ    %1000000000000
mFCCOB3_CCOB13:     equ    %10000000000000
mFCCOB3_CCOB14:     equ    %100000000000000
mFCCOB3_CCOB15:     equ    %1000000000000000


;*** FCCOB3HI - Flash Common Command Object Register High; 0x00000392 ***
FCCOB3HI:           equ    $00000392                                ;*** FCCOB3HI - Flash Common Command Object Register High; 0x00000392 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB3HI_CCOB8:     equ    0                                         ; Flash Common Command Object Bit 8
FCCOB3HI_CCOB9:     equ    1                                         ; Flash Common Command Object Bit 9
FCCOB3HI_CCOB10:    equ    2                                         ; Flash Common Command Object Bit 10
FCCOB3HI_CCOB11:    equ    3                                         ; Flash Common Command Object Bit 11
FCCOB3HI_CCOB12:    equ    4                                         ; Flash Common Command Object Bit 12
FCCOB3HI_CCOB13:    equ    5                                         ; Flash Common Command Object Bit 13
FCCOB3HI_CCOB14:    equ    6                                         ; Flash Common Command Object Bit 14
FCCOB3HI_CCOB15:    equ    7                                         ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB3HI_CCOB8:    equ    %00000001
mFCCOB3HI_CCOB9:    equ    %00000010
mFCCOB3HI_CCOB10:   equ    %00000100
mFCCOB3HI_CCOB11:   equ    %00001000
mFCCOB3HI_CCOB12:   equ    %00010000
mFCCOB3HI_CCOB13:   equ    %00100000
mFCCOB3HI_CCOB14:   equ    %01000000
mFCCOB3HI_CCOB15:   equ    %10000000


;*** FCCOB3LO - Flash Common Command Object Register Low; 0x00000393 ***
FCCOB3LO:           equ    $00000393                                ;*** FCCOB3LO - Flash Common Command Object Register Low; 0x00000393 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB3LO_CCOB0:     equ    0                                         ; Flash Common Command Object Bit 0
FCCOB3LO_CCOB1:     equ    1                                         ; Flash Common Command Object Bit 1
FCCOB3LO_CCOB2:     equ    2                                         ; Flash Common Command Object Bit 2
FCCOB3LO_CCOB3:     equ    3                                         ; Flash Common Command Object Bit 3
FCCOB3LO_CCOB4:     equ    4                                         ; Flash Common Command Object Bit 4
FCCOB3LO_CCOB5:     equ    5                                         ; Flash Common Command Object Bit 5
FCCOB3LO_CCOB6:     equ    6                                         ; Flash Common Command Object Bit 6
FCCOB3LO_CCOB7:     equ    7                                         ; Flash Common Command Object Bit 7
; bit position masks
mFCCOB3LO_CCOB0:    equ    %00000001
mFCCOB3LO_CCOB1:    equ    %00000010
mFCCOB3LO_CCOB2:    equ    %00000100
mFCCOB3LO_CCOB3:    equ    %00001000
mFCCOB3LO_CCOB4:    equ    %00010000
mFCCOB3LO_CCOB5:    equ    %00100000
mFCCOB3LO_CCOB6:    equ    %01000000
mFCCOB3LO_CCOB7:    equ    %10000000


;*** FCCOB4 - Flash Common Command Object Register; 0x00000394 ***
FCCOB4:             equ    $00000394                                ;*** FCCOB4 - Flash Common Command Object Register; 0x00000394 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB4_CCOB0:       equ    0                                         ; Flash Common Command Object Bit 0
FCCOB4_CCOB1:       equ    1                                         ; Flash Common Command Object Bit 1
FCCOB4_CCOB2:       equ    2                                         ; Flash Common Command Object Bit 2
FCCOB4_CCOB3:       equ    3                                         ; Flash Common Command Object Bit 3
FCCOB4_CCOB4:       equ    4                                         ; Flash Common Command Object Bit 4
FCCOB4_CCOB5:       equ    5                                         ; Flash Common Command Object Bit 5
FCCOB4_CCOB6:       equ    6                                         ; Flash Common Command Object Bit 6
FCCOB4_CCOB7:       equ    7                                         ; Flash Common Command Object Bit 7
FCCOB4_CCOB8:       equ    8                                         ; Flash Common Command Object Bit 8
FCCOB4_CCOB9:       equ    9                                         ; Flash Common Command Object Bit 9
FCCOB4_CCOB10:      equ    10                                        ; Flash Common Command Object Bit 10
FCCOB4_CCOB11:      equ    11                                        ; Flash Common Command Object Bit 11
FCCOB4_CCOB12:      equ    12                                        ; Flash Common Command Object Bit 12
FCCOB4_CCOB13:      equ    13                                        ; Flash Common Command Object Bit 13
FCCOB4_CCOB14:      equ    14                                        ; Flash Common Command Object Bit 14
FCCOB4_CCOB15:      equ    15                                        ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB4_CCOB0:      equ    %00000001
mFCCOB4_CCOB1:      equ    %00000010
mFCCOB4_CCOB2:      equ    %00000100
mFCCOB4_CCOB3:      equ    %00001000
mFCCOB4_CCOB4:      equ    %00010000
mFCCOB4_CCOB5:      equ    %00100000
mFCCOB4_CCOB6:      equ    %01000000
mFCCOB4_CCOB7:      equ    %10000000
mFCCOB4_CCOB8:      equ    %100000000
mFCCOB4_CCOB9:      equ    %1000000000
mFCCOB4_CCOB10:     equ    %10000000000
mFCCOB4_CCOB11:     equ    %100000000000
mFCCOB4_CCOB12:     equ    %1000000000000
mFCCOB4_CCOB13:     equ    %10000000000000
mFCCOB4_CCOB14:     equ    %100000000000000
mFCCOB4_CCOB15:     equ    %1000000000000000


;*** FCCOB4HI - Flash Common Command Object Register High; 0x00000394 ***
FCCOB4HI:           equ    $00000394                                ;*** FCCOB4HI - Flash Common Command Object Register High; 0x00000394 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB4HI_CCOB8:     equ    0                                         ; Flash Common Command Object Bit 8
FCCOB4HI_CCOB9:     equ    1                                         ; Flash Common Command Object Bit 9
FCCOB4HI_CCOB10:    equ    2                                         ; Flash Common Command Object Bit 10
FCCOB4HI_CCOB11:    equ    3                                         ; Flash Common Command Object Bit 11
FCCOB4HI_CCOB12:    equ    4                                         ; Flash Common Command Object Bit 12
FCCOB4HI_CCOB13:    equ    5                                         ; Flash Common Command Object Bit 13
FCCOB4HI_CCOB14:    equ    6                                         ; Flash Common Command Object Bit 14
FCCOB4HI_CCOB15:    equ    7                                         ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB4HI_CCOB8:    equ    %00000001
mFCCOB4HI_CCOB9:    equ    %00000010
mFCCOB4HI_CCOB10:   equ    %00000100
mFCCOB4HI_CCOB11:   equ    %00001000
mFCCOB4HI_CCOB12:   equ    %00010000
mFCCOB4HI_CCOB13:   equ    %00100000
mFCCOB4HI_CCOB14:   equ    %01000000
mFCCOB4HI_CCOB15:   equ    %10000000


;*** FCCOB4LO - Flash Common Command Object Register Low; 0x00000395 ***
FCCOB4LO:           equ    $00000395                                ;*** FCCOB4LO - Flash Common Command Object Register Low; 0x00000395 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB4LO_CCOB0:     equ    0                                         ; Flash Common Command Object Bit 0
FCCOB4LO_CCOB1:     equ    1                                         ; Flash Common Command Object Bit 1
FCCOB4LO_CCOB2:     equ    2                                         ; Flash Common Command Object Bit 2
FCCOB4LO_CCOB3:     equ    3                                         ; Flash Common Command Object Bit 3
FCCOB4LO_CCOB4:     equ    4                                         ; Flash Common Command Object Bit 4
FCCOB4LO_CCOB5:     equ    5                                         ; Flash Common Command Object Bit 5
FCCOB4LO_CCOB6:     equ    6                                         ; Flash Common Command Object Bit 6
FCCOB4LO_CCOB7:     equ    7                                         ; Flash Common Command Object Bit 7
; bit position masks
mFCCOB4LO_CCOB0:    equ    %00000001
mFCCOB4LO_CCOB1:    equ    %00000010
mFCCOB4LO_CCOB2:    equ    %00000100
mFCCOB4LO_CCOB3:    equ    %00001000
mFCCOB4LO_CCOB4:    equ    %00010000
mFCCOB4LO_CCOB5:    equ    %00100000
mFCCOB4LO_CCOB6:    equ    %01000000
mFCCOB4LO_CCOB7:    equ    %10000000


;*** FCCOB5 - Flash Common Command Object Register; 0x00000396 ***
FCCOB5:             equ    $00000396                                ;*** FCCOB5 - Flash Common Command Object Register; 0x00000396 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB5_CCOB0:       equ    0                                         ; Flash Common Command Object Bit 0
FCCOB5_CCOB1:       equ    1                                         ; Flash Common Command Object Bit 1
FCCOB5_CCOB2:       equ    2                                         ; Flash Common Command Object Bit 2
FCCOB5_CCOB3:       equ    3                                         ; Flash Common Command Object Bit 3
FCCOB5_CCOB4:       equ    4                                         ; Flash Common Command Object Bit 4
FCCOB5_CCOB5:       equ    5                                         ; Flash Common Command Object Bit 5
FCCOB5_CCOB6:       equ    6                                         ; Flash Common Command Object Bit 6
FCCOB5_CCOB7:       equ    7                                         ; Flash Common Command Object Bit 7
FCCOB5_CCOB8:       equ    8                                         ; Flash Common Command Object Bit 8
FCCOB5_CCOB9:       equ    9                                         ; Flash Common Command Object Bit 9
FCCOB5_CCOB10:      equ    10                                        ; Flash Common Command Object Bit 10
FCCOB5_CCOB11:      equ    11                                        ; Flash Common Command Object Bit 11
FCCOB5_CCOB12:      equ    12                                        ; Flash Common Command Object Bit 12
FCCOB5_CCOB13:      equ    13                                        ; Flash Common Command Object Bit 13
FCCOB5_CCOB14:      equ    14                                        ; Flash Common Command Object Bit 14
FCCOB5_CCOB15:      equ    15                                        ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB5_CCOB0:      equ    %00000001
mFCCOB5_CCOB1:      equ    %00000010
mFCCOB5_CCOB2:      equ    %00000100
mFCCOB5_CCOB3:      equ    %00001000
mFCCOB5_CCOB4:      equ    %00010000
mFCCOB5_CCOB5:      equ    %00100000
mFCCOB5_CCOB6:      equ    %01000000
mFCCOB5_CCOB7:      equ    %10000000
mFCCOB5_CCOB8:      equ    %100000000
mFCCOB5_CCOB9:      equ    %1000000000
mFCCOB5_CCOB10:     equ    %10000000000
mFCCOB5_CCOB11:     equ    %100000000000
mFCCOB5_CCOB12:     equ    %1000000000000
mFCCOB5_CCOB13:     equ    %10000000000000
mFCCOB5_CCOB14:     equ    %100000000000000
mFCCOB5_CCOB15:     equ    %1000000000000000


;*** FCCOB5HI - Flash Common Command Object Register High; 0x00000396 ***
FCCOB5HI:           equ    $00000396                                ;*** FCCOB5HI - Flash Common Command Object Register High; 0x00000396 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB5HI_CCOB8:     equ    0                                         ; Flash Common Command Object Bit 8
FCCOB5HI_CCOB9:     equ    1                                         ; Flash Common Command Object Bit 9
FCCOB5HI_CCOB10:    equ    2                                         ; Flash Common Command Object Bit 10
FCCOB5HI_CCOB11:    equ    3                                         ; Flash Common Command Object Bit 11
FCCOB5HI_CCOB12:    equ    4                                         ; Flash Common Command Object Bit 12
FCCOB5HI_CCOB13:    equ    5                                         ; Flash Common Command Object Bit 13
FCCOB5HI_CCOB14:    equ    6                                         ; Flash Common Command Object Bit 14
FCCOB5HI_CCOB15:    equ    7                                         ; Flash Common Command Object Bit 15
; bit position masks
mFCCOB5HI_CCOB8:    equ    %00000001
mFCCOB5HI_CCOB9:    equ    %00000010
mFCCOB5HI_CCOB10:   equ    %00000100
mFCCOB5HI_CCOB11:   equ    %00001000
mFCCOB5HI_CCOB12:   equ    %00010000
mFCCOB5HI_CCOB13:   equ    %00100000
mFCCOB5HI_CCOB14:   equ    %01000000
mFCCOB5HI_CCOB15:   equ    %10000000


;*** FCCOB5LO - Flash Common Command Object Register Low; 0x00000397 ***
FCCOB5LO:           equ    $00000397                                ;*** FCCOB5LO - Flash Common Command Object Register Low; 0x00000397 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
FCCOB5LO_CCOB0:     equ    0                                         ; Flash Common Command Object Bit 0
FCCOB5LO_CCOB1:     equ    1                                         ; Flash Common Command Object Bit 1
FCCOB5LO_CCOB2:     equ    2                                         ; Flash Common Command Object Bit 2
FCCOB5LO_CCOB3:     equ    3                                         ; Flash Common Command Object Bit 3
FCCOB5LO_CCOB4:     equ    4                                         ; Flash Common Command Object Bit 4
FCCOB5LO_CCOB5:     equ    5                                         ; Flash Common Command Object Bit 5
FCCOB5LO_CCOB6:     equ    6                                         ; Flash Common Command Object Bit 6
FCCOB5LO_CCOB7:     equ    7                                         ; Flash Common Command Object Bit 7
; bit position masks
mFCCOB5LO_CCOB0:    equ    %00000001
mFCCOB5LO_CCOB1:    equ    %00000010
mFCCOB5LO_CCOB2:    equ    %00000100
mFCCOB5LO_CCOB3:    equ    %00001000
mFCCOB5LO_CCOB4:    equ    %00010000
mFCCOB5LO_CCOB5:    equ    %00100000
mFCCOB5LO_CCOB6:    equ    %01000000
mFCCOB5LO_CCOB7:    equ    %10000000


;*** ECCSTAT - ECC Status Register; 0x000003C0 ***
ECCSTAT:            equ    $000003C0                                ;*** ECCSTAT - ECC Status Register; 0x000003C0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCSTAT_RDY:        equ    0                                         ; ECC Ready
; bit position masks
mECCSTAT_RDY:       equ    %00000001


;*** ECCIE - ECC Interrupt Enable Register; 0x000003C1 ***
ECCIE:              equ    $000003C1                                ;*** ECCIE - ECC Interrupt Enable Register; 0x000003C1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCIE_SBEEIE:       equ    0                                         ; Single Bit ECC Error Interrupt Enable
; bit position masks
mECCIE_SBEEIE:      equ    %00000001


;*** ECCIF - ECC Interrupt Flag Register; 0x000003C2 ***
ECCIF:              equ    $000003C2                                ;*** ECCIF - ECC Interrupt Flag Register; 0x000003C2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCIF_SBEEIF:       equ    0                                         ; Single bit ECC Error Interrupt Flag
; bit position masks
mECCIF_SBEEIF:      equ    %00000001


;*** ECCDPTRH - ECC Debug Point Register High; 0x000003C7 ***
ECCDPTRH:           equ    $000003C7                                ;*** ECCDPTRH - ECC Debug Point Register High; 0x000003C7 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDPTRH_DPTR:      equ    0                                         ; ECC Debug Pointer
; bit position masks
mECCDPTRH_DPTR:     equ    %11111111


;*** ECCDPTRM - ECC Debug Point Register Middle; 0x000003C8 ***
ECCDPTRM:           equ    $000003C8                                ;*** ECCDPTRM - ECC Debug Point Register Middle; 0x000003C8 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDPTRM_DPTR:      equ    0                                         ; ECC Debug Pointer
; bit position masks
mECCDPTRM_DPTR:     equ    %11111111


;*** ECCDPTRL - ECC Debug Point Register Low; 0x000003C9 ***
ECCDPTRL:           equ    $000003C9                                ;*** ECCDPTRL - ECC Debug Point Register Low; 0x000003C9 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDPTRL_DPTR:      equ    1                                         ; ECC Debug Pointer
; bit position masks
mECCDPTRL_DPTR:     equ    %11111110


;*** ECCDD - ECC Debug Data; 0x000003CC ***
ECCDD:              equ    $000003CC                                ;*** ECCDD - ECC Debug Data; 0x000003CC ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDD_DDATA:        equ    0                                         ; ECC Debug Data
; bit position masks
mECCDD_DDATA:       equ    %1111111111111111


;*** ECCDDH - ECC Debug Data High; 0x000003CC ***
ECCDDH:             equ    $000003CC                                ;*** ECCDDH - ECC Debug Data High; 0x000003CC ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDDH_DDATA:       equ    0                                         ; ECC Debug Data
; bit position masks
mECCDDH_DDATA:      equ    %11111111


;*** ECCDDL - ECC Debug Data Low; 0x000003CD ***
ECCDDL:             equ    $000003CD                                ;*** ECCDDL - ECC Debug Data Low; 0x000003CD ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDDL_DDATA:       equ    0                                         ; ECC Debug Data
; bit position masks
mECCDDL_DDATA:      equ    %11111111


;*** ECCDE - ECC Debug ECC; 0x000003CE ***
ECCDE:              equ    $000003CE                                ;*** ECCDE - ECC Debug ECC; 0x000003CE ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDE_DECC:         equ    0                                         ; ECC Debug ECC
; bit position masks
mECCDE_DECC:        equ    %00111111


;*** ECCDCMD - ECC Debug Comamnd; 0x000003CF ***
ECCDCMD:            equ    $000003CF                                ;*** ECCDCMD - ECC Debug Comamnd; 0x000003CF ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ECCDCMD_ECCDR:      equ    0                                         ; ECC Debug Read Command
ECCDCMD_ECCDW:      equ    1                                         ; ECC Debug Write Command
ECCDCMD_ECCDRR:     equ    7                                         ; ECC Disable Read Repair Function
; bit position masks
mECCDCMD_ECCDR:     equ    %00000001
mECCDCMD_ECCDW:     equ    %00000010
mECCDCMD_ECCDRR:    equ    %10000000


;*** TIM1TIOS - Timer Input Capture/Output Compare Select; 0x00000400 ***
TIM1TIOS:           equ    $00000400                                ;*** TIM1TIOS - Timer Input Capture/Output Compare Select; 0x00000400 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TIOS_IOS0:      equ    0                                         ; Input Capture or Output Compare Channel Configuration Bit 0
TIM1TIOS_IOS1:      equ    1                                         ; Input Capture or Output Compare Channel Configuration Bit 1
TIM1TIOS_IOS2:      equ    2                                         ; Input Capture or Output Compare Channel Configuration Bit 2
TIM1TIOS_IOS3:      equ    3                                         ; Input Capture or Output Compare Channel Configuration Bit 3
TIM1TIOS_IOS4:      equ    4                                         ; Input Capture or Output Compare Channel Configuration Bit 4
TIM1TIOS_IOS5:      equ    5                                         ; Input Capture or Output Compare Channel Configuration Bit 5
TIM1TIOS_IOS6:      equ    6                                         ; Input Capture or Output Compare Channel Configuration Bit 6
TIM1TIOS_IOS7:      equ    7                                         ; Input Capture or Output Compare Channel Configuration Bit 7
; bit position masks
mTIM1TIOS_IOS0:     equ    %00000001
mTIM1TIOS_IOS1:     equ    %00000010
mTIM1TIOS_IOS2:     equ    %00000100
mTIM1TIOS_IOS3:     equ    %00001000
mTIM1TIOS_IOS4:     equ    %00010000
mTIM1TIOS_IOS5:     equ    %00100000
mTIM1TIOS_IOS6:     equ    %01000000
mTIM1TIOS_IOS7:     equ    %10000000


;*** TIM1CFORC - Timer Compare Force Register; 0x00000401 ***
TIM1CFORC:          equ    $00000401                                ;*** TIM1CFORC - Timer Compare Force Register; 0x00000401 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1CFORC_FOC0:     equ    0                                         ; Force Output Compare Action for Channel 0
TIM1CFORC_FOC1:     equ    1                                         ; Force Output Compare Action for Channel 1
TIM1CFORC_FOC2:     equ    2                                         ; Force Output Compare Action for Channel 2
TIM1CFORC_FOC3:     equ    3                                         ; Force Output Compare Action for Channel 3
TIM1CFORC_FOC4:     equ    4                                         ; Force Output Compare Action for Channel 4
TIM1CFORC_FOC5:     equ    5                                         ; Force Output Compare Action for Channel 5
TIM1CFORC_FOC6:     equ    6                                         ; Force Output Compare Action for Channel 6
TIM1CFORC_FOC7:     equ    7                                         ; Force Output Compare Action for Channel 7
; bit position masks
mTIM1CFORC_FOC0:    equ    %00000001
mTIM1CFORC_FOC1:    equ    %00000010
mTIM1CFORC_FOC2:    equ    %00000100
mTIM1CFORC_FOC3:    equ    %00001000
mTIM1CFORC_FOC4:    equ    %00010000
mTIM1CFORC_FOC5:    equ    %00100000
mTIM1CFORC_FOC6:    equ    %01000000
mTIM1CFORC_FOC7:    equ    %10000000


;*** TIM1OC7M - Output Compare 7 Mask Register; 0x00000402 ***
TIM1OC7M:           equ    $00000402                                ;*** TIM1OC7M - Output Compare 7 Mask Register; 0x00000402 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1OC7M_OC7M0:     equ    0                                         ; Output Compare 7 Mask Bit 0
TIM1OC7M_OC7M1:     equ    1                                         ; Output Compare 7 Mask Bit 1
TIM1OC7M_OC7M2:     equ    2                                         ; Output Compare 7 Mask Bit 2
TIM1OC7M_OC7M3:     equ    3                                         ; Output Compare 7 Mask Bit 3
TIM1OC7M_OC7M4:     equ    4                                         ; Output Compare 7 Mask Bit 4
TIM1OC7M_OC7M5:     equ    5                                         ; Output Compare 7 Mask Bit 5
TIM1OC7M_OC7M6:     equ    6                                         ; Output Compare 7 Mask Bit 6
TIM1OC7M_OC7M7:     equ    7                                         ; Output Compare 7 Mask Bit 7
; bit position masks
mTIM1OC7M_OC7M0:    equ    %00000001
mTIM1OC7M_OC7M1:    equ    %00000010
mTIM1OC7M_OC7M2:    equ    %00000100
mTIM1OC7M_OC7M3:    equ    %00001000
mTIM1OC7M_OC7M4:    equ    %00010000
mTIM1OC7M_OC7M5:    equ    %00100000
mTIM1OC7M_OC7M6:    equ    %01000000
mTIM1OC7M_OC7M7:    equ    %10000000


;*** TIM1OC7D - Output Compare 7 Data Register; 0x00000403 ***
TIM1OC7D:           equ    $00000403                                ;*** TIM1OC7D - Output Compare 7 Data Register; 0x00000403 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1OC7D_OC7D0:     equ    0                                         ; Output Compare 7 Bit 0
TIM1OC7D_OC7D1:     equ    1                                         ; Output Compare 7 Bit 1
TIM1OC7D_OC7D2:     equ    2                                         ; Output Compare 7 Bit 2
TIM1OC7D_OC7D3:     equ    3                                         ; Output Compare 7 Bit 3
TIM1OC7D_OC7D4:     equ    4                                         ; Output Compare 7 Bit 4
TIM1OC7D_OC7D5:     equ    5                                         ; Output Compare 7 Bit 5
TIM1OC7D_OC7D6:     equ    6                                         ; Output Compare 7 Bit 6
TIM1OC7D_OC7D7:     equ    7                                         ; Output Compare 7 Bit 7
; bit position masks
mTIM1OC7D_OC7D0:    equ    %00000001
mTIM1OC7D_OC7D1:    equ    %00000010
mTIM1OC7D_OC7D2:    equ    %00000100
mTIM1OC7D_OC7D3:    equ    %00001000
mTIM1OC7D_OC7D4:    equ    %00010000
mTIM1OC7D_OC7D5:    equ    %00100000
mTIM1OC7D_OC7D6:    equ    %01000000
mTIM1OC7D_OC7D7:    equ    %10000000


;*** TIM1TCNT - Timer Count Register; 0x00000404 ***
TIM1TCNT:           equ    $00000404                                ;*** TIM1TCNT - Timer Count Register; 0x00000404 ***


;*** TIM1TCNTHi - Timer Count Register High (OBSOLETE - defined for backward compatibility); 0x00000404 ***
TIM1TCNTHi:         equ    $00000404                                ;*** TIM1TCNTHi - Timer Count Register High (OBSOLETE - defined for backward compatibility); 0x00000404 ***


;*** TIM1TCNTH - Timer Count Register High; 0x00000404 ***
TIM1TCNTH:          equ    $00000404                                ;*** TIM1TCNTH - Timer Count Register High; 0x00000404 ***


;*** TIM1TCNTLo - Timer Count Register Low (OBSOLETE - defined for backward compatibility); 0x00000405 ***
TIM1TCNTLo:         equ    $00000405                                ;*** TIM1TCNTLo - Timer Count Register Low (OBSOLETE - defined for backward compatibility); 0x00000405 ***


;*** TIM1TCNTL - Timer Count Register Low; 0x00000405 ***
TIM1TCNTL:          equ    $00000405                                ;*** TIM1TCNTL - Timer Count Register Low; 0x00000405 ***


;*** TIM1TSCR1 - Timer System Control Register1; 0x00000406 ***
TIM1TSCR1:          equ    $00000406                                ;*** TIM1TSCR1 - Timer System Control Register1; 0x00000406 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TSCR1_PRNT:     equ    3                                         ; Precision Timer
TIM1TSCR1_TFFCA:    equ    4                                         ; Timer Fast Flag Clear All
TIM1TSCR1_TSFRZ:    equ    5                                         ; Timer and Modulus Counter Stop While in Freeze Mode
TIM1TSCR1_TSWAI:    equ    6                                         ; Timer Module Stops While in Wait
TIM1TSCR1_TEN:      equ    7                                         ; Timer Enable
; bit position masks
mTIM1TSCR1_PRNT:    equ    %00001000
mTIM1TSCR1_TFFCA:   equ    %00010000
mTIM1TSCR1_TSFRZ:   equ    %00100000
mTIM1TSCR1_TSWAI:   equ    %01000000
mTIM1TSCR1_TEN:     equ    %10000000


;*** TIM1TTOV - Timer Toggle On Overflow Register; 0x00000407 ***
TIM1TTOV:           equ    $00000407                                ;*** TIM1TTOV - Timer Toggle On Overflow Register; 0x00000407 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TTOV_TOV0:      equ    0                                         ; Toggle On Overflow Bit 0
TIM1TTOV_TOV1:      equ    1                                         ; Toggle On Overflow Bit 1
TIM1TTOV_TOV2:      equ    2                                         ; Toggle On Overflow Bit 2
TIM1TTOV_TOV3:      equ    3                                         ; Toggle On Overflow Bit 3
TIM1TTOV_TOV4:      equ    4                                         ; Toggle On Overflow Bit 4
TIM1TTOV_TOV5:      equ    5                                         ; Toggle On Overflow Bit 5
TIM1TTOV_TOV6:      equ    6                                         ; Toggle On Overflow Bit 6
TIM1TTOV_TOV7:      equ    7                                         ; Toggle On Overflow Bit 7
; bit position masks
mTIM1TTOV_TOV0:     equ    %00000001
mTIM1TTOV_TOV1:     equ    %00000010
mTIM1TTOV_TOV2:     equ    %00000100
mTIM1TTOV_TOV3:     equ    %00001000
mTIM1TTOV_TOV4:     equ    %00010000
mTIM1TTOV_TOV5:     equ    %00100000
mTIM1TTOV_TOV6:     equ    %01000000
mTIM1TTOV_TOV7:     equ    %10000000


;*** TIM1TCTL1 - Timer Control Register 1; 0x00000408 ***
TIM1TCTL1:          equ    $00000408                                ;*** TIM1TCTL1 - Timer Control Register 1; 0x00000408 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TCTL1_OL4:      equ    0                                         ; Output Level Bit 4
TIM1TCTL1_OM4:      equ    1                                         ; Output Mode Bit 4
TIM1TCTL1_OL5:      equ    2                                         ; Output Level Bit 5
TIM1TCTL1_OM5:      equ    3                                         ; Output Mode Bit 5
TIM1TCTL1_OL6:      equ    4                                         ; Output Level Bit 6
TIM1TCTL1_OM6:      equ    5                                         ; Output Mode Bit 6
TIM1TCTL1_OL7:      equ    6                                         ; Output Level Bit 7
TIM1TCTL1_OM7:      equ    7                                         ; Output Mode Bit 7
; bit position masks
mTIM1TCTL1_OL4:     equ    %00000001
mTIM1TCTL1_OM4:     equ    %00000010
mTIM1TCTL1_OL5:     equ    %00000100
mTIM1TCTL1_OM5:     equ    %00001000
mTIM1TCTL1_OL6:     equ    %00010000
mTIM1TCTL1_OM6:     equ    %00100000
mTIM1TCTL1_OL7:     equ    %01000000
mTIM1TCTL1_OM7:     equ    %10000000


;*** TIM1TCTL2 - Timer Control Register 2; 0x00000409 ***
TIM1TCTL2:          equ    $00000409                                ;*** TIM1TCTL2 - Timer Control Register 2; 0x00000409 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TCTL2_OL0:      equ    0                                         ; Output Level Bit 0
TIM1TCTL2_OM0:      equ    1                                         ; Output Mode Bit 0
TIM1TCTL2_OL1:      equ    2                                         ; Output Level Bit 1
TIM1TCTL2_OM1:      equ    3                                         ; Output Mode Bit 1
TIM1TCTL2_OL2:      equ    4                                         ; Output Level Bit 2
TIM1TCTL2_OM2:      equ    5                                         ; Output Mode Bit 2
TIM1TCTL2_OL3:      equ    6                                         ; Output Level Bit 3
TIM1TCTL2_OM3:      equ    7                                         ; Output Mode Bit 3
; bit position masks
mTIM1TCTL2_OL0:     equ    %00000001
mTIM1TCTL2_OM0:     equ    %00000010
mTIM1TCTL2_OL1:     equ    %00000100
mTIM1TCTL2_OM1:     equ    %00001000
mTIM1TCTL2_OL2:     equ    %00010000
mTIM1TCTL2_OM2:     equ    %00100000
mTIM1TCTL2_OL3:     equ    %01000000
mTIM1TCTL2_OM3:     equ    %10000000


;*** TIM1TCTL3 - Timer Control Register 3; 0x0000040A ***
TIM1TCTL3:          equ    $0000040A                                ;*** TIM1TCTL3 - Timer Control Register 3; 0x0000040A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TCTL3_EDG4A:    equ    0                                         ; Input Capture Edge Control 4A
TIM1TCTL3_EDG4B:    equ    1                                         ; Input Capture Edge Control 4B
TIM1TCTL3_EDG5A:    equ    2                                         ; Input Capture Edge Control 5A
TIM1TCTL3_EDG5B:    equ    3                                         ; Input Capture Edge Control 5B
TIM1TCTL3_EDG6A:    equ    4                                         ; Input Capture Edge Control 6A
TIM1TCTL3_EDG6B:    equ    5                                         ; Input Capture Edge Control 6B
TIM1TCTL3_EDG7A:    equ    6                                         ; Input Capture Edge Control 7A
TIM1TCTL3_EDG7B:    equ    7                                         ; Input Capture Edge Control 7B
; bit position masks
mTIM1TCTL3_EDG4A:   equ    %00000001
mTIM1TCTL3_EDG4B:   equ    %00000010
mTIM1TCTL3_EDG5A:   equ    %00000100
mTIM1TCTL3_EDG5B:   equ    %00001000
mTIM1TCTL3_EDG6A:   equ    %00010000
mTIM1TCTL3_EDG6B:   equ    %00100000
mTIM1TCTL3_EDG7A:   equ    %01000000
mTIM1TCTL3_EDG7B:   equ    %10000000


;*** TIM1TCTL4 - Timer Control Register 4; 0x0000040B ***
TIM1TCTL4:          equ    $0000040B                                ;*** TIM1TCTL4 - Timer Control Register 4; 0x0000040B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TCTL4_EDG0A:    equ    0                                         ; Input Capture Edge Control 0A
TIM1TCTL4_EDG0B:    equ    1                                         ; Input Capture Edge Control 0B
TIM1TCTL4_EDG1A:    equ    2                                         ; Input Capture Edge Control 1A
TIM1TCTL4_EDG1B:    equ    3                                         ; Input Capture Edge Control 1B
TIM1TCTL4_EDG2A:    equ    4                                         ; Input Capture Edge Control 2A
TIM1TCTL4_EDG2B:    equ    5                                         ; Input Capture Edge Control 2B
TIM1TCTL4_EDG3A:    equ    6                                         ; Input Capture Edge Control 3A
TIM1TCTL4_EDG3B:    equ    7                                         ; Input Capture Edge Control 3B
; bit position masks
mTIM1TCTL4_EDG0A:   equ    %00000001
mTIM1TCTL4_EDG0B:   equ    %00000010
mTIM1TCTL4_EDG1A:   equ    %00000100
mTIM1TCTL4_EDG1B:   equ    %00001000
mTIM1TCTL4_EDG2A:   equ    %00010000
mTIM1TCTL4_EDG2B:   equ    %00100000
mTIM1TCTL4_EDG3A:   equ    %01000000
mTIM1TCTL4_EDG3B:   equ    %10000000


;*** TIM1TIE - Timer Interrupt Enable Register; 0x0000040C ***
TIM1TIE:            equ    $0000040C                                ;*** TIM1TIE - Timer Interrupt Enable Register; 0x0000040C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TIE_C0I:        equ    0                                         ; Input Capture/Output Compare Interrupt Enable Bit 0
TIM1TIE_C1I:        equ    1                                         ; Input Capture/Output Compare Interrupt Enable Bit 1
TIM1TIE_C2I:        equ    2                                         ; Input Capture/Output Compare Interrupt Enable Bit 2
TIM1TIE_C3I:        equ    3                                         ; Input Capture/Output Compare Interrupt Enable Bit 3
TIM1TIE_C4I:        equ    4                                         ; Input Capture/Output Compare Interrupt Enable Bit 4
TIM1TIE_C5I:        equ    5                                         ; Input Capture/Output Compare Interrupt Enable Bit 5
TIM1TIE_C6I:        equ    6                                         ; Input Capture/Output Compare Interrupt Enable Bit 6
TIM1TIE_C7I:        equ    7                                         ; Input Capture/Output Compare Interrupt Enable Bit 7
; bit position masks
mTIM1TIE_C0I:       equ    %00000001
mTIM1TIE_C1I:       equ    %00000010
mTIM1TIE_C2I:       equ    %00000100
mTIM1TIE_C3I:       equ    %00001000
mTIM1TIE_C4I:       equ    %00010000
mTIM1TIE_C5I:       equ    %00100000
mTIM1TIE_C6I:       equ    %01000000
mTIM1TIE_C7I:       equ    %10000000


;*** TIM1TSCR2 - Timer System Control Register 2; 0x0000040D ***
TIM1TSCR2:          equ    $0000040D                                ;*** TIM1TSCR2 - Timer System Control Register 2; 0x0000040D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TSCR2_PR0:      equ    0                                         ; Timer Prescaler Select Bit 0
TIM1TSCR2_PR1:      equ    1                                         ; Timer Prescaler Select Bit 1
TIM1TSCR2_PR2:      equ    2                                         ; Timer Prescaler Select Bit 2
TIM1TSCR2_TCRE:     equ    3                                         ; Timer Counter Reset Enable
TIM1TSCR2_TOI:      equ    7                                         ; Timer Overflow Interrupt Enable
; bit position masks
mTIM1TSCR2_PR0:     equ    %00000001
mTIM1TSCR2_PR1:     equ    %00000010
mTIM1TSCR2_PR2:     equ    %00000100
mTIM1TSCR2_TCRE:    equ    %00001000
mTIM1TSCR2_TOI:     equ    %10000000


;*** TIM1TFLG1 - Main Timer Interrupt Flag 1; 0x0000040E ***
TIM1TFLG1:          equ    $0000040E                                ;*** TIM1TFLG1 - Main Timer Interrupt Flag 1; 0x0000040E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TFLG1_C0F:      equ    0                                         ; Input Capture/Output Compare Channel interrupt flag 0
TIM1TFLG1_C1F:      equ    1                                         ; Input Capture/Output Compare Channel interrupt flag 1
TIM1TFLG1_C2F:      equ    2                                         ; Input Capture/Output Compare Channel interrupt flag 2
TIM1TFLG1_C3F:      equ    3                                         ; Input Capture/Output Compare Channel interrupt flag 3
TIM1TFLG1_C4F:      equ    4                                         ; Input Capture/Output Compare Channel interrupt flag 4
TIM1TFLG1_C5F:      equ    5                                         ; Input Capture/Output Compare Channel interrupt flag 5
TIM1TFLG1_C6F:      equ    6                                         ; Input Capture/Output Compare Channel interrupt flag 6
TIM1TFLG1_C7F:      equ    7                                         ; Input Capture/Output Compare Channel interrupt flag 7
; bit position masks
mTIM1TFLG1_C0F:     equ    %00000001
mTIM1TFLG1_C1F:     equ    %00000010
mTIM1TFLG1_C2F:     equ    %00000100
mTIM1TFLG1_C3F:     equ    %00001000
mTIM1TFLG1_C4F:     equ    %00010000
mTIM1TFLG1_C5F:     equ    %00100000
mTIM1TFLG1_C6F:     equ    %01000000
mTIM1TFLG1_C7F:     equ    %10000000


;*** TIM1TFLG2 - Main Timer Interrupt Flag 2; 0x0000040F ***
TIM1TFLG2:          equ    $0000040F                                ;*** TIM1TFLG2 - Main Timer Interrupt Flag 2; 0x0000040F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1TFLG2_TOF:      equ    7                                         ; Timer Overflow interrupt flag
; bit position masks
mTIM1TFLG2_TOF:     equ    %10000000


;*** TIM1TC0 - Timer Input Capture/Output Compare Register 0; 0x00000410 ***
TIM1TC0:            equ    $00000410                                ;*** TIM1TC0 - Timer Input Capture/Output Compare Register 0; 0x00000410 ***


;*** TIM1TC0Hi - Timer Input Capture/Output Compare Register 0 High (OBSOLETE - defined for backward compatibility); 0x00000410 ***
TIM1TC0Hi:          equ    $00000410                                ;*** TIM1TC0Hi - Timer Input Capture/Output Compare Register 0 High (OBSOLETE - defined for backward compatibility); 0x00000410 ***


;*** TIM1TC0H - Timer Input Capture/Output Compare Register 0 High; 0x00000410 ***
TIM1TC0H:           equ    $00000410                                ;*** TIM1TC0H - Timer Input Capture/Output Compare Register 0 High; 0x00000410 ***


;*** TIM1TC0Lo - Timer Input Capture/Output Compare Register 0 Low (OBSOLETE - defined for backward compatibility); 0x00000411 ***
TIM1TC0Lo:          equ    $00000411                                ;*** TIM1TC0Lo - Timer Input Capture/Output Compare Register 0 Low (OBSOLETE - defined for backward compatibility); 0x00000411 ***


;*** TIM1TC0L - Timer Input Capture/Output Compare Register 0 Low; 0x00000411 ***
TIM1TC0L:           equ    $00000411                                ;*** TIM1TC0L - Timer Input Capture/Output Compare Register 0 Low; 0x00000411 ***


;*** TIM1TC1 - Timer Input Capture/Output Compare Register 1; 0x00000412 ***
TIM1TC1:            equ    $00000412                                ;*** TIM1TC1 - Timer Input Capture/Output Compare Register 1; 0x00000412 ***


;*** TIM1TC1Hi - Timer Input Capture/Output Compare Register 1 High (OBSOLETE - defined for backward compatibility); 0x00000412 ***
TIM1TC1Hi:          equ    $00000412                                ;*** TIM1TC1Hi - Timer Input Capture/Output Compare Register 1 High (OBSOLETE - defined for backward compatibility); 0x00000412 ***


;*** TIM1TC1H - Timer Input Capture/Output Compare Register 1 High; 0x00000412 ***
TIM1TC1H:           equ    $00000412                                ;*** TIM1TC1H - Timer Input Capture/Output Compare Register 1 High; 0x00000412 ***


;*** TIM1TC1Lo - Timer Input Capture/Output Compare Register 1 Low (OBSOLETE - defined for backward compatibility); 0x00000413 ***
TIM1TC1Lo:          equ    $00000413                                ;*** TIM1TC1Lo - Timer Input Capture/Output Compare Register 1 Low (OBSOLETE - defined for backward compatibility); 0x00000413 ***


;*** TIM1TC1L - Timer Input Capture/Output Compare Register 1 Low; 0x00000413 ***
TIM1TC1L:           equ    $00000413                                ;*** TIM1TC1L - Timer Input Capture/Output Compare Register 1 Low; 0x00000413 ***


;*** TIM1TC2 - Timer Input Capture/Output Compare Register 2; 0x00000414 ***
TIM1TC2:            equ    $00000414                                ;*** TIM1TC2 - Timer Input Capture/Output Compare Register 2; 0x00000414 ***


;*** TIM1TC2Hi - Timer Input Capture/Output Compare Register 2 High (OBSOLETE - defined for backward compatibility); 0x00000414 ***
TIM1TC2Hi:          equ    $00000414                                ;*** TIM1TC2Hi - Timer Input Capture/Output Compare Register 2 High (OBSOLETE - defined for backward compatibility); 0x00000414 ***


;*** TIM1TC2H - Timer Input Capture/Output Compare Register 2 High; 0x00000414 ***
TIM1TC2H:           equ    $00000414                                ;*** TIM1TC2H - Timer Input Capture/Output Compare Register 2 High; 0x00000414 ***


;*** TIM1TC2Lo - Timer Input Capture/Output Compare Register 2 Low (OBSOLETE - defined for backward compatibility); 0x00000415 ***
TIM1TC2Lo:          equ    $00000415                                ;*** TIM1TC2Lo - Timer Input Capture/Output Compare Register 2 Low (OBSOLETE - defined for backward compatibility); 0x00000415 ***


;*** TIM1TC2L - Timer Input Capture/Output Compare Register 2 Low; 0x00000415 ***
TIM1TC2L:           equ    $00000415                                ;*** TIM1TC2L - Timer Input Capture/Output Compare Register 2 Low; 0x00000415 ***


;*** TIM1TC3 - Timer Input Capture/Output Compare Register 3; 0x00000416 ***
TIM1TC3:            equ    $00000416                                ;*** TIM1TC3 - Timer Input Capture/Output Compare Register 3; 0x00000416 ***


;*** TIM1TC3Hi - Timer Input Capture/Output Compare Register 3 High (OBSOLETE - defined for backward compatibility); 0x00000416 ***
TIM1TC3Hi:          equ    $00000416                                ;*** TIM1TC3Hi - Timer Input Capture/Output Compare Register 3 High (OBSOLETE - defined for backward compatibility); 0x00000416 ***


;*** TIM1TC3H - Timer Input Capture/Output Compare Register 3 High; 0x00000416 ***
TIM1TC3H:           equ    $00000416                                ;*** TIM1TC3H - Timer Input Capture/Output Compare Register 3 High; 0x00000416 ***


;*** TIM1TC3Lo - Timer Input Capture/Output Compare Register 3 Low (OBSOLETE - defined for backward compatibility); 0x00000417 ***
TIM1TC3Lo:          equ    $00000417                                ;*** TIM1TC3Lo - Timer Input Capture/Output Compare Register 3 Low (OBSOLETE - defined for backward compatibility); 0x00000417 ***


;*** TIM1TC3L - Timer Input Capture/Output Compare Register 3 Low; 0x00000417 ***
TIM1TC3L:           equ    $00000417                                ;*** TIM1TC3L - Timer Input Capture/Output Compare Register 3 Low; 0x00000417 ***


;*** TIM1TC4 - Timer Input Capture/Output Compare Register 4; 0x00000418 ***
TIM1TC4:            equ    $00000418                                ;*** TIM1TC4 - Timer Input Capture/Output Compare Register 4; 0x00000418 ***


;*** TIM1TC4Hi - Timer Input Capture/Output Compare Register 4 High (OBSOLETE - defined for backward compatibility); 0x00000418 ***
TIM1TC4Hi:          equ    $00000418                                ;*** TIM1TC4Hi - Timer Input Capture/Output Compare Register 4 High (OBSOLETE - defined for backward compatibility); 0x00000418 ***


;*** TIM1TC4H - Timer Input Capture/Output Compare Register 4 High; 0x00000418 ***
TIM1TC4H:           equ    $00000418                                ;*** TIM1TC4H - Timer Input Capture/Output Compare Register 4 High; 0x00000418 ***


;*** TIM1TC4Lo - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x00000419 ***
TIM1TC4Lo:          equ    $00000419                                ;*** TIM1TC4Lo - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x00000419 ***


;*** TIM1TC4L - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x00000419 ***
TIM1TC4L:           equ    $00000419                                ;*** TIM1TC4L - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x00000419 ***


;*** TIM1TC5 - Timer Input Capture/Output Compare Register 5; 0x0000041A ***
TIM1TC5:            equ    $0000041A                                ;*** TIM1TC5 - Timer Input Capture/Output Compare Register 5; 0x0000041A ***


;*** TIM1TC5Hi - Timer Input Capture/Output Compare Register 5 High (OBSOLETE - defined for backward compatibility); 0x0000041A ***
TIM1TC5Hi:          equ    $0000041A                                ;*** TIM1TC5Hi - Timer Input Capture/Output Compare Register 5 High (OBSOLETE - defined for backward compatibility); 0x0000041A ***


;*** TIM1TC5H - Timer Input Capture/Output Compare Register 5 High; 0x0000041A ***
TIM1TC5H:           equ    $0000041A                                ;*** TIM1TC5H - Timer Input Capture/Output Compare Register 5 High; 0x0000041A ***


;*** TIM1TC5Lo - Timer Input Capture/Output Compare Register 5 Low (OBSOLETE - defined for backward compatibility); 0x0000041B ***
TIM1TC5Lo:          equ    $0000041B                                ;*** TIM1TC5Lo - Timer Input Capture/Output Compare Register 5 Low (OBSOLETE - defined for backward compatibility); 0x0000041B ***


;*** TIM1TC5L - Timer Input Capture/Output Compare Register 5 Low; 0x0000041B ***
TIM1TC5L:           equ    $0000041B                                ;*** TIM1TC5L - Timer Input Capture/Output Compare Register 5 Low; 0x0000041B ***


;*** TIM1TC6 - Timer Input Capture/Output Compare Register 6; 0x0000041C ***
TIM1TC6:            equ    $0000041C                                ;*** TIM1TC6 - Timer Input Capture/Output Compare Register 6; 0x0000041C ***


;*** TIM1TC6Hi - Timer Input Capture/Output Compare Register 6 High (OBSOLETE - defined for backward compatibility); 0x0000041C ***
TIM1TC6Hi:          equ    $0000041C                                ;*** TIM1TC6Hi - Timer Input Capture/Output Compare Register 6 High (OBSOLETE - defined for backward compatibility); 0x0000041C ***


;*** TIM1TC6H - Timer Input Capture/Output Compare Register 6 High; 0x0000041C ***
TIM1TC6H:           equ    $0000041C                                ;*** TIM1TC6H - Timer Input Capture/Output Compare Register 6 High; 0x0000041C ***


;*** TIM1TC6Lo - Timer Input Capture/Output Compare Register 6 Low (OBSOLETE - defined for backward compatibility); 0x0000041D ***
TIM1TC6Lo:          equ    $0000041D                                ;*** TIM1TC6Lo - Timer Input Capture/Output Compare Register 6 Low (OBSOLETE - defined for backward compatibility); 0x0000041D ***


;*** TIM1TC6L - Timer Input Capture/Output Compare Register 6 Low; 0x0000041D ***
TIM1TC6L:           equ    $0000041D                                ;*** TIM1TC6L - Timer Input Capture/Output Compare Register 6 Low; 0x0000041D ***


;*** TIM1TC7 - Timer Input Capture/Output Compare Register 7; 0x0000041E ***
TIM1TC7:            equ    $0000041E                                ;*** TIM1TC7 - Timer Input Capture/Output Compare Register 7; 0x0000041E ***


;*** TIM1TC7Hi - Timer Input Capture/Output Compare Register 7 High (OBSOLETE - defined for backward compatibility); 0x0000041E ***
TIM1TC7Hi:          equ    $0000041E                                ;*** TIM1TC7Hi - Timer Input Capture/Output Compare Register 7 High (OBSOLETE - defined for backward compatibility); 0x0000041E ***


;*** TIM1TC7H - Timer Input Capture/Output Compare Register 7 High; 0x0000041E ***
TIM1TC7H:           equ    $0000041E                                ;*** TIM1TC7H - Timer Input Capture/Output Compare Register 7 High; 0x0000041E ***


;*** TIM1TC7Lo - Timer Input Capture/Output Compare Register 7 Low (OBSOLETE - defined for backward compatibility); 0x0000041F ***
TIM1TC7Lo:          equ    $0000041F                                ;*** TIM1TC7Lo - Timer Input Capture/Output Compare Register 7 Low (OBSOLETE - defined for backward compatibility); 0x0000041F ***


;*** TIM1TC7L - Timer Input Capture/Output Compare Register 7 Low; 0x0000041F ***
TIM1TC7L:           equ    $0000041F                                ;*** TIM1TC7L - Timer Input Capture/Output Compare Register 7 Low; 0x0000041F ***


;*** TIM1PACTL - 16-Bit Pulse Accumulator A Control Register; 0x00000420 ***
TIM1PACTL:          equ    $00000420                                ;*** TIM1PACTL - 16-Bit Pulse Accumulator A Control Register; 0x00000420 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1PACTL_PAI:      equ    0                                         ; Pulse Accumulator Input Interrupt enable
TIM1PACTL_PAOVI:    equ    1                                         ; Pulse Accumulator A Overflow Interrupt enable
TIM1PACTL_CLK0:     equ    2                                         ; Clock Select Bit 0
TIM1PACTL_CLK1:     equ    3                                         ; Clock Select Bit 1
TIM1PACTL_PEDGE:    equ    4                                         ; Pulse Accumulator Edge Control
TIM1PACTL_PAMOD:    equ    5                                         ; Pulse Accumulator Mode
TIM1PACTL_PAEN:     equ    6                                         ; Pulse Accumulator A System Enable
; bit position masks
mTIM1PACTL_PAI:     equ    %00000001
mTIM1PACTL_PAOVI:   equ    %00000010
mTIM1PACTL_CLK0:    equ    %00000100
mTIM1PACTL_CLK1:    equ    %00001000
mTIM1PACTL_PEDGE:   equ    %00010000
mTIM1PACTL_PAMOD:   equ    %00100000
mTIM1PACTL_PAEN:    equ    %01000000


;*** TIM1PAFLG - Pulse Accumulator A Flag Register; 0x00000421 ***
TIM1PAFLG:          equ    $00000421                                ;*** TIM1PAFLG - Pulse Accumulator A Flag Register; 0x00000421 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1PAFLG_PAIF:     equ    0                                         ; Pulse Accumulator Input edge interrupt flag
TIM1PAFLG_PAOVF:    equ    1                                         ; Pulse Accumulator A Overflow interrupt flag
; bit position masks
mTIM1PAFLG_PAIF:    equ    %00000001
mTIM1PAFLG_PAOVF:   equ    %00000010


;*** TIM1PACNT - Pulse Accumulators Count Register; 0x00000422 ***
TIM1PACNT:          equ    $00000422                                ;*** TIM1PACNT - Pulse Accumulators Count Register; 0x00000422 ***


;*** TIM1PACNTH - Pulse Accumulators Count Register High; 0x00000422 ***
TIM1PACNTH:         equ    $00000422                                ;*** TIM1PACNTH - Pulse Accumulators Count Register High; 0x00000422 ***


;*** TIM1PACNTL - Pulse Accumulators Count Register Low; 0x00000423 ***
TIM1PACNTL:         equ    $00000423                                ;*** TIM1PACNTL - Pulse Accumulators Count Register Low; 0x00000423 ***


;*** TIM1OCPD - Output Compare Pin Disconnect Register; 0x0000042C ***
TIM1OCPD:           equ    $0000042C                                ;*** TIM1OCPD - Output Compare Pin Disconnect Register; 0x0000042C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1OCPD_OCPD0:     equ    0                                         ; Output Compare Pin Disconnect Bit 0
TIM1OCPD_OCPD1:     equ    1                                         ; Output Compare Pin Disconnect Bit 1
TIM1OCPD_OCPD2:     equ    2                                         ; Output Compare Pin Disconnect Bit 2
TIM1OCPD_OCPD3:     equ    3                                         ; Output Compare Pin Disconnect Bit 3
TIM1OCPD_OCPD4:     equ    4                                         ; Output Compare Pin Disconnect Bit 4
TIM1OCPD_OCPD5:     equ    5                                         ; Output Compare Pin Disconnect Bit 5
TIM1OCPD_OCPD6:     equ    6                                         ; Output Compare Pin Disconnect Bit 6
TIM1OCPD_OCPD7:     equ    7                                         ; Output Compare Pin Disconnect Bit 7
; bit position masks
mTIM1OCPD_OCPD0:    equ    %00000001
mTIM1OCPD_OCPD1:    equ    %00000010
mTIM1OCPD_OCPD2:    equ    %00000100
mTIM1OCPD_OCPD3:    equ    %00001000
mTIM1OCPD_OCPD4:    equ    %00010000
mTIM1OCPD_OCPD5:    equ    %00100000
mTIM1OCPD_OCPD6:    equ    %01000000
mTIM1OCPD_OCPD7:    equ    %10000000


;*** TIM1PTPSR - Precision Timer Prescaler Select Register; 0x0000042E ***
TIM1PTPSR:          equ    $0000042E                                ;*** TIM1PTPSR - Precision Timer Prescaler Select Register; 0x0000042E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM1PTPSR_PTPS0:    equ    0                                         ; Precision Timer Prescaler Select Bit 0
TIM1PTPSR_PTPS1:    equ    1                                         ; Precision Timer Prescaler Select Bit 1
TIM1PTPSR_PTPS2:    equ    2                                         ; Precision Timer Prescaler Select Bit 2
TIM1PTPSR_PTPS3:    equ    3                                         ; Precision Timer Prescaler Select Bit 3
TIM1PTPSR_PTPS4:    equ    4                                         ; Precision Timer Prescaler Select Bit 4
TIM1PTPSR_PTPS5:    equ    5                                         ; Precision Timer Prescaler Select Bit 5
TIM1PTPSR_PTPS6:    equ    6                                         ; Precision Timer Prescaler Select Bit 6
TIM1PTPSR_PTPS7:    equ    7                                         ; Precision Timer Prescaler Select Bit 7
; bit position masks
mTIM1PTPSR_PTPS0:   equ    %00000001
mTIM1PTPSR_PTPS1:   equ    %00000010
mTIM1PTPSR_PTPS2:   equ    %00000100
mTIM1PTPSR_PTPS3:   equ    %00001000
mTIM1PTPSR_PTPS4:   equ    %00010000
mTIM1PTPSR_PTPS5:   equ    %00100000
mTIM1PTPSR_PTPS6:   equ    %01000000
mTIM1PTPSR_PTPS7:   equ    %10000000


;*** PWME - PWM Enable Register; 0x00000480 ***
PWME:               equ    $00000480                                ;*** PWME - PWM Enable Register; 0x00000480 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWME_PWME0:         equ    0                                         ; Pulse Width Channel 0 Enable
PWME_PWME1:         equ    1                                         ; Pulse Width Channel 1 Enable
PWME_PWME2:         equ    2                                         ; Pulse Width Channel 2 Enable
PWME_PWME3:         equ    3                                         ; Pulse Width Channel 3 Enable
PWME_PWME4:         equ    4                                         ; Pulse Width Channel 4 Enable
PWME_PWME5:         equ    5                                         ; Pulse Width Channel 5 Enable
PWME_PWME6:         equ    6                                         ; Pulse Width Channel 6 Enable
PWME_PWME7:         equ    7                                         ; Pulse Width Channel 7 Enable
; bit position masks
mPWME_PWME0:        equ    %00000001
mPWME_PWME1:        equ    %00000010
mPWME_PWME2:        equ    %00000100
mPWME_PWME3:        equ    %00001000
mPWME_PWME4:        equ    %00010000
mPWME_PWME5:        equ    %00100000
mPWME_PWME6:        equ    %01000000
mPWME_PWME7:        equ    %10000000


;*** PWMPOL - PWM Polarity Register; 0x00000481 ***
PWMPOL:             equ    $00000481                                ;*** PWMPOL - PWM Polarity Register; 0x00000481 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMPOL_PPOL0:       equ    0                                         ; Pulse Width Channel 0 Polarity
PWMPOL_PPOL1:       equ    1                                         ; Pulse Width Channel 1 Polarity
PWMPOL_PPOL2:       equ    2                                         ; Pulse Width Channel 2 Polarity
PWMPOL_PPOL3:       equ    3                                         ; Pulse Width Channel 3 Polarity
PWMPOL_PPOL4:       equ    4                                         ; Pulse Width Channel 4 Polarity
PWMPOL_PPOL5:       equ    5                                         ; Pulse Width Channel 5 Polarity
PWMPOL_PPOL6:       equ    6                                         ; Pulse Width Channel 6 Polarity
PWMPOL_PPOL7:       equ    7                                         ; Pulse Width Channel 7 Polarity
; bit position masks
mPWMPOL_PPOL0:      equ    %00000001
mPWMPOL_PPOL1:      equ    %00000010
mPWMPOL_PPOL2:      equ    %00000100
mPWMPOL_PPOL3:      equ    %00001000
mPWMPOL_PPOL4:      equ    %00010000
mPWMPOL_PPOL5:      equ    %00100000
mPWMPOL_PPOL6:      equ    %01000000
mPWMPOL_PPOL7:      equ    %10000000


;*** PWMCLK - PWM Clock Select Register; 0x00000482 ***
PWMCLK:             equ    $00000482                                ;*** PWMCLK - PWM Clock Select Register; 0x00000482 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMCLK_PCLK0:       equ    0                                         ; Pulse Width Channel 0 Clock Select
PWMCLK_PCLK1:       equ    1                                         ; Pulse Width Channel 1 Clock Select
PWMCLK_PCLK2:       equ    2                                         ; Pulse Width Channel 2 Clock Select
PWMCLK_PCLK3:       equ    3                                         ; Pulse Width Channel 3 Clock Select
PWMCLK_PCLK4:       equ    4                                         ; Pulse Width Channel 4 Clock Select
PWMCLK_PCLK5:       equ    5                                         ; Pulse Width Channel 5 Clock Select
PWMCLK_PCLK6:       equ    6                                         ; Pulse Width Channel 6 Clock Select
PWMCLK_PCLK7:       equ    7                                         ; Pulse Width Channel 7 Clock Select
; bit position masks
mPWMCLK_PCLK0:      equ    %00000001
mPWMCLK_PCLK1:      equ    %00000010
mPWMCLK_PCLK2:      equ    %00000100
mPWMCLK_PCLK3:      equ    %00001000
mPWMCLK_PCLK4:      equ    %00010000
mPWMCLK_PCLK5:      equ    %00100000
mPWMCLK_PCLK6:      equ    %01000000
mPWMCLK_PCLK7:      equ    %10000000


;*** PWMPRCLK - PWM Prescale Clock Select Register; 0x00000483 ***
PWMPRCLK:           equ    $00000483                                ;*** PWMPRCLK - PWM Prescale Clock Select Register; 0x00000483 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMPRCLK_PCKA0:     equ    0                                         ; Prescaler Select for Clock A 0
PWMPRCLK_PCKA1:     equ    1                                         ; Prescaler Select for Clock A 1
PWMPRCLK_PCKA2:     equ    2                                         ; Prescaler Select for Clock A 2
PWMPRCLK_PCKB0:     equ    4                                         ; Prescaler Select for Clock B 0
PWMPRCLK_PCKB1:     equ    5                                         ; Prescaler Select for Clock B 1
PWMPRCLK_PCKB2:     equ    6                                         ; Prescaler Select for Clock B 2
; bit position masks
mPWMPRCLK_PCKA0:    equ    %00000001
mPWMPRCLK_PCKA1:    equ    %00000010
mPWMPRCLK_PCKA2:    equ    %00000100
mPWMPRCLK_PCKB0:    equ    %00010000
mPWMPRCLK_PCKB1:    equ    %00100000
mPWMPRCLK_PCKB2:    equ    %01000000


;*** PWMCAE - PWM Center Align Enable Register; 0x00000484 ***
PWMCAE:             equ    $00000484                                ;*** PWMCAE - PWM Center Align Enable Register; 0x00000484 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMCAE_CAE0:        equ    0                                         ; Center Aligned Output Mode on channel 0
PWMCAE_CAE1:        equ    1                                         ; Center Aligned Output Mode on channel 1
PWMCAE_CAE2:        equ    2                                         ; Center Aligned Output Mode on channel 2
PWMCAE_CAE3:        equ    3                                         ; Center Aligned Output Mode on channel 3
PWMCAE_CAE4:        equ    4                                         ; Center Aligned Output Mode on channel 4
PWMCAE_CAE5:        equ    5                                         ; Center Aligned Output Mode on channel 5
PWMCAE_CAE6:        equ    6                                         ; Center Aligned Output Mode on channel 6
PWMCAE_CAE7:        equ    7                                         ; Center Aligned Output Mode on channel 7
; bit position masks
mPWMCAE_CAE0:       equ    %00000001
mPWMCAE_CAE1:       equ    %00000010
mPWMCAE_CAE2:       equ    %00000100
mPWMCAE_CAE3:       equ    %00001000
mPWMCAE_CAE4:       equ    %00010000
mPWMCAE_CAE5:       equ    %00100000
mPWMCAE_CAE6:       equ    %01000000
mPWMCAE_CAE7:       equ    %10000000


;*** PWMCTL - PWM Control Register; 0x00000485 ***
PWMCTL:             equ    $00000485                                ;*** PWMCTL - PWM Control Register; 0x00000485 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMCTL_PFRZ:        equ    2                                         ; PWM Counters Stop in Freeze Mode
PWMCTL_PSWAI:       equ    3                                         ; PWM Stops in Wait Mode
PWMCTL_CON01:       equ    4                                         ; Concatenate channels 0 and 1
PWMCTL_CON23:       equ    5                                         ; Concatenate channels 2 and 3
PWMCTL_CON45:       equ    6                                         ; Concatenate channels 4 and 5
PWMCTL_CON67:       equ    7                                         ; Concatenate channels 6 and 7
; bit position masks
mPWMCTL_PFRZ:       equ    %00000100
mPWMCTL_PSWAI:      equ    %00001000
mPWMCTL_CON01:      equ    %00010000
mPWMCTL_CON23:      equ    %00100000
mPWMCTL_CON45:      equ    %01000000
mPWMCTL_CON67:      equ    %10000000


;*** PWMCLKAB - PWM Clock Select Register; 0x00000486 ***
PWMCLKAB:           equ    $00000486                                ;*** PWMCLKAB - PWM Clock Select Register; 0x00000486 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMCLKAB_PCLKAB0:   equ    0                                         ; Pulse Width Channel 0 Clock A/B Select
PWMCLKAB_PCLKAB1:   equ    1                                         ; Pulse Width Channel 1 Clock A/B Select
PWMCLKAB_PCLKAB2:   equ    2                                         ; Pulse Width Channel 2 Clock A/B Select
PWMCLKAB_PCLKAB3:   equ    3                                         ; Pulse Width Channel 3 Clock A/B Select
PWMCLKAB_PCLKAB4:   equ    4                                         ; Pulse Width Channel 4 Clock A/B Select
PWMCLKAB_PCLKAB5:   equ    5                                         ; Pulse Width Channel 5 Clock A/B Select
PWMCLKAB_PCLKAB6:   equ    6                                         ; Pulse Width Channel 6 Clock A/B Select
PWMCLKAB_PCLKAB7:   equ    7                                         ; Pulse Width Channel 7 Clock A/B Select
; bit position masks
mPWMCLKAB_PCLKAB0:  equ    %00000001
mPWMCLKAB_PCLKAB1:  equ    %00000010
mPWMCLKAB_PCLKAB2:  equ    %00000100
mPWMCLKAB_PCLKAB3:  equ    %00001000
mPWMCLKAB_PCLKAB4:  equ    %00010000
mPWMCLKAB_PCLKAB5:  equ    %00100000
mPWMCLKAB_PCLKAB6:  equ    %01000000
mPWMCLKAB_PCLKAB7:  equ    %10000000


;*** PWMSCLA - PWM Scale A Register; 0x00000488 ***
PWMSCLA:            equ    $00000488                                ;*** PWMSCLA - PWM Scale A Register; 0x00000488 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMSCLA_BIT0:       equ    0                                         ; PWM Scale A Bit 0
PWMSCLA_BIT1:       equ    1                                         ; PWM Scale A Bit 1
PWMSCLA_BIT2:       equ    2                                         ; PWM Scale A Bit 2
PWMSCLA_BIT3:       equ    3                                         ; PWM Scale A Bit 3
PWMSCLA_BIT4:       equ    4                                         ; PWM Scale A Bit 4
PWMSCLA_BIT5:       equ    5                                         ; PWM Scale A Bit 5
PWMSCLA_BIT6:       equ    6                                         ; PWM Scale A Bit 6
PWMSCLA_BIT7:       equ    7                                         ; PWM Scale A Bit 7
; bit position masks
mPWMSCLA_BIT0:      equ    %00000001
mPWMSCLA_BIT1:      equ    %00000010
mPWMSCLA_BIT2:      equ    %00000100
mPWMSCLA_BIT3:      equ    %00001000
mPWMSCLA_BIT4:      equ    %00010000
mPWMSCLA_BIT5:      equ    %00100000
mPWMSCLA_BIT6:      equ    %01000000
mPWMSCLA_BIT7:      equ    %10000000


;*** PWMSCLB - PWM Scale B Register; 0x00000489 ***
PWMSCLB:            equ    $00000489                                ;*** PWMSCLB - PWM Scale B Register; 0x00000489 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PWMSCLB_BIT0:       equ    0                                         ; PWM Scale B Bit 0
PWMSCLB_BIT1:       equ    1                                         ; PWM Scale B Bit 1
PWMSCLB_BIT2:       equ    2                                         ; PWM Scale B Bit 2
PWMSCLB_BIT3:       equ    3                                         ; PWM Scale B Bit 3
PWMSCLB_BIT4:       equ    4                                         ; PWM Scale B Bit 4
PWMSCLB_BIT5:       equ    5                                         ; PWM Scale B Bit 5
PWMSCLB_BIT6:       equ    6                                         ; PWM Scale B Bit 6
PWMSCLB_BIT7:       equ    7                                         ; PWM Scale B Bit 7
; bit position masks
mPWMSCLB_BIT0:      equ    %00000001
mPWMSCLB_BIT1:      equ    %00000010
mPWMSCLB_BIT2:      equ    %00000100
mPWMSCLB_BIT3:      equ    %00001000
mPWMSCLB_BIT4:      equ    %00010000
mPWMSCLB_BIT5:      equ    %00100000
mPWMSCLB_BIT6:      equ    %01000000
mPWMSCLB_BIT7:      equ    %10000000


;*** PWMCNT01 - PWM Channel Counter 01 Register; 0x0000048C ***
PWMCNT01:           equ    $0000048C                                ;*** PWMCNT01 - PWM Channel Counter 01 Register; 0x0000048C ***


;*** PWMCNT0 - PWM Channel Counter 0 Register; 0x0000048C ***
PWMCNT0:            equ    $0000048C                                ;*** PWMCNT0 - PWM Channel Counter 0 Register; 0x0000048C ***


;*** PWMCNT1 - PWM Channel Counter 1 Register; 0x0000048D ***
PWMCNT1:            equ    $0000048D                                ;*** PWMCNT1 - PWM Channel Counter 1 Register; 0x0000048D ***


;*** PWMCNT23 - PWM Channel Counter 23 Register; 0x0000048E ***
PWMCNT23:           equ    $0000048E                                ;*** PWMCNT23 - PWM Channel Counter 23 Register; 0x0000048E ***


;*** PWMCNT2 - PWM Channel Counter 2 Register; 0x0000048E ***
PWMCNT2:            equ    $0000048E                                ;*** PWMCNT2 - PWM Channel Counter 2 Register; 0x0000048E ***


;*** PWMCNT3 - PWM Channel Counter 3 Register; 0x0000048F ***
PWMCNT3:            equ    $0000048F                                ;*** PWMCNT3 - PWM Channel Counter 3 Register; 0x0000048F ***


;*** PWMCNT45 - PWM Channel Counter 45 Register; 0x00000490 ***
PWMCNT45:           equ    $00000490                                ;*** PWMCNT45 - PWM Channel Counter 45 Register; 0x00000490 ***


;*** PWMCNT4 - PWM Channel Counter 4 Register; 0x00000490 ***
PWMCNT4:            equ    $00000490                                ;*** PWMCNT4 - PWM Channel Counter 4 Register; 0x00000490 ***


;*** PWMCNT5 - PWM Channel Counter 5 Register; 0x00000491 ***
PWMCNT5:            equ    $00000491                                ;*** PWMCNT5 - PWM Channel Counter 5 Register; 0x00000491 ***


;*** PWMCNT67 - PWM Channel Counter 67 Register; 0x00000492 ***
PWMCNT67:           equ    $00000492                                ;*** PWMCNT67 - PWM Channel Counter 67 Register; 0x00000492 ***


;*** PWMCNT6 - PWM Channel Counter 6 Register; 0x00000492 ***
PWMCNT6:            equ    $00000492                                ;*** PWMCNT6 - PWM Channel Counter 6 Register; 0x00000492 ***


;*** PWMCNT7 - PWM Channel Counter 7 Register; 0x00000493 ***
PWMCNT7:            equ    $00000493                                ;*** PWMCNT7 - PWM Channel Counter 7 Register; 0x00000493 ***


;*** PWMPER01 - PWM Channel Period 01 Register; 0x00000494 ***
PWMPER01:           equ    $00000494                                ;*** PWMPER01 - PWM Channel Period 01 Register; 0x00000494 ***


;*** PWMPER0 - PWM Channel Period 0 Register; 0x00000494 ***
PWMPER0:            equ    $00000494                                ;*** PWMPER0 - PWM Channel Period 0 Register; 0x00000494 ***


;*** PWMPER1 - PWM Channel Period 1 Register; 0x00000495 ***
PWMPER1:            equ    $00000495                                ;*** PWMPER1 - PWM Channel Period 1 Register; 0x00000495 ***


;*** PWMPER23 - PWM Channel Period 23 Register; 0x00000496 ***
PWMPER23:           equ    $00000496                                ;*** PWMPER23 - PWM Channel Period 23 Register; 0x00000496 ***


;*** PWMPER2 - PWM Channel Period 2 Register; 0x00000496 ***
PWMPER2:            equ    $00000496                                ;*** PWMPER2 - PWM Channel Period 2 Register; 0x00000496 ***


;*** PWMPER3 - PWM Channel Period 3 Register; 0x00000497 ***
PWMPER3:            equ    $00000497                                ;*** PWMPER3 - PWM Channel Period 3 Register; 0x00000497 ***


;*** PWMPER45 - PWM Channel Period 45 Register; 0x00000498 ***
PWMPER45:           equ    $00000498                                ;*** PWMPER45 - PWM Channel Period 45 Register; 0x00000498 ***


;*** PWMPER4 - PWM Channel Period 4 Register; 0x00000498 ***
PWMPER4:            equ    $00000498                                ;*** PWMPER4 - PWM Channel Period 4 Register; 0x00000498 ***


;*** PWMPER5 - PWM Channel Period 5 Register; 0x00000499 ***
PWMPER5:            equ    $00000499                                ;*** PWMPER5 - PWM Channel Period 5 Register; 0x00000499 ***


;*** PWMPER67 - PWM Channel Period 67 Register; 0x0000049A ***
PWMPER67:           equ    $0000049A                                ;*** PWMPER67 - PWM Channel Period 67 Register; 0x0000049A ***


;*** PWMPER6 - PWM Channel Period 6 Register; 0x0000049A ***
PWMPER6:            equ    $0000049A                                ;*** PWMPER6 - PWM Channel Period 6 Register; 0x0000049A ***


;*** PWMPER7 - PWM Channel Period 7 Register; 0x0000049B ***
PWMPER7:            equ    $0000049B                                ;*** PWMPER7 - PWM Channel Period 7 Register; 0x0000049B ***


;*** PWMDTY01 - PWM Channel Duty 01 Register; 0x0000049C ***
PWMDTY01:           equ    $0000049C                                ;*** PWMDTY01 - PWM Channel Duty 01 Register; 0x0000049C ***


;*** PWMDTY0 - PWM Channel Duty 0 Register; 0x0000049C ***
PWMDTY0:            equ    $0000049C                                ;*** PWMDTY0 - PWM Channel Duty 0 Register; 0x0000049C ***


;*** PWMDTY1 - PWM Channel Duty 1 Register; 0x0000049D ***
PWMDTY1:            equ    $0000049D                                ;*** PWMDTY1 - PWM Channel Duty 1 Register; 0x0000049D ***


;*** PWMDTY23 - PWM Channel Duty 23 Register; 0x0000049E ***
PWMDTY23:           equ    $0000049E                                ;*** PWMDTY23 - PWM Channel Duty 23 Register; 0x0000049E ***


;*** PWMDTY2 - PWM Channel Duty 2 Register; 0x0000049E ***
PWMDTY2:            equ    $0000049E                                ;*** PWMDTY2 - PWM Channel Duty 2 Register; 0x0000049E ***


;*** PWMDTY3 - PWM Channel Duty 3 Register; 0x0000049F ***
PWMDTY3:            equ    $0000049F                                ;*** PWMDTY3 - PWM Channel Duty 3 Register; 0x0000049F ***


;*** PWMDTY45 - PWM Channel Duty 45 Register; 0x000004A0 ***
PWMDTY45:           equ    $000004A0                                ;*** PWMDTY45 - PWM Channel Duty 45 Register; 0x000004A0 ***


;*** PWMDTY4 - PWM Channel Duty 4 Register; 0x000004A0 ***
PWMDTY4:            equ    $000004A0                                ;*** PWMDTY4 - PWM Channel Duty 4 Register; 0x000004A0 ***


;*** PWMDTY5 - PWM Channel Duty 5 Register; 0x000004A1 ***
PWMDTY5:            equ    $000004A1                                ;*** PWMDTY5 - PWM Channel Duty 5 Register; 0x000004A1 ***


;*** PWMDTY67 - PWM Channel Duty 67 Register; 0x000004A2 ***
PWMDTY67:           equ    $000004A2                                ;*** PWMDTY67 - PWM Channel Duty 67 Register; 0x000004A2 ***


;*** PWMDTY6 - PWM Channel Duty 6 Register; 0x000004A2 ***
PWMDTY6:            equ    $000004A2                                ;*** PWMDTY6 - PWM Channel Duty 6 Register; 0x000004A2 ***


;*** PWMDTY7 - PWM Channel Duty 7 Register; 0x000004A3 ***
PWMDTY7:            equ    $000004A3                                ;*** PWMDTY7 - PWM Channel Duty 7 Register; 0x000004A3 ***


;*** TIM0TIOS - Timer Input Capture/Output Compare Select; 0x000005C0 ***
TIM0TIOS:           equ    $000005C0                                ;*** TIM0TIOS - Timer Input Capture/Output Compare Select; 0x000005C0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TIOS_IOS0:      equ    0                                         ; Input Capture or Output Compare Channel Configuration Bit 0
TIM0TIOS_IOS1:      equ    1                                         ; Input Capture or Output Compare Channel Configuration Bit 1
TIM0TIOS_IOS2:      equ    2                                         ; Input Capture or Output Compare Channel Configuration Bit 2
TIM0TIOS_IOS3:      equ    3                                         ; Input Capture or Output Compare Channel Configuration Bit 3
TIM0TIOS_IOS4:      equ    4                                         ; Input Capture or Output Compare Channel Configuration Bit 4
TIM0TIOS_IOS5:      equ    5                                         ; Input Capture or Output Compare Channel Configuration Bit 5
TIM0TIOS_IOS6:      equ    6                                         ; Input Capture or Output Compare Channel Configuration Bit 6
TIM0TIOS_IOS7:      equ    7                                         ; Input Capture or Output Compare Channel Configuration Bit 7
; bit position masks
mTIM0TIOS_IOS0:     equ    %00000001
mTIM0TIOS_IOS1:     equ    %00000010
mTIM0TIOS_IOS2:     equ    %00000100
mTIM0TIOS_IOS3:     equ    %00001000
mTIM0TIOS_IOS4:     equ    %00010000
mTIM0TIOS_IOS5:     equ    %00100000
mTIM0TIOS_IOS6:     equ    %01000000
mTIM0TIOS_IOS7:     equ    %10000000


;*** TIM0CFORC - Timer Compare Force Register; 0x000005C1 ***
TIM0CFORC:          equ    $000005C1                                ;*** TIM0CFORC - Timer Compare Force Register; 0x000005C1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0CFORC_FOC0:     equ    0                                         ; Force Output Compare Action for Channel 0
TIM0CFORC_FOC1:     equ    1                                         ; Force Output Compare Action for Channel 1
TIM0CFORC_FOC2:     equ    2                                         ; Force Output Compare Action for Channel 2
TIM0CFORC_FOC3:     equ    3                                         ; Force Output Compare Action for Channel 3
TIM0CFORC_FOC4:     equ    4                                         ; Force Output Compare Action for Channel 4
TIM0CFORC_FOC5:     equ    5                                         ; Force Output Compare Action for Channel 5
TIM0CFORC_FOC6:     equ    6                                         ; Force Output Compare Action for Channel 6
TIM0CFORC_FOC7:     equ    7                                         ; Force Output Compare Action for Channel 7
; bit position masks
mTIM0CFORC_FOC0:    equ    %00000001
mTIM0CFORC_FOC1:    equ    %00000010
mTIM0CFORC_FOC2:    equ    %00000100
mTIM0CFORC_FOC3:    equ    %00001000
mTIM0CFORC_FOC4:    equ    %00010000
mTIM0CFORC_FOC5:    equ    %00100000
mTIM0CFORC_FOC6:    equ    %01000000
mTIM0CFORC_FOC7:    equ    %10000000


;*** TIM0OC7M - Output Compare 7 Mask Register; 0x000005C2 ***
TIM0OC7M:           equ    $000005C2                                ;*** TIM0OC7M - Output Compare 7 Mask Register; 0x000005C2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0OC7M_OC7M0:     equ    0                                         ; Output Compare 7 Mask Bit 0
TIM0OC7M_OC7M1:     equ    1                                         ; Output Compare 7 Mask Bit 1
TIM0OC7M_OC7M2:     equ    2                                         ; Output Compare 7 Mask Bit 2
TIM0OC7M_OC7M3:     equ    3                                         ; Output Compare 7 Mask Bit 3
TIM0OC7M_OC7M4:     equ    4                                         ; Output Compare 7 Mask Bit 4
TIM0OC7M_OC7M5:     equ    5                                         ; Output Compare 7 Mask Bit 5
TIM0OC7M_OC7M6:     equ    6                                         ; Output Compare 7 Mask Bit 6
TIM0OC7M_OC7M7:     equ    7                                         ; Output Compare 7 Mask Bit 7
; bit position masks
mTIM0OC7M_OC7M0:    equ    %00000001
mTIM0OC7M_OC7M1:    equ    %00000010
mTIM0OC7M_OC7M2:    equ    %00000100
mTIM0OC7M_OC7M3:    equ    %00001000
mTIM0OC7M_OC7M4:    equ    %00010000
mTIM0OC7M_OC7M5:    equ    %00100000
mTIM0OC7M_OC7M6:    equ    %01000000
mTIM0OC7M_OC7M7:    equ    %10000000


;*** TIM0OC7D - Output Compare 7 Data Register; 0x000005C3 ***
TIM0OC7D:           equ    $000005C3                                ;*** TIM0OC7D - Output Compare 7 Data Register; 0x000005C3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0OC7D_OC7D0:     equ    0                                         ; Output Compare 7 Bit 0
TIM0OC7D_OC7D1:     equ    1                                         ; Output Compare 7 Bit 1
TIM0OC7D_OC7D2:     equ    2                                         ; Output Compare 7 Bit 2
TIM0OC7D_OC7D3:     equ    3                                         ; Output Compare 7 Bit 3
TIM0OC7D_OC7D4:     equ    4                                         ; Output Compare 7 Bit 4
TIM0OC7D_OC7D5:     equ    5                                         ; Output Compare 7 Bit 5
TIM0OC7D_OC7D6:     equ    6                                         ; Output Compare 7 Bit 6
TIM0OC7D_OC7D7:     equ    7                                         ; Output Compare 7 Bit 7
; bit position masks
mTIM0OC7D_OC7D0:    equ    %00000001
mTIM0OC7D_OC7D1:    equ    %00000010
mTIM0OC7D_OC7D2:    equ    %00000100
mTIM0OC7D_OC7D3:    equ    %00001000
mTIM0OC7D_OC7D4:    equ    %00010000
mTIM0OC7D_OC7D5:    equ    %00100000
mTIM0OC7D_OC7D6:    equ    %01000000
mTIM0OC7D_OC7D7:    equ    %10000000


;*** TIM0TCNT - Timer Count Register; 0x000005C4 ***
TIM0TCNT:           equ    $000005C4                                ;*** TIM0TCNT - Timer Count Register; 0x000005C4 ***


;*** TIM0TCNTHi - Timer Count Register High (OBSOLETE - defined for backward compatibility); 0x000005C4 ***
TIM0TCNTHi:         equ    $000005C4                                ;*** TIM0TCNTHi - Timer Count Register High (OBSOLETE - defined for backward compatibility); 0x000005C4 ***


;*** TIM0TCNTH - Timer Count Register High; 0x000005C4 ***
TIM0TCNTH:          equ    $000005C4                                ;*** TIM0TCNTH - Timer Count Register High; 0x000005C4 ***


;*** TIM0TCNTLo - Timer Count Register Low (OBSOLETE - defined for backward compatibility); 0x000005C5 ***
TIM0TCNTLo:         equ    $000005C5                                ;*** TIM0TCNTLo - Timer Count Register Low (OBSOLETE - defined for backward compatibility); 0x000005C5 ***


;*** TIM0TCNTL - Timer Count Register Low; 0x000005C5 ***
TIM0TCNTL:          equ    $000005C5                                ;*** TIM0TCNTL - Timer Count Register Low; 0x000005C5 ***


;*** TIM0TSCR1 - Timer System Control Register1; 0x000005C6 ***
TIM0TSCR1:          equ    $000005C6                                ;*** TIM0TSCR1 - Timer System Control Register1; 0x000005C6 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TSCR1_PRNT:     equ    3                                         ; Precision Timer
TIM0TSCR1_TFFCA:    equ    4                                         ; Timer Fast Flag Clear All
TIM0TSCR1_TSFRZ:    equ    5                                         ; Timer and Modulus Counter Stop While in Freeze Mode
TIM0TSCR1_TSWAI:    equ    6                                         ; Timer Module Stops While in Wait
TIM0TSCR1_TEN:      equ    7                                         ; Timer Enable
; bit position masks
mTIM0TSCR1_PRNT:    equ    %00001000
mTIM0TSCR1_TFFCA:   equ    %00010000
mTIM0TSCR1_TSFRZ:   equ    %00100000
mTIM0TSCR1_TSWAI:   equ    %01000000
mTIM0TSCR1_TEN:     equ    %10000000


;*** TIM0TTOV - Timer Toggle On Overflow Register; 0x000005C7 ***
TIM0TTOV:           equ    $000005C7                                ;*** TIM0TTOV - Timer Toggle On Overflow Register; 0x000005C7 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TTOV_TOV0:      equ    0                                         ; Toggle On Overflow Bit 0
TIM0TTOV_TOV1:      equ    1                                         ; Toggle On Overflow Bit 1
TIM0TTOV_TOV2:      equ    2                                         ; Toggle On Overflow Bit 2
TIM0TTOV_TOV3:      equ    3                                         ; Toggle On Overflow Bit 3
TIM0TTOV_TOV4:      equ    4                                         ; Toggle On Overflow Bit 4
TIM0TTOV_TOV5:      equ    5                                         ; Toggle On Overflow Bit 5
TIM0TTOV_TOV6:      equ    6                                         ; Toggle On Overflow Bit 6
TIM0TTOV_TOV7:      equ    7                                         ; Toggle On Overflow Bit 7
; bit position masks
mTIM0TTOV_TOV0:     equ    %00000001
mTIM0TTOV_TOV1:     equ    %00000010
mTIM0TTOV_TOV2:     equ    %00000100
mTIM0TTOV_TOV3:     equ    %00001000
mTIM0TTOV_TOV4:     equ    %00010000
mTIM0TTOV_TOV5:     equ    %00100000
mTIM0TTOV_TOV6:     equ    %01000000
mTIM0TTOV_TOV7:     equ    %10000000


;*** TIM0TCTL1 - Timer Control Register 1; 0x000005C8 ***
TIM0TCTL1:          equ    $000005C8                                ;*** TIM0TCTL1 - Timer Control Register 1; 0x000005C8 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TCTL1_OL4:      equ    0                                         ; Output Level Bit 4
TIM0TCTL1_OM4:      equ    1                                         ; Output Mode Bit 4
TIM0TCTL1_OL5:      equ    2                                         ; Output Level Bit 5
TIM0TCTL1_OM5:      equ    3                                         ; Output Mode Bit 5
TIM0TCTL1_OL6:      equ    4                                         ; Output Level Bit 6
TIM0TCTL1_OM6:      equ    5                                         ; Output Mode Bit 6
TIM0TCTL1_OL7:      equ    6                                         ; Output Level Bit 7
TIM0TCTL1_OM7:      equ    7                                         ; Output Mode Bit 7
; bit position masks
mTIM0TCTL1_OL4:     equ    %00000001
mTIM0TCTL1_OM4:     equ    %00000010
mTIM0TCTL1_OL5:     equ    %00000100
mTIM0TCTL1_OM5:     equ    %00001000
mTIM0TCTL1_OL6:     equ    %00010000
mTIM0TCTL1_OM6:     equ    %00100000
mTIM0TCTL1_OL7:     equ    %01000000
mTIM0TCTL1_OM7:     equ    %10000000


;*** TIM0TCTL2 - Timer Control Register 2; 0x000005C9 ***
TIM0TCTL2:          equ    $000005C9                                ;*** TIM0TCTL2 - Timer Control Register 2; 0x000005C9 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TCTL2_OL0:      equ    0                                         ; Output Level Bit 0
TIM0TCTL2_OM0:      equ    1                                         ; Output Mode Bit 0
TIM0TCTL2_OL1:      equ    2                                         ; Output Level Bit 1
TIM0TCTL2_OM1:      equ    3                                         ; Output Mode Bit 1
TIM0TCTL2_OL2:      equ    4                                         ; Output Level Bit 2
TIM0TCTL2_OM2:      equ    5                                         ; Output Mode Bit 2
TIM0TCTL2_OL3:      equ    6                                         ; Output Level Bit 3
TIM0TCTL2_OM3:      equ    7                                         ; Output Mode Bit 3
; bit position masks
mTIM0TCTL2_OL0:     equ    %00000001
mTIM0TCTL2_OM0:     equ    %00000010
mTIM0TCTL2_OL1:     equ    %00000100
mTIM0TCTL2_OM1:     equ    %00001000
mTIM0TCTL2_OL2:     equ    %00010000
mTIM0TCTL2_OM2:     equ    %00100000
mTIM0TCTL2_OL3:     equ    %01000000
mTIM0TCTL2_OM3:     equ    %10000000


;*** TIM0TCTL3 - Timer Control Register 3; 0x000005CA ***
TIM0TCTL3:          equ    $000005CA                                ;*** TIM0TCTL3 - Timer Control Register 3; 0x000005CA ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TCTL3_EDG4A:    equ    0                                         ; Input Capture Edge Control 4A
TIM0TCTL3_EDG4B:    equ    1                                         ; Input Capture Edge Control 4B
TIM0TCTL3_EDG5A:    equ    2                                         ; Input Capture Edge Control 5A
TIM0TCTL3_EDG5B:    equ    3                                         ; Input Capture Edge Control 5B
TIM0TCTL3_EDG6A:    equ    4                                         ; Input Capture Edge Control 6A
TIM0TCTL3_EDG6B:    equ    5                                         ; Input Capture Edge Control 6B
TIM0TCTL3_EDG7A:    equ    6                                         ; Input Capture Edge Control 7A
TIM0TCTL3_EDG7B:    equ    7                                         ; Input Capture Edge Control 7B
; bit position masks
mTIM0TCTL3_EDG4A:   equ    %00000001
mTIM0TCTL3_EDG4B:   equ    %00000010
mTIM0TCTL3_EDG5A:   equ    %00000100
mTIM0TCTL3_EDG5B:   equ    %00001000
mTIM0TCTL3_EDG6A:   equ    %00010000
mTIM0TCTL3_EDG6B:   equ    %00100000
mTIM0TCTL3_EDG7A:   equ    %01000000
mTIM0TCTL3_EDG7B:   equ    %10000000


;*** TIM0TCTL4 - Timer Control Register 4; 0x000005CB ***
TIM0TCTL4:          equ    $000005CB                                ;*** TIM0TCTL4 - Timer Control Register 4; 0x000005CB ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TCTL4_EDG0A:    equ    0                                         ; Input Capture Edge Control 0A
TIM0TCTL4_EDG0B:    equ    1                                         ; Input Capture Edge Control 0B
TIM0TCTL4_EDG1A:    equ    2                                         ; Input Capture Edge Control 1A
TIM0TCTL4_EDG1B:    equ    3                                         ; Input Capture Edge Control 1B
TIM0TCTL4_EDG2A:    equ    4                                         ; Input Capture Edge Control 2A
TIM0TCTL4_EDG2B:    equ    5                                         ; Input Capture Edge Control 2B
TIM0TCTL4_EDG3A:    equ    6                                         ; Input Capture Edge Control 3A
TIM0TCTL4_EDG3B:    equ    7                                         ; Input Capture Edge Control 3B
; bit position masks
mTIM0TCTL4_EDG0A:   equ    %00000001
mTIM0TCTL4_EDG0B:   equ    %00000010
mTIM0TCTL4_EDG1A:   equ    %00000100
mTIM0TCTL4_EDG1B:   equ    %00001000
mTIM0TCTL4_EDG2A:   equ    %00010000
mTIM0TCTL4_EDG2B:   equ    %00100000
mTIM0TCTL4_EDG3A:   equ    %01000000
mTIM0TCTL4_EDG3B:   equ    %10000000


;*** TIM0TIE - Timer Interrupt Enable Register; 0x000005CC ***
TIM0TIE:            equ    $000005CC                                ;*** TIM0TIE - Timer Interrupt Enable Register; 0x000005CC ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TIE_C0I:        equ    0                                         ; Input Capture/Output Compare Interrupt Enable Bit 0
TIM0TIE_C1I:        equ    1                                         ; Input Capture/Output Compare Interrupt Enable Bit 1
TIM0TIE_C2I:        equ    2                                         ; Input Capture/Output Compare Interrupt Enable Bit 2
TIM0TIE_C3I:        equ    3                                         ; Input Capture/Output Compare Interrupt Enable Bit 3
TIM0TIE_C4I:        equ    4                                         ; Input Capture/Output Compare Interrupt Enable Bit 4
TIM0TIE_C5I:        equ    5                                         ; Input Capture/Output Compare Interrupt Enable Bit 5
TIM0TIE_C6I:        equ    6                                         ; Input Capture/Output Compare Interrupt Enable Bit 6
TIM0TIE_C7I:        equ    7                                         ; Input Capture/Output Compare Interrupt Enable Bit 7
; bit position masks
mTIM0TIE_C0I:       equ    %00000001
mTIM0TIE_C1I:       equ    %00000010
mTIM0TIE_C2I:       equ    %00000100
mTIM0TIE_C3I:       equ    %00001000
mTIM0TIE_C4I:       equ    %00010000
mTIM0TIE_C5I:       equ    %00100000
mTIM0TIE_C6I:       equ    %01000000
mTIM0TIE_C7I:       equ    %10000000


;*** TIM0TSCR2 - Timer System Control Register 2; 0x000005CD ***
TIM0TSCR2:          equ    $000005CD                                ;*** TIM0TSCR2 - Timer System Control Register 2; 0x000005CD ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TSCR2_PR0:      equ    0                                         ; Timer Prescaler Select Bit 0
TIM0TSCR2_PR1:      equ    1                                         ; Timer Prescaler Select Bit 1
TIM0TSCR2_PR2:      equ    2                                         ; Timer Prescaler Select Bit 2
TIM0TSCR2_TCRE:     equ    3                                         ; Timer Counter Reset Enable
TIM0TSCR2_TOI:      equ    7                                         ; Timer Overflow Interrupt Enable
; bit position masks
mTIM0TSCR2_PR0:     equ    %00000001
mTIM0TSCR2_PR1:     equ    %00000010
mTIM0TSCR2_PR2:     equ    %00000100
mTIM0TSCR2_TCRE:    equ    %00001000
mTIM0TSCR2_TOI:     equ    %10000000


;*** TIM0TFLG1 - Main Timer Interrupt Flag 1; 0x000005CE ***
TIM0TFLG1:          equ    $000005CE                                ;*** TIM0TFLG1 - Main Timer Interrupt Flag 1; 0x000005CE ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TFLG1_C0F:      equ    0                                         ; Input Capture/Output Compare Channel interrupt flag 0
TIM0TFLG1_C1F:      equ    1                                         ; Input Capture/Output Compare Channel interrupt flag 1
TIM0TFLG1_C2F:      equ    2                                         ; Input Capture/Output Compare Channel interrupt flag 2
TIM0TFLG1_C3F:      equ    3                                         ; Input Capture/Output Compare Channel interrupt flag 3
TIM0TFLG1_C4F:      equ    4                                         ; Input Capture/Output Compare Channel interrupt flag 4
TIM0TFLG1_C5F:      equ    5                                         ; Input Capture/Output Compare Channel interrupt flag 5
TIM0TFLG1_C6F:      equ    6                                         ; Input Capture/Output Compare Channel interrupt flag 6
TIM0TFLG1_C7F:      equ    7                                         ; Input Capture/Output Compare Channel interrupt flag 7
; bit position masks
mTIM0TFLG1_C0F:     equ    %00000001
mTIM0TFLG1_C1F:     equ    %00000010
mTIM0TFLG1_C2F:     equ    %00000100
mTIM0TFLG1_C3F:     equ    %00001000
mTIM0TFLG1_C4F:     equ    %00010000
mTIM0TFLG1_C5F:     equ    %00100000
mTIM0TFLG1_C6F:     equ    %01000000
mTIM0TFLG1_C7F:     equ    %10000000


;*** TIM0TFLG2 - Main Timer Interrupt Flag 2; 0x000005CF ***
TIM0TFLG2:          equ    $000005CF                                ;*** TIM0TFLG2 - Main Timer Interrupt Flag 2; 0x000005CF ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0TFLG2_TOF:      equ    7                                         ; Timer Overflow interrupt flag
; bit position masks
mTIM0TFLG2_TOF:     equ    %10000000


;*** TIM0TC0 - Timer Input Capture/Output Compare Register 0; 0x000005D0 ***
TIM0TC0:            equ    $000005D0                                ;*** TIM0TC0 - Timer Input Capture/Output Compare Register 0; 0x000005D0 ***


;*** TIM0TC0Hi - Timer Input Capture/Output Compare Register 0 High (OBSOLETE - defined for backward compatibility); 0x000005D0 ***
TIM0TC0Hi:          equ    $000005D0                                ;*** TIM0TC0Hi - Timer Input Capture/Output Compare Register 0 High (OBSOLETE - defined for backward compatibility); 0x000005D0 ***


;*** TIM0TC0H - Timer Input Capture/Output Compare Register 0 High; 0x000005D0 ***
TIM0TC0H:           equ    $000005D0                                ;*** TIM0TC0H - Timer Input Capture/Output Compare Register 0 High; 0x000005D0 ***


;*** TIM0TC0Lo - Timer Input Capture/Output Compare Register 0 Low (OBSOLETE - defined for backward compatibility); 0x000005D1 ***
TIM0TC0Lo:          equ    $000005D1                                ;*** TIM0TC0Lo - Timer Input Capture/Output Compare Register 0 Low (OBSOLETE - defined for backward compatibility); 0x000005D1 ***


;*** TIM0TC0L - Timer Input Capture/Output Compare Register 0 Low; 0x000005D1 ***
TIM0TC0L:           equ    $000005D1                                ;*** TIM0TC0L - Timer Input Capture/Output Compare Register 0 Low; 0x000005D1 ***


;*** TIM0TC1 - Timer Input Capture/Output Compare Register 1; 0x000005D2 ***
TIM0TC1:            equ    $000005D2                                ;*** TIM0TC1 - Timer Input Capture/Output Compare Register 1; 0x000005D2 ***


;*** TIM0TC1Hi - Timer Input Capture/Output Compare Register 1 High (OBSOLETE - defined for backward compatibility); 0x000005D2 ***
TIM0TC1Hi:          equ    $000005D2                                ;*** TIM0TC1Hi - Timer Input Capture/Output Compare Register 1 High (OBSOLETE - defined for backward compatibility); 0x000005D2 ***


;*** TIM0TC1H - Timer Input Capture/Output Compare Register 1 High; 0x000005D2 ***
TIM0TC1H:           equ    $000005D2                                ;*** TIM0TC1H - Timer Input Capture/Output Compare Register 1 High; 0x000005D2 ***


;*** TIM0TC1Lo - Timer Input Capture/Output Compare Register 1 Low (OBSOLETE - defined for backward compatibility); 0x000005D3 ***
TIM0TC1Lo:          equ    $000005D3                                ;*** TIM0TC1Lo - Timer Input Capture/Output Compare Register 1 Low (OBSOLETE - defined for backward compatibility); 0x000005D3 ***


;*** TIM0TC1L - Timer Input Capture/Output Compare Register 1 Low; 0x000005D3 ***
TIM0TC1L:           equ    $000005D3                                ;*** TIM0TC1L - Timer Input Capture/Output Compare Register 1 Low; 0x000005D3 ***


;*** TIM0TC2 - Timer Input Capture/Output Compare Register 2; 0x000005D4 ***
TIM0TC2:            equ    $000005D4                                ;*** TIM0TC2 - Timer Input Capture/Output Compare Register 2; 0x000005D4 ***


;*** TIM0TC2Hi - Timer Input Capture/Output Compare Register 2 High (OBSOLETE - defined for backward compatibility); 0x000005D4 ***
TIM0TC2Hi:          equ    $000005D4                                ;*** TIM0TC2Hi - Timer Input Capture/Output Compare Register 2 High (OBSOLETE - defined for backward compatibility); 0x000005D4 ***


;*** TIM0TC2H - Timer Input Capture/Output Compare Register 2 High; 0x000005D4 ***
TIM0TC2H:           equ    $000005D4                                ;*** TIM0TC2H - Timer Input Capture/Output Compare Register 2 High; 0x000005D4 ***


;*** TIM0TC2Lo - Timer Input Capture/Output Compare Register 2 Low (OBSOLETE - defined for backward compatibility); 0x000005D5 ***
TIM0TC2Lo:          equ    $000005D5                                ;*** TIM0TC2Lo - Timer Input Capture/Output Compare Register 2 Low (OBSOLETE - defined for backward compatibility); 0x000005D5 ***


;*** TIM0TC2L - Timer Input Capture/Output Compare Register 2 Low; 0x000005D5 ***
TIM0TC2L:           equ    $000005D5                                ;*** TIM0TC2L - Timer Input Capture/Output Compare Register 2 Low; 0x000005D5 ***


;*** TIM0TC3 - Timer Input Capture/Output Compare Register 3; 0x000005D6 ***
TIM0TC3:            equ    $000005D6                                ;*** TIM0TC3 - Timer Input Capture/Output Compare Register 3; 0x000005D6 ***


;*** TIM0TC3Hi - Timer Input Capture/Output Compare Register 3 High (OBSOLETE - defined for backward compatibility); 0x000005D6 ***
TIM0TC3Hi:          equ    $000005D6                                ;*** TIM0TC3Hi - Timer Input Capture/Output Compare Register 3 High (OBSOLETE - defined for backward compatibility); 0x000005D6 ***


;*** TIM0TC3H - Timer Input Capture/Output Compare Register 3 High; 0x000005D6 ***
TIM0TC3H:           equ    $000005D6                                ;*** TIM0TC3H - Timer Input Capture/Output Compare Register 3 High; 0x000005D6 ***


;*** TIM0TC3Lo - Timer Input Capture/Output Compare Register 3 Low (OBSOLETE - defined for backward compatibility); 0x000005D7 ***
TIM0TC3Lo:          equ    $000005D7                                ;*** TIM0TC3Lo - Timer Input Capture/Output Compare Register 3 Low (OBSOLETE - defined for backward compatibility); 0x000005D7 ***


;*** TIM0TC3L - Timer Input Capture/Output Compare Register 3 Low; 0x000005D7 ***
TIM0TC3L:           equ    $000005D7                                ;*** TIM0TC3L - Timer Input Capture/Output Compare Register 3 Low; 0x000005D7 ***


;*** TIM0TC4 - Timer Input Capture/Output Compare Register 4; 0x000005D8 ***
TIM0TC4:            equ    $000005D8                                ;*** TIM0TC4 - Timer Input Capture/Output Compare Register 4; 0x000005D8 ***


;*** TIM0TC4Hi - Timer Input Capture/Output Compare Register 4 High (OBSOLETE - defined for backward compatibility); 0x000005D8 ***
TIM0TC4Hi:          equ    $000005D8                                ;*** TIM0TC4Hi - Timer Input Capture/Output Compare Register 4 High (OBSOLETE - defined for backward compatibility); 0x000005D8 ***


;*** TIM0TC4H - Timer Input Capture/Output Compare Register 4 High; 0x000005D8 ***
TIM0TC4H:           equ    $000005D8                                ;*** TIM0TC4H - Timer Input Capture/Output Compare Register 4 High; 0x000005D8 ***


;*** TIM0TC4Lo - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x000005D9 ***
TIM0TC4Lo:          equ    $000005D9                                ;*** TIM0TC4Lo - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x000005D9 ***


;*** TIM0TC4L - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x000005D9 ***
TIM0TC4L:           equ    $000005D9                                ;*** TIM0TC4L - Timer Input Capture/Output Compare Register 4 Low (OBSOLETE - defined for backward compatibility); 0x000005D9 ***


;*** TIM0TC5 - Timer Input Capture/Output Compare Register 5; 0x000005DA ***
TIM0TC5:            equ    $000005DA                                ;*** TIM0TC5 - Timer Input Capture/Output Compare Register 5; 0x000005DA ***


;*** TIM0TC5Hi - Timer Input Capture/Output Compare Register 5 High (OBSOLETE - defined for backward compatibility); 0x000005DA ***
TIM0TC5Hi:          equ    $000005DA                                ;*** TIM0TC5Hi - Timer Input Capture/Output Compare Register 5 High (OBSOLETE - defined for backward compatibility); 0x000005DA ***


;*** TIM0TC5H - Timer Input Capture/Output Compare Register 5 High; 0x000005DA ***
TIM0TC5H:           equ    $000005DA                                ;*** TIM0TC5H - Timer Input Capture/Output Compare Register 5 High; 0x000005DA ***


;*** TIM0TC5Lo - Timer Input Capture/Output Compare Register 5 Low (OBSOLETE - defined for backward compatibility); 0x000005DB ***
TIM0TC5Lo:          equ    $000005DB                                ;*** TIM0TC5Lo - Timer Input Capture/Output Compare Register 5 Low (OBSOLETE - defined for backward compatibility); 0x000005DB ***


;*** TIM0TC5L - Timer Input Capture/Output Compare Register 5 Low; 0x000005DB ***
TIM0TC5L:           equ    $000005DB                                ;*** TIM0TC5L - Timer Input Capture/Output Compare Register 5 Low; 0x000005DB ***


;*** TIM0TC6 - Timer Input Capture/Output Compare Register 6; 0x000005DC ***
TIM0TC6:            equ    $000005DC                                ;*** TIM0TC6 - Timer Input Capture/Output Compare Register 6; 0x000005DC ***


;*** TIM0TC6Hi - Timer Input Capture/Output Compare Register 6 High (OBSOLETE - defined for backward compatibility); 0x000005DC ***
TIM0TC6Hi:          equ    $000005DC                                ;*** TIM0TC6Hi - Timer Input Capture/Output Compare Register 6 High (OBSOLETE - defined for backward compatibility); 0x000005DC ***


;*** TIM0TC6H - Timer Input Capture/Output Compare Register 6 High; 0x000005DC ***
TIM0TC6H:           equ    $000005DC                                ;*** TIM0TC6H - Timer Input Capture/Output Compare Register 6 High; 0x000005DC ***


;*** TIM0TC6Lo - Timer Input Capture/Output Compare Register 6 Low (OBSOLETE - defined for backward compatibility); 0x000005DD ***
TIM0TC6Lo:          equ    $000005DD                                ;*** TIM0TC6Lo - Timer Input Capture/Output Compare Register 6 Low (OBSOLETE - defined for backward compatibility); 0x000005DD ***


;*** TIM0TC6L - Timer Input Capture/Output Compare Register 6 Low; 0x000005DD ***
TIM0TC6L:           equ    $000005DD                                ;*** TIM0TC6L - Timer Input Capture/Output Compare Register 6 Low; 0x000005DD ***


;*** TIM0TC7 - Timer Input Capture/Output Compare Register 7; 0x000005DE ***
TIM0TC7:            equ    $000005DE                                ;*** TIM0TC7 - Timer Input Capture/Output Compare Register 7; 0x000005DE ***


;*** TIM0TC7Hi - Timer Input Capture/Output Compare Register 7 High (OBSOLETE - defined for backward compatibility); 0x000005DE ***
TIM0TC7Hi:          equ    $000005DE                                ;*** TIM0TC7Hi - Timer Input Capture/Output Compare Register 7 High (OBSOLETE - defined for backward compatibility); 0x000005DE ***


;*** TIM0TC7H - Timer Input Capture/Output Compare Register 7 High; 0x000005DE ***
TIM0TC7H:           equ    $000005DE                                ;*** TIM0TC7H - Timer Input Capture/Output Compare Register 7 High; 0x000005DE ***


;*** TIM0TC7Lo - Timer Input Capture/Output Compare Register 7 Low (OBSOLETE - defined for backward compatibility); 0x000005DF ***
TIM0TC7Lo:          equ    $000005DF                                ;*** TIM0TC7Lo - Timer Input Capture/Output Compare Register 7 Low (OBSOLETE - defined for backward compatibility); 0x000005DF ***


;*** TIM0TC7L - Timer Input Capture/Output Compare Register 7 Low; 0x000005DF ***
TIM0TC7L:           equ    $000005DF                                ;*** TIM0TC7L - Timer Input Capture/Output Compare Register 7 Low; 0x000005DF ***


;*** TIM0PACTL - 16-Bit Pulse Accumulator A Control Register; 0x000005E0 ***
TIM0PACTL:          equ    $000005E0                                ;*** TIM0PACTL - 16-Bit Pulse Accumulator A Control Register; 0x000005E0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0PACTL_PAI:      equ    0                                         ; Pulse Accumulator Input Interrupt enable
TIM0PACTL_PAOVI:    equ    1                                         ; Pulse Accumulator A Overflow Interrupt enable
TIM0PACTL_CLK0:     equ    2                                         ; Clock Select Bit 0
TIM0PACTL_CLK1:     equ    3                                         ; Clock Select Bit 1
TIM0PACTL_PEDGE:    equ    4                                         ; Pulse Accumulator Edge Control
TIM0PACTL_PAMOD:    equ    5                                         ; Pulse Accumulator Mode
TIM0PACTL_PAEN:     equ    6                                         ; Pulse Accumulator A System Enable
; bit position masks
mTIM0PACTL_PAI:     equ    %00000001
mTIM0PACTL_PAOVI:   equ    %00000010
mTIM0PACTL_CLK0:    equ    %00000100
mTIM0PACTL_CLK1:    equ    %00001000
mTIM0PACTL_PEDGE:   equ    %00010000
mTIM0PACTL_PAMOD:   equ    %00100000
mTIM0PACTL_PAEN:    equ    %01000000


;*** TIM0PAFLG - Pulse Accumulator A Flag Register; 0x000005E1 ***
TIM0PAFLG:          equ    $000005E1                                ;*** TIM0PAFLG - Pulse Accumulator A Flag Register; 0x000005E1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0PAFLG_PAIF:     equ    0                                         ; Pulse Accumulator Input edge interrupt flag
TIM0PAFLG_PAOVF:    equ    1                                         ; Pulse Accumulator A Overflow interrupt flag
; bit position masks
mTIM0PAFLG_PAIF:    equ    %00000001
mTIM0PAFLG_PAOVF:   equ    %00000010


;*** TIM0PACNT - Pulse Accumulators Count Register; 0x000005E2 ***
TIM0PACNT:          equ    $000005E2                                ;*** TIM0PACNT - Pulse Accumulators Count Register; 0x000005E2 ***


;*** TIM0PACNTH - Pulse Accumulators Count Register High; 0x000005E2 ***
TIM0PACNTH:         equ    $000005E2                                ;*** TIM0PACNTH - Pulse Accumulators Count Register High; 0x000005E2 ***


;*** TIM0PACNTL - Pulse Accumulators Count Register Low; 0x000005E3 ***
TIM0PACNTL:         equ    $000005E3                                ;*** TIM0PACNTL - Pulse Accumulators Count Register Low; 0x000005E3 ***


;*** TIM0OCPD - Output Compare Pin Disconnect Register; 0x000005EC ***
TIM0OCPD:           equ    $000005EC                                ;*** TIM0OCPD - Output Compare Pin Disconnect Register; 0x000005EC ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0OCPD_OCPD0:     equ    0                                         ; Output Compare Pin Disconnect Bit 0
TIM0OCPD_OCPD1:     equ    1                                         ; Output Compare Pin Disconnect Bit 1
TIM0OCPD_OCPD2:     equ    2                                         ; Output Compare Pin Disconnect Bit 2
TIM0OCPD_OCPD3:     equ    3                                         ; Output Compare Pin Disconnect Bit 3
TIM0OCPD_OCPD4:     equ    4                                         ; Output Compare Pin Disconnect Bit 4
TIM0OCPD_OCPD5:     equ    5                                         ; Output Compare Pin Disconnect Bit 5
TIM0OCPD_OCPD6:     equ    6                                         ; Output Compare Pin Disconnect Bit 6
TIM0OCPD_OCPD7:     equ    7                                         ; Output Compare Pin Disconnect Bit 7
; bit position masks
mTIM0OCPD_OCPD0:    equ    %00000001
mTIM0OCPD_OCPD1:    equ    %00000010
mTIM0OCPD_OCPD2:    equ    %00000100
mTIM0OCPD_OCPD3:    equ    %00001000
mTIM0OCPD_OCPD4:    equ    %00010000
mTIM0OCPD_OCPD5:    equ    %00100000
mTIM0OCPD_OCPD6:    equ    %01000000
mTIM0OCPD_OCPD7:    equ    %10000000


;*** TIM0PTPSR - Precision Timer Prescaler Select Register; 0x000005EE ***
TIM0PTPSR:          equ    $000005EE                                ;*** TIM0PTPSR - Precision Timer Prescaler Select Register; 0x000005EE ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
TIM0PTPSR_PTPS0:    equ    0                                         ; Precision Timer Prescaler Select Bit 0
TIM0PTPSR_PTPS1:    equ    1                                         ; Precision Timer Prescaler Select Bit 1
TIM0PTPSR_PTPS2:    equ    2                                         ; Precision Timer Prescaler Select Bit 2
TIM0PTPSR_PTPS3:    equ    3                                         ; Precision Timer Prescaler Select Bit 3
TIM0PTPSR_PTPS4:    equ    4                                         ; Precision Timer Prescaler Select Bit 4
TIM0PTPSR_PTPS5:    equ    5                                         ; Precision Timer Prescaler Select Bit 5
TIM0PTPSR_PTPS6:    equ    6                                         ; Precision Timer Prescaler Select Bit 6
TIM0PTPSR_PTPS7:    equ    7                                         ; Precision Timer Prescaler Select Bit 7
; bit position masks
mTIM0PTPSR_PTPS0:   equ    %00000001
mTIM0PTPSR_PTPS1:   equ    %00000010
mTIM0PTPSR_PTPS2:   equ    %00000100
mTIM0PTPSR_PTPS3:   equ    %00001000
mTIM0PTPSR_PTPS4:   equ    %00010000
mTIM0PTPSR_PTPS5:   equ    %00100000
mTIM0PTPSR_PTPS6:   equ    %01000000
mTIM0PTPSR_PTPS7:   equ    %10000000


;*** ADC0CTL - ADC0 Control Register; 0x00000600 ***
ADC0CTL:            equ    $00000600                                ;*** ADC0CTL - ADC0 Control Register; 0x00000600 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CTL_AUT_RSTA:   equ    4                                         ; Automatic Restart Event after exit from MCU Stop and Wait Mode
ADC0CTL_SMOD_ACC:   equ    5                                         ; Special Mode Access Control
ADC0CTL_RVL_BMOD:   equ    6                                         ; RVL Buffer Mode Select
ADC0CTL_CSL_BMOD:   equ    7                                         ; CSL Buffer Mode Select
ADC0CTL_MOD_CFG:    equ    8                                         ; Trigger Mode Configuration
ADC0CTL_STR_SEQA:   equ    9                                         ; Control Of Conversion Result Storage during Sequence abort (SEQA) or Restart request (RSTA)
ADC0CTL_ACC_CFG:    equ    10                                        ; ADCFLWCTL Register Access Configuration
ADC0CTL_SWAI:       equ    12                                        ; Wait Mode Configuration
ADC0CTL_FRZ_MOD:    equ    13                                        ; Freeze Mode Configuration
ADC0CTL_ADC_SR:     equ    14                                        ; ADC Soft Reset
ADC0CTL_ADC_EN:     equ    15                                        ; ADC Enable Bit
; bit position masks
mADC0CTL_AUT_RSTA:  equ    %00010000
mADC0CTL_SMOD_ACC:  equ    %00100000
mADC0CTL_RVL_BMOD:  equ    %01000000
mADC0CTL_CSL_BMOD:  equ    %10000000
mADC0CTL_MOD_CFG:   equ    %100000000
mADC0CTL_STR_SEQA:  equ    %1000000000
mADC0CTL_ACC_CFG:   equ    %110000000000
mADC0CTL_SWAI:      equ    %1000000000000
mADC0CTL_FRZ_MOD:   equ    %10000000000000
mADC0CTL_ADC_SR:    equ    %100000000000000
mADC0CTL_ADC_EN:    equ    %1000000000000000


;*** ADC0CTL_0 - ADC0 Control Register 0; 0x00000600 ***
ADC0CTL_0:          equ    $00000600                                ;*** ADC0CTL_0 - ADC0 Control Register 0; 0x00000600 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CTL_0_MOD_CFG:  equ    0                                         ; Trigger Mode Configuration
ADC0CTL_0_STR_SEQA: equ    1                                         ; Handling Restart Requests during End Of List Command Type Execution
ADC0CTL_0_ACC_CFG:  equ    2                                         ; ADCFLWCTL Register Access Configuration
ADC0CTL_0_SWAI:     equ    4                                         ; Wait Mode Configuration
ADC0CTL_0_FRZ_MOD:  equ    5                                         ; Freeze Mode Configuration
ADC0CTL_0_ADC_SR:   equ    6                                         ; ADC Soft Reset
ADC0CTL_0_ADC_EN:   equ    7                                         ; ADC Enable Bit
; bit position masks
mADC0CTL_0_MOD_CFG: equ    %00000001
mADC0CTL_0_STR_SEQA: equ    %00000010
mADC0CTL_0_ACC_CFG: equ    %00001100
mADC0CTL_0_SWAI:    equ    %00010000
mADC0CTL_0_FRZ_MOD: equ    %00100000
mADC0CTL_0_ADC_SR:  equ    %01000000
mADC0CTL_0_ADC_EN:  equ    %10000000


;*** ADC0CTL_1 - ADC0 Control Register 1; 0x00000601 ***
ADC0CTL_1:          equ    $00000601                                ;*** ADC0CTL_1 - ADC0 Control Register 1; 0x00000601 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CTL_1_AUT_RSTA: equ    4                                         ; Automatic Restart Event after exit from MCU Stop and Wait Mode
ADC0CTL_1_SMOD_ACC: equ    5                                         ; Special Mode Access Control
ADC0CTL_1_RVL_BMOD: equ    6                                         ; RVL Buffer Mode Select
ADC0CTL_1_CSL_BMOD: equ    7                                         ; CSL Buffer Mode Select
; bit position masks
mADC0CTL_1_AUT_RSTA: equ    %00010000
mADC0CTL_1_SMOD_ACC: equ    %00100000
mADC0CTL_1_RVL_BMOD: equ    %01000000
mADC0CTL_1_CSL_BMOD: equ    %10000000


;*** ADC0STS - ADC0 Status Register; 0x00000602 ***
ADC0STS:            equ    $00000602                                ;*** ADC0STS - ADC0 Status Register; 0x00000602 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0STS_READY:      equ    3                                         ; Flag indicates that ADC is in its idle state and ready for a Restart Event
ADC0STS_DBECC_ERR:  equ    5                                         ; Double Bit ECC Error Flag
ADC0STS_RVL_SEL:    equ    6                                         ; Result Value List Select
ADC0STS_CSL_SEL:    equ    7                                         ; Command Sequence List Select
; bit position masks
mADC0STS_READY:     equ    %00001000
mADC0STS_DBECC_ERR: equ    %00100000
mADC0STS_RVL_SEL:   equ    %01000000
mADC0STS_CSL_SEL:   equ    %10000000


;*** ADC0TIM - ADC0 Timing Register; 0x00000603 ***
ADC0TIM:            equ    $00000603                                ;*** ADC0TIM - ADC0 Timing Register; 0x00000603 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0TIM_PRS:        equ    0                                         ; ADC Clock Prescaler
; bit position masks
mADC0TIM_PRS:       equ    %01111111


;*** ADC0FMT - ADC0 Format Register; 0x00000604 ***
ADC0FMT:            equ    $00000604                                ;*** ADC0FMT - ADC0 Format Register; 0x00000604 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0FMT_SRES:       equ    0                                         ; ADC Resolution Select
ADC0FMT_DJM:        equ    7                                         ; Result Register Data Justification
; bit position masks
mADC0FMT_SRES:      equ    %00000111
mADC0FMT_DJM:       equ    %10000000


;*** ADC0FLWCTL - ADC0 Conversion Flow Control Register; 0x00000605 ***
ADC0FLWCTL:         equ    $00000605                                ;*** ADC0FLWCTL - ADC0 Conversion Flow Control Register; 0x00000605 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0FLWCTL_LDOK:    equ    4                                         ; Load OK for alternative Command Sequence List
ADC0FLWCTL_RSTA:    equ    5                                         ; Restart Event (Restart from Top of Command Sequence List)
ADC0FLWCTL_TRIG:    equ    6                                         ; Conversion Sequence Trigger
ADC0FLWCTL_SEQA:    equ    7                                         ; Conversion Sequence Abort Event
; bit position masks
mADC0FLWCTL_LDOK:   equ    %00010000
mADC0FLWCTL_RSTA:   equ    %00100000
mADC0FLWCTL_TRIG:   equ    %01000000
mADC0FLWCTL_SEQA:   equ    %10000000


;*** ADC0EIE - ADC0 Error Interrupt Enable Register; 0x00000606 ***
ADC0EIE:            equ    $00000606                                ;*** ADC0EIE - ADC0 Error Interrupt Enable Register; 0x00000606 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0EIE_LDOK_EIE:   equ    1                                         ; Load OK Error Interrupt Enable
ADC0EIE_RSTAR_EIE:  equ    2                                         ; Restart Request Error Interrupt Enable
ADC0EIE_TRIG_EIE:   equ    3                                         ; Conversion Sequence Trigger Error Interrupt Enable
ADC0EIE_EOL_EIE:    equ    5                                         ; End Of List Error Interrupt Enable
ADC0EIE_CMD_EIE:    equ    6                                         ; Command Value Error Interrupt Enable
ADC0EIE_IA_EIE:     equ    7                                         ; Illegal Access Error Interrupt Enable
; bit position masks
mADC0EIE_LDOK_EIE:  equ    %00000010
mADC0EIE_RSTAR_EIE: equ    %00000100
mADC0EIE_TRIG_EIE:  equ    %00001000
mADC0EIE_EOL_EIE:   equ    %00100000
mADC0EIE_CMD_EIE:   equ    %01000000
mADC0EIE_IA_EIE:    equ    %10000000


;*** ADC0IE - ADC0 Interrupt Enable Register; 0x00000607 ***
ADC0IE:             equ    $00000607                                ;*** ADC0IE - ADC0 Interrupt Enable Register; 0x00000607 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0IE_CONIF_OIE:   equ    6                                         ; ADCCONIF Register Flags Overrun Interrupt Enable
ADC0IE_SEQAD_IE:    equ    7                                         ; Conversion Sequence Abort Done Interrupt Enable
; bit position masks
mADC0IE_CONIF_OIE:  equ    %01000000
mADC0IE_SEQAD_IE:   equ    %10000000


;*** ADC0EIF - ADC0 Error Interrupt Flag Register; 0x00000608 ***
ADC0EIF:            equ    $00000608                                ;*** ADC0EIF - ADC0 Error Interrupt Flag Register; 0x00000608 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0EIF_LDOK_EIF:   equ    1                                         ; Load OK Error Interrupt Flag
ADC0EIF_RSTAR_EIF:  equ    2                                         ; Restart Request Error Interrupt Flag
ADC0EIF_TRIG_EIF:   equ    3                                         ; Trigger Error Interrupt Flag
ADC0EIF_EOL_EIF:    equ    5                                         ; End Of List Error Interrupt Flag
ADC0EIF_CMD_EIF:    equ    6                                         ; Command Value Error Interrupt Flag
ADC0EIF_IA_EIF:     equ    7                                         ; Illegal Access Error Interrupt Flag
; bit position masks
mADC0EIF_LDOK_EIF:  equ    %00000010
mADC0EIF_RSTAR_EIF: equ    %00000100
mADC0EIF_TRIG_EIF:  equ    %00001000
mADC0EIF_EOL_EIF:   equ    %00100000
mADC0EIF_CMD_EIF:   equ    %01000000
mADC0EIF_IA_EIF:    equ    %10000000


;*** ADC0IF - ADC0 Interrupt Flag Register; 0x00000609 ***
ADC0IF:             equ    $00000609                                ;*** ADC0IF - ADC0 Interrupt Flag Register; 0x00000609 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0IF_CONIF_OIF:   equ    6                                         ; ADCxCONIF Register Flags Overrun Interrupt Flag
ADC0IF_SEQAD_IF:    equ    7                                         ; Conversion Sequence Abort Done Interrupt Flag
; bit position masks
mADC0IF_CONIF_OIF:  equ    %01000000
mADC0IF_SEQAD_IF:   equ    %10000000


;*** ADC0CONIE - ADC0 Conversion Interrupt Enable Register; 0x0000060A ***
ADC0CONIE:          equ    $0000060A                                ;*** ADC0CONIE - ADC0 Conversion Interrupt Enable Register; 0x0000060A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CONIE_EOL_IE:   equ    0                                         ; End Of List Interrupt Enable
ADC0CONIE_CON_IE1:  equ    1                                         ; Conversion Interrupt 1 Enable
ADC0CONIE_CON_IE2:  equ    2                                         ; Conversion Interrupt 2 Enable
ADC0CONIE_CON_IE3:  equ    3                                         ; Conversion Interrupt 3 Enable
ADC0CONIE_CON_IE4:  equ    4                                         ; Conversion Interrupt 4 Enable
ADC0CONIE_CON_IE5:  equ    5                                         ; Conversion Interrupt 5 Enable
ADC0CONIE_CON_IE6:  equ    6                                         ; Conversion Interrupt 6 Enable
ADC0CONIE_CON_IE7:  equ    7                                         ; Conversion Interrupt 7 Enable
ADC0CONIE_CON_IE8:  equ    8                                         ; Conversion Interrupt 8 Enable
ADC0CONIE_CON_IE9:  equ    9                                         ; Conversion Interrupt 9 Enable
ADC0CONIE_CON_IE10: equ    10                                        ; Conversion Interrupt 10 Enable
ADC0CONIE_CON_IE11: equ    11                                        ; Conversion Interrupt 11 Enable
ADC0CONIE_CON_IE12: equ    12                                        ; Conversion Interrupt 12 Enable
ADC0CONIE_CON_IE13: equ    13                                        ; Conversion Interrupt 13 Enable
ADC0CONIE_CON_IE14: equ    14                                        ; Conversion Interrupt 14 Enable
ADC0CONIE_CON_IE15: equ    15                                        ; Conversion Interrupt 15 Enable
; bit position masks
mADC0CONIE_EOL_IE:  equ    %00000001
mADC0CONIE_CON_IE1: equ    %00000010
mADC0CONIE_CON_IE2: equ    %00000100
mADC0CONIE_CON_IE3: equ    %00001000
mADC0CONIE_CON_IE4: equ    %00010000
mADC0CONIE_CON_IE5: equ    %00100000
mADC0CONIE_CON_IE6: equ    %01000000
mADC0CONIE_CON_IE7: equ    %10000000
mADC0CONIE_CON_IE8: equ    %100000000
mADC0CONIE_CON_IE9: equ    %1000000000
mADC0CONIE_CON_IE10: equ    %10000000000
mADC0CONIE_CON_IE11: equ    %100000000000
mADC0CONIE_CON_IE12: equ    %1000000000000
mADC0CONIE_CON_IE13: equ    %10000000000000
mADC0CONIE_CON_IE14: equ    %100000000000000
mADC0CONIE_CON_IE15: equ    %1000000000000000


;*** ADC0CONIE_0 - ADC0 Conversion Interrupt Enable Register 0; 0x0000060A ***
ADC0CONIE_0:        equ    $0000060A                                ;*** ADC0CONIE_0 - ADC0 Conversion Interrupt Enable Register 0; 0x0000060A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CONIE_0_CON_IE8: equ    0                                        ; Conversion Interrupt 8 Enable
ADC0CONIE_0_CON_IE9: equ    1                                        ; Conversion Interrupt 9 Enable
ADC0CONIE_0_CON_IE10: equ    2                                       ; Conversion Interrupt 10 Enable
ADC0CONIE_0_CON_IE11: equ    3                                       ; Conversion Interrupt 11 Enable
ADC0CONIE_0_CON_IE12: equ    4                                       ; Conversion Interrupt 12 Enable
ADC0CONIE_0_CON_IE13: equ    5                                       ; Conversion Interrupt 13 Enable
ADC0CONIE_0_CON_IE14: equ    6                                       ; Conversion Interrupt 14 Enable
ADC0CONIE_0_CON_IE15: equ    7                                       ; Conversion Interrupt 15 Enable
; bit position masks
mADC0CONIE_0_CON_IE8: equ    %00000001
mADC0CONIE_0_CON_IE9: equ    %00000010
mADC0CONIE_0_CON_IE10: equ    %00000100
mADC0CONIE_0_CON_IE11: equ    %00001000
mADC0CONIE_0_CON_IE12: equ    %00010000
mADC0CONIE_0_CON_IE13: equ    %00100000
mADC0CONIE_0_CON_IE14: equ    %01000000
mADC0CONIE_0_CON_IE15: equ    %10000000


;*** ADC0CONIE_1 - ADC0 Conversion Interrupt Enable Register 1; 0x0000060B ***
ADC0CONIE_1:        equ    $0000060B                                ;*** ADC0CONIE_1 - ADC0 Conversion Interrupt Enable Register 1; 0x0000060B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CONIE_1_EOL_IE: equ    0                                         ; End Of List Interrupt Enable
ADC0CONIE_1_CON_IE1: equ    1                                        ; Conversion Interrupt 1 Enable
ADC0CONIE_1_CON_IE2: equ    2                                        ; Conversion Interrupt 2 Enable
ADC0CONIE_1_CON_IE3: equ    3                                        ; Conversion Interrupt 3 Enable
ADC0CONIE_1_CON_IE4: equ    4                                        ; Conversion Interrupt 4 Enable
ADC0CONIE_1_CON_IE5: equ    5                                        ; Conversion Interrupt 5 Enable
ADC0CONIE_1_CON_IE6: equ    6                                        ; Conversion Interrupt 6 Enable
ADC0CONIE_1_CON_IE7: equ    7                                        ; Conversion Interrupt 7 Enable
; bit position masks
mADC0CONIE_1_EOL_IE: equ    %00000001
mADC0CONIE_1_CON_IE1: equ    %00000010
mADC0CONIE_1_CON_IE2: equ    %00000100
mADC0CONIE_1_CON_IE3: equ    %00001000
mADC0CONIE_1_CON_IE4: equ    %00010000
mADC0CONIE_1_CON_IE5: equ    %00100000
mADC0CONIE_1_CON_IE6: equ    %01000000
mADC0CONIE_1_CON_IE7: equ    %10000000


;*** ADC0CONIF - ADC0 Conversion Interrupt Flag Register; 0x0000060C ***
ADC0CONIF:          equ    $0000060C                                ;*** ADC0CONIF - ADC0 Conversion Interrupt Flag Register; 0x0000060C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CONIF_EOL_IF:   equ    0                                         ; End Of List Interrupt Flag
ADC0CONIF_CON_IF1:  equ    1                                         ; Conversion Interrupt 1 Flag
ADC0CONIF_CON_IF2:  equ    2                                         ; Conversion Interrupt 2 Flag
ADC0CONIF_CON_IF3:  equ    3                                         ; Conversion Interrupt 3 Flag
ADC0CONIF_CON_IF4:  equ    4                                         ; Conversion Interrupt 4 Flag
ADC0CONIF_CON_IF5:  equ    5                                         ; Conversion Interrupt 5 Flag
ADC0CONIF_CON_IF6:  equ    6                                         ; Conversion Interrupt 6 Flag
ADC0CONIF_CON_IF7:  equ    7                                         ; Conversion Interrupt 7 Flag
ADC0CONIF_CON_IF8:  equ    8                                         ; Conversion Interrupt 8 Flag
ADC0CONIF_CON_IF9:  equ    9                                         ; Conversion Interrupt 9 Flag
ADC0CONIF_CON_IF10: equ    10                                        ; Conversion Interrupt 10 Flag
ADC0CONIF_CON_IF11: equ    11                                        ; Conversion Interrupt 11 Flag
ADC0CONIF_CON_IF12: equ    12                                        ; Conversion Interrupt 12 Flag
ADC0CONIF_CON_IF13: equ    13                                        ; Conversion Interrupt 13 Flag
ADC0CONIF_CON_IF14: equ    14                                        ; Conversion Interrupt 14 Flag
ADC0CONIF_CON_IF15: equ    15                                        ; Conversion Interrupt 15 Flag
; bit position masks
mADC0CONIF_EOL_IF:  equ    %00000001
mADC0CONIF_CON_IF1: equ    %00000010
mADC0CONIF_CON_IF2: equ    %00000100
mADC0CONIF_CON_IF3: equ    %00001000
mADC0CONIF_CON_IF4: equ    %00010000
mADC0CONIF_CON_IF5: equ    %00100000
mADC0CONIF_CON_IF6: equ    %01000000
mADC0CONIF_CON_IF7: equ    %10000000
mADC0CONIF_CON_IF8: equ    %100000000
mADC0CONIF_CON_IF9: equ    %1000000000
mADC0CONIF_CON_IF10: equ    %10000000000
mADC0CONIF_CON_IF11: equ    %100000000000
mADC0CONIF_CON_IF12: equ    %1000000000000
mADC0CONIF_CON_IF13: equ    %10000000000000
mADC0CONIF_CON_IF14: equ    %100000000000000
mADC0CONIF_CON_IF15: equ    %1000000000000000


;*** ADC0CONIF_0 - ADC0 Conversion Interrupt Flag Register 0; 0x0000060C ***
ADC0CONIF_0:        equ    $0000060C                                ;*** ADC0CONIF_0 - ADC0 Conversion Interrupt Flag Register 0; 0x0000060C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CONIF_0_CON_IF8: equ    0                                        ; Conversion Interrupt 8 Flag
ADC0CONIF_0_CON_IF9: equ    1                                        ; Conversion Interrupt 9 Flag
ADC0CONIF_0_CON_IF10: equ    2                                       ; Conversion Interrupt 10 Flag
ADC0CONIF_0_CON_IF11: equ    3                                       ; Conversion Interrupt 11 Flag
ADC0CONIF_0_CON_IF12: equ    4                                       ; Conversion Interrupt 12 Flag
ADC0CONIF_0_CON_IF13: equ    5                                       ; Conversion Interrupt 13 Flag
ADC0CONIF_0_CON_IF14: equ    6                                       ; Conversion Interrupt 14 Flag
ADC0CONIF_0_CON_IF15: equ    7                                       ; Conversion Interrupt 15 Flag
; bit position masks
mADC0CONIF_0_CON_IF8: equ    %00000001
mADC0CONIF_0_CON_IF9: equ    %00000010
mADC0CONIF_0_CON_IF10: equ    %00000100
mADC0CONIF_0_CON_IF11: equ    %00001000
mADC0CONIF_0_CON_IF12: equ    %00010000
mADC0CONIF_0_CON_IF13: equ    %00100000
mADC0CONIF_0_CON_IF14: equ    %01000000
mADC0CONIF_0_CON_IF15: equ    %10000000


;*** ADC0CONIF_1 - ADC0 Conversion Interrupt Flag Register 1; 0x0000060D ***
ADC0CONIF_1:        equ    $0000060D                                ;*** ADC0CONIF_1 - ADC0 Conversion Interrupt Flag Register 1; 0x0000060D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CONIF_1_EOL_IF: equ    0                                         ; End Of List Interrupt Flag
ADC0CONIF_1_CON_IF1: equ    1                                        ; Conversion Interrupt 1 Flag
ADC0CONIF_1_CON_IF2: equ    2                                        ; Conversion Interrupt 2 Flag
ADC0CONIF_1_CON_IF3: equ    3                                        ; Conversion Interrupt 3 Flag
ADC0CONIF_1_CON_IF4: equ    4                                        ; Conversion Interrupt 4 Flag
ADC0CONIF_1_CON_IF5: equ    5                                        ; Conversion Interrupt 5 Flag
ADC0CONIF_1_CON_IF6: equ    6                                        ; Conversion Interrupt 6 Flag
ADC0CONIF_1_CON_IF7: equ    7                                        ; Conversion Interrupt 7 Flag
; bit position masks
mADC0CONIF_1_EOL_IF: equ    %00000001
mADC0CONIF_1_CON_IF1: equ    %00000010
mADC0CONIF_1_CON_IF2: equ    %00000100
mADC0CONIF_1_CON_IF3: equ    %00001000
mADC0CONIF_1_CON_IF4: equ    %00010000
mADC0CONIF_1_CON_IF5: equ    %00100000
mADC0CONIF_1_CON_IF6: equ    %01000000
mADC0CONIF_1_CON_IF7: equ    %10000000


;*** ADC0IMDRI - ADC0 Intermediate Result Information Register; 0x0000060E ***
ADC0IMDRI:          equ    $0000060E                                ;*** ADC0IMDRI - ADC0 Intermediate Result Information Register; 0x0000060E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0IMDRI_RIDX_IMD: equ    0                                         ; RES_IDX Value At Intermediate Event
ADC0IMDRI_RVL_IMD:  equ    14                                        ; Active RVL At Intermediate Event
ADC0IMDRI_CSL_IMD:  equ    15                                        ; Active CSL At Intermediate Event
; bit position masks
mADC0IMDRI_RIDX_IMD: equ    %00111111
mADC0IMDRI_RVL_IMD: equ    %100000000000000
mADC0IMDRI_CSL_IMD: equ    %1000000000000000


;*** ADC0IMDRI_0 - ADC0 Intermediate Result Information Register 0; 0x0000060E ***
ADC0IMDRI_0:        equ    $0000060E                                ;*** ADC0IMDRI_0 - ADC0 Intermediate Result Information Register 0; 0x0000060E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0IMDRI_0_RVL_IMD: equ    6                                        ; Active RVL At Intermediate Event
ADC0IMDRI_0_CSL_IMD: equ    7                                        ; Active CSL At Intermediate Event
; bit position masks
mADC0IMDRI_0_RVL_IMD: equ    %01000000
mADC0IMDRI_0_CSL_IMD: equ    %10000000


;*** ADC0IMDRI_1 - ADC0 Intermediate Result Information Register 1; 0x0000060F ***
ADC0IMDRI_1:        equ    $0000060F                                ;*** ADC0IMDRI_1 - ADC0 Intermediate Result Information Register 1; 0x0000060F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0IMDRI_1_RIDX_IMD: equ    0                                       ; RES_IDX Value At Intermediate Event
; bit position masks
mADC0IMDRI_1_RIDX_IMD: equ    %00111111


;*** ADC0EOLRI - ADC0 End Of List Result Information Register; 0x00000610 ***
ADC0EOLRI:          equ    $00000610                                ;*** ADC0EOLRI - ADC0 End Of List Result Information Register; 0x00000610 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0EOLRI_RVL_EOL:  equ    6                                         ; Active RVL When End Of List Command Type Was Executed
ADC0EOLRI_CSL_EOL:  equ    7                                         ; Active CSL When End Of List Command Type Was Executed
; bit position masks
mADC0EOLRI_RVL_EOL: equ    %01000000
mADC0EOLRI_CSL_EOL: equ    %10000000


;*** ADC0CMD - ADC0 Command Register; 0x00000614 ***
ADC0CMD:            equ    $00000614                                ;*** ADC0CMD - ADC0 Command Register; 0x00000614 ***


;*** ADC0CMD_01 - ADC0 Command Register 01; 0x00000614 ***
ADC0CMD_01:         equ    $00000614                                ;*** ADC0CMD_01 - ADC0 Command Register 01; 0x00000614 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CMD_01_CH_SEL:  equ    0                                         ; ADC Input Channel Select
ADC0CMD_01_VRL_SEL: equ    6                                         ; Reference Low Voltage Select
ADC0CMD_01_VRH_SEL: equ    7                                         ; Reference High Voltage Select
ADC0CMD_01_INTFLG_SEL: equ    8                                      ; Conversion Interrupt Flag Select
ADC0CMD_01_CMD_SEL: equ    14                                        ; Conversion Command Select
; bit position masks
mADC0CMD_01_CH_SEL: equ    %00111111
mADC0CMD_01_VRL_SEL: equ    %01000000
mADC0CMD_01_VRH_SEL: equ    %10000000
mADC0CMD_01_INTFLG_SEL: equ    %111100000000
mADC0CMD_01_CMD_SEL: equ    %1100000000000000


;*** ADC0CMD_0 - ADC0 Command Register 0; 0x00000614 ***
ADC0CMD_0:          equ    $00000614                                ;*** ADC0CMD_0 - ADC0 Command Register 0; 0x00000614 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CMD_0_INTFLG_SEL: equ    0                                       ; Conversion Interrupt Flag Select
ADC0CMD_0_CMD_SEL:  equ    6                                         ; Conversion Command Select
; bit position masks
mADC0CMD_0_INTFLG_SEL: equ    %00001111
mADC0CMD_0_CMD_SEL: equ    %11000000


;*** ADC0CMD_1 - ADC0 Command Register 1; 0x00000615 ***
ADC0CMD_1:          equ    $00000615                                ;*** ADC0CMD_1 - ADC0 Command Register 1; 0x00000615 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CMD_1_CH_SEL:   equ    0                                         ; ADC Input Channel Select
ADC0CMD_1_VRL_SEL:  equ    6                                         ; Reference Low Voltage Select
ADC0CMD_1_VRH_SEL:  equ    7                                         ; Reference High Voltage Select
; bit position masks
mADC0CMD_1_CH_SEL:  equ    %00111111
mADC0CMD_1_VRL_SEL: equ    %01000000
mADC0CMD_1_VRH_SEL: equ    %10000000


;*** ADC0CMD_23 - ADC0 Command Register 23; 0x00000616 ***
ADC0CMD_23:         equ    $00000616                                ;*** ADC0CMD_23 - ADC0 Command Register 23; 0x00000616 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CMD_23_SMP:     equ    11                                        ; Sample Time Select
; bit position masks
mADC0CMD_23_SMP:    equ    %1111100000000000


;*** ADC0CMD_2 - ADC0 Command Register 2; 0x00000616 ***
ADC0CMD_2:          equ    $00000616                                ;*** ADC0CMD_2 - ADC0 Command Register 2; 0x00000616 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CMD_2_SMP:      equ    3                                         ; Sample Time Select
; bit position masks
mADC0CMD_2_SMP:     equ    %11111000


;*** ADC0CMD_3 - ADC0 Command Register 3; 0x00000617 ***
ADC0CMD_3:          equ    $00000617                                ;*** ADC0CMD_3 - ADC0 Command Register 3; 0x00000617 ***


;*** ADC0CIDX - ADC0 Command Index Register; 0x0000061C ***
ADC0CIDX:           equ    $0000061C                                ;*** ADC0CIDX - ADC0 Command Index Register; 0x0000061C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CIDX_CMD_IDX:   equ    0                                         ; ADC Command Index
; bit position masks
mADC0CIDX_CMD_IDX:  equ    %00111111


;*** ADC0CBP_0 - ADC0 Command Base Pointer Register 0; 0x0000061D ***
ADC0CBP_0:          equ    $0000061D                                ;*** ADC0CBP_0 - ADC0 Command Base Pointer Register 0; 0x0000061D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CBP_0_CMD_PTR:  equ    0                                         ; ADC Command Base Pointer Address
; bit position masks
mADC0CBP_0_CMD_PTR: equ    %11111111


;*** ADC0CBP_1 - ADC0 Command Base Pointer Register 1; 0x0000061E ***
ADC0CBP_1:          equ    $0000061E                                ;*** ADC0CBP_1 - ADC0 Command Base Pointer Register 1; 0x0000061E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CBP_1_CMD_PTR:  equ    0                                         ; ADC Command Base Pointer Address
; bit position masks
mADC0CBP_1_CMD_PTR: equ    %11111111


;*** ADC0CBP_2 - ADC0 Command Base Pointer Register 2; 0x0000061F ***
ADC0CBP_2:          equ    $0000061F                                ;*** ADC0CBP_2 - ADC0 Command Base Pointer Register 2; 0x0000061F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CBP_2_CMD_PTR:  equ    2                                         ; ADC Command Base Pointer Address
; bit position masks
mADC0CBP_2_CMD_PTR: equ    %11111100


;*** ADC0RIDX - ADC0 Result Index Register; 0x00000620 ***
ADC0RIDX:           equ    $00000620                                ;*** ADC0RIDX - ADC0 Result Index Register; 0x00000620 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0RIDX_RES_IDX:   equ    0                                         ; ADC Result Index
; bit position masks
mADC0RIDX_RES_IDX:  equ    %00111111


;*** ADC0RBP_0 - ADC0 Result Base Pointer Register 0; 0x00000621 ***
ADC0RBP_0:          equ    $00000621                                ;*** ADC0RBP_0 - ADC0 Result Base Pointer Register 0; 0x00000621 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0RBP_0_RES_PTR:  equ    0                                         ; ADC Result Base Pointer Address
; bit position masks
mADC0RBP_0_RES_PTR: equ    %00001111


;*** ADC0RBP_1 - ADC0 Result Base Pointer Register 1; 0x00000622 ***
ADC0RBP_1:          equ    $00000622                                ;*** ADC0RBP_1 - ADC0 Result Base Pointer Register 1; 0x00000622 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0RBP_1_RES_PTR:  equ    0                                         ; ADC Result Base Pointer Address
; bit position masks
mADC0RBP_1_RES_PTR: equ    %11111111


;*** ADC0RBP_2 - ADC0 Result Base Pointer Register 2; 0x00000623 ***
ADC0RBP_2:          equ    $00000623                                ;*** ADC0RBP_2 - ADC0 Result Base Pointer Register 2; 0x00000623 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0RBP_2_RES_PTR:  equ    2                                         ; ADC Result Base Pointer Address
; bit position masks
mADC0RBP_2_RES_PTR: equ    %11111100


;*** ADC0CROFF0 - ADC0 Command and Result Offset Register 0; 0x00000624 ***
ADC0CROFF0:         equ    $00000624                                ;*** ADC0CROFF0 - ADC0 Command and Result Offset Register 0; 0x00000624 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CROFF0_CMDRES_OFF0: equ    0                                     ; ADC Command and Result Offset Value refer to CSL_0 and RVL_0
; bit position masks
mADC0CROFF0_CMDRES_OFF0: equ    %01111111


;*** ADC0CROFF1 - ADC0 Command and Result Offset Register 1; 0x00000625 ***
ADC0CROFF1:         equ    $00000625                                ;*** ADC0CROFF1 - ADC0 Command and Result Offset Register 1; 0x00000625 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ADC0CROFF1_CMDRES_OFF1: equ    0                                     ; ADC Command and Result Offset Value refer to CSL_1 and RVL_1
; bit position masks
mADC0CROFF1_CMDRES_OFF1: equ    %01111111


;*** CPMURFLG - CPMU Reset Flags Register; 0x000006C3 ***
CPMURFLG:           equ    $000006C3                                ;*** CPMURFLG - CPMU Reset Flags Register; 0x000006C3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMURFLG_PMRF:      equ    0                                         ; PLL Clock Monitor Reset Flag
CPMURFLG_OMRF:      equ    1                                         ; Oscillator Clock Monitor Reset Flag
CPMURFLG_COPRF:     equ    3                                         ; COP Reset Flag
CPMURFLG_LVRF:      equ    5                                         ; Low Voltage Reset Flag
CPMURFLG_PORF:      equ    6                                         ; Power on Reset Flag
; bit position masks
mCPMURFLG_PMRF:     equ    %00000001
mCPMURFLG_OMRF:     equ    %00000010
mCPMURFLG_COPRF:    equ    %00001000
mCPMURFLG_LVRF:     equ    %00100000
mCPMURFLG_PORF:     equ    %01000000


;*** CPMUSYNR - CPMU Synthesizer Register; 0x000006C4 ***
CPMUSYNR:           equ    $000006C4                                ;*** CPMUSYNR - CPMU Synthesizer Register; 0x000006C4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUSYNR_SYNDIV0:   equ    0                                         ; Multiplication factor of the IPLL bit 0
CPMUSYNR_SYNDIV1:   equ    1                                         ; Multiplication factor of the IPLL bit 1
CPMUSYNR_SYNDIV2:   equ    2                                         ; Multiplication factor of the IPLL bit 2
CPMUSYNR_SYNDIV3:   equ    3                                         ; Multiplication factor of the IPLL bit 3
CPMUSYNR_SYNDIV4:   equ    4                                         ; Multiplication factor of the IPLL bit 4
CPMUSYNR_SYNDIV5:   equ    5                                         ; Multiplication factor of the IPLL bit 5
CPMUSYNR_VCOFRQ0:   equ    6                                         ; VCO frequency range bit 0
CPMUSYNR_VCOFRQ1:   equ    7                                         ; VCO frequency range bit 1
; bit position masks
mCPMUSYNR_SYNDIV0:  equ    %00000001
mCPMUSYNR_SYNDIV1:  equ    %00000010
mCPMUSYNR_SYNDIV2:  equ    %00000100
mCPMUSYNR_SYNDIV3:  equ    %00001000
mCPMUSYNR_SYNDIV4:  equ    %00010000
mCPMUSYNR_SYNDIV5:  equ    %00100000
mCPMUSYNR_VCOFRQ0:  equ    %01000000
mCPMUSYNR_VCOFRQ1:  equ    %10000000


;*** CPMUREFDIV - CPMU Reference Divider Register; 0x000006C5 ***
CPMUREFDIV:         equ    $000006C5                                ;*** CPMUREFDIV - CPMU Reference Divider Register; 0x000006C5 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUREFDIV_REFDIV0: equ    0                                         ; Finer granularity for the IPLL multiplier steps bit 0
CPMUREFDIV_REFDIV1: equ    1                                         ; Finer granularity for the IPLL multiplier steps bit 1
CPMUREFDIV_REFDIV2: equ    2                                         ; Finer granularity for the IPLL multiplier steps bit 2
CPMUREFDIV_REFDIV3: equ    3                                         ; Finer granularity for the IPLL multiplier steps bit 3
CPMUREFDIV_REFFRQ0: equ    6                                         ; IPLL optimal stability and lock time configuration bit 0
CPMUREFDIV_REFFRQ1: equ    7                                         ; IPLL optimal stability and lock time configuration bit 1
; bit position masks
mCPMUREFDIV_REFDIV0: equ    %00000001
mCPMUREFDIV_REFDIV1: equ    %00000010
mCPMUREFDIV_REFDIV2: equ    %00000100
mCPMUREFDIV_REFDIV3: equ    %00001000
mCPMUREFDIV_REFFRQ0: equ    %01000000
mCPMUREFDIV_REFFRQ1: equ    %10000000


;*** CPMUPOSTDIV - CPMU Post Divider Register; 0x000006C6 ***
CPMUPOSTDIV:        equ    $000006C6                                ;*** CPMUPOSTDIV - CPMU Post Divider Register; 0x000006C6 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUPOSTDIV_POSTDIV0: equ    0                                       ; Frequency ratio between the VCOCLK and PLLCLK control bit 0
CPMUPOSTDIV_POSTDIV1: equ    1                                       ; Frequency ratio between the VCOCLK and PLLCLK control bit 1
CPMUPOSTDIV_POSTDIV2: equ    2                                       ; Frequency ratio between the VCOCLK and PLLCLK control bit 2
CPMUPOSTDIV_POSTDIV3: equ    3                                       ; Frequency ratio between the VCOCLK and PLLCLK control bit 3
CPMUPOSTDIV_POSTDIV4: equ    4                                       ; Frequency ratio between the VCOCLK and PLLCLK control bit 4
; bit position masks
mCPMUPOSTDIV_POSTDIV0: equ    %00000001
mCPMUPOSTDIV_POSTDIV1: equ    %00000010
mCPMUPOSTDIV_POSTDIV2: equ    %00000100
mCPMUPOSTDIV_POSTDIV3: equ    %00001000
mCPMUPOSTDIV_POSTDIV4: equ    %00010000


;*** CPMUIFLG - CPMU Interrupt Flags Register; 0x000006C7 ***
CPMUIFLG:           equ    $000006C7                                ;*** CPMUIFLG - CPMU Interrupt Flags Register; 0x000006C7 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUIFLG_UPOSC:     equ    0                                         ; Oscillator Status Bit
CPMUIFLG_OSCIF:     equ    1                                         ; Oscillator Interrupt Flag
CPMUIFLG_LOCK:      equ    3                                         ; Lock Status Bit
CPMUIFLG_LOCKIF:    equ    4                                         ; PLL Lock Interrupt Flag
CPMUIFLG_RTIF:      equ    7                                         ; Real Time Interrupt Flag
; bit position masks
mCPMUIFLG_UPOSC:    equ    %00000001
mCPMUIFLG_OSCIF:    equ    %00000010
mCPMUIFLG_LOCK:     equ    %00001000
mCPMUIFLG_LOCKIF:   equ    %00010000
mCPMUIFLG_RTIF:     equ    %10000000


;*** CPMUINT - CPMU Interrupt Enable Register; 0x000006C8 ***
CPMUINT:            equ    $000006C8                                ;*** CPMUINT - CPMU Interrupt Enable Register; 0x000006C8 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUINT_OSCIE:      equ    1                                         ; Oscillator Corrupt Interrupt Enable Bit
CPMUINT_LOCKIE:     equ    4                                         ; Lock Interrupt Enable Bit
CPMUINT_RTIE:       equ    7                                         ; Real Time Interrupt Enable Bit
; bit position masks
mCPMUINT_OSCIE:     equ    %00000010
mCPMUINT_LOCKIE:    equ    %00010000
mCPMUINT_RTIE:      equ    %10000000


;*** CPMUCLKS - CPMU Clock Select Register; 0x000006C9 ***
CPMUCLKS:           equ    $000006C9                                ;*** CPMUCLKS - CPMU Clock Select Register; 0x000006C9 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUCLKS_COPOSCSEL0: equ    0                                        ; COP Clock Select 0
CPMUCLKS_RTIOSCSEL: equ    1                                         ; RTI Clock Select
CPMUCLKS_PCE:       equ    2                                         ; COP Enable During Pseudo Stop Bit
CPMUCLKS_PRE:       equ    3                                         ; RTI Enable During Pseudo Stop Bit
CPMUCLKS_COPOSCSEL1: equ    4                                        ; COP Clock Select 1
CPMUCLKS_CSAD:      equ    5                                         ; COP in Stop Mode ACLK Disable
CPMUCLKS_PSTP:      equ    6                                         ; Pseudo Stop Bit
CPMUCLKS_PLLSEL:    equ    7                                         ; PLL Select Bit
; bit position masks
mCPMUCLKS_COPOSCSEL0: equ    %00000001
mCPMUCLKS_RTIOSCSEL: equ    %00000010
mCPMUCLKS_PCE:      equ    %00000100
mCPMUCLKS_PRE:      equ    %00001000
mCPMUCLKS_COPOSCSEL1: equ    %00010000
mCPMUCLKS_CSAD:     equ    %00100000
mCPMUCLKS_PSTP:     equ    %01000000
mCPMUCLKS_PLLSEL:   equ    %10000000


;*** CPMUPLL - CPMU PLL Control Register; 0x000006CA ***
CPMUPLL:            equ    $000006CA                                ;*** CPMUPLL - CPMU PLL Control Register; 0x000006CA ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUPLL_FM0:        equ    4                                         ; PLL Frequency Modulation Enable Bit 0
CPMUPLL_FM1:        equ    5                                         ; PLL Frequency Modulation Enable Bit 1
; bit position masks
mCPMUPLL_FM0:       equ    %00010000
mCPMUPLL_FM1:       equ    %00100000


;*** CPMURTI - CPMU RTI Control Register; 0x000006CB ***
CPMURTI:            equ    $000006CB                                ;*** CPMURTI - CPMU RTI Control Register; 0x000006CB ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMURTI_RTR0:       equ    0                                         ; Real Time Interrupt Modulus Counter Select Bit 0
CPMURTI_RTR1:       equ    1                                         ; Real Time Interrupt Modulus Counter Select Bit 1
CPMURTI_RTR2:       equ    2                                         ; Real Time Interrupt Modulus Counter Select Bit 2
CPMURTI_RTR3:       equ    3                                         ; Real Time Interrupt Modulus Counter Select Bit 3
CPMURTI_RTR4:       equ    4                                         ; Real Time Interrupt Prescale Rate Select Bit 4
CPMURTI_RTR5:       equ    5                                         ; Real Time Interrupt Prescale Rate Select Bit 5
CPMURTI_RTR6:       equ    6                                         ; Real Time Interrupt Prescale Rate Select Bit 6
CPMURTI_RTDEC:      equ    7                                         ; Decimal or Binary Divider Select Bit
; bit position masks
mCPMURTI_RTR0:      equ    %00000001
mCPMURTI_RTR1:      equ    %00000010
mCPMURTI_RTR2:      equ    %00000100
mCPMURTI_RTR3:      equ    %00001000
mCPMURTI_RTR4:      equ    %00010000
mCPMURTI_RTR5:      equ    %00100000
mCPMURTI_RTR6:      equ    %01000000
mCPMURTI_RTDEC:     equ    %10000000


;*** CPMUCOP - CPMU COP Control Register; 0x000006CC ***
CPMUCOP:            equ    $000006CC                                ;*** CPMUCOP - CPMU COP Control Register; 0x000006CC ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUCOP_CR0:        equ    0                                         ; COP Watchdog Timer Rate select Bit 0
CPMUCOP_CR1:        equ    1                                         ; COP Watchdog Timer Rate select Bit 1
CPMUCOP_CR2:        equ    2                                         ; COP Watchdog Timer Rate select Bit 2
CPMUCOP_WRTMASK:    equ    5                                         ; Write Mask for WCOP
CPMUCOP_RSBCK:      equ    6                                         ; COP and RTI stop in Active BDM mode Bit
CPMUCOP_WCOP:       equ    7                                         ; Window COP mode
; bit position masks
mCPMUCOP_CR0:       equ    %00000001
mCPMUCOP_CR1:       equ    %00000010
mCPMUCOP_CR2:       equ    %00000100
mCPMUCOP_WRTMASK:   equ    %00100000
mCPMUCOP_RSBCK:     equ    %01000000
mCPMUCOP_WCOP:      equ    %10000000


;*** CPMUARMCOP - CPMU COP Timer Arm/Reset Register; 0x000006CF ***
CPMUARMCOP:         equ    $000006CF                                ;*** CPMUARMCOP - CPMU COP Timer Arm/Reset Register; 0x000006CF ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUARMCOP_BIT0:    equ    0                                         ; CPMU COP Timer Arm/Reset Bit 0
CPMUARMCOP_BIT1:    equ    1                                         ; CPMU COP Timer Arm/Reset Bit 1
CPMUARMCOP_BIT2:    equ    2                                         ; CPMU COP Timer Arm/Reset Bit 2
CPMUARMCOP_BIT3:    equ    3                                         ; CPMU COP Timer Arm/Reset Bit 3
CPMUARMCOP_BIT4:    equ    4                                         ; CPMU COP Timer Arm/Reset Bit 4
CPMUARMCOP_BIT5:    equ    5                                         ; CPMU COP Timer Arm/Reset Bit 5
CPMUARMCOP_BIT6:    equ    6                                         ; CPMU COP Timer Arm/Reset Bit 6
CPMUARMCOP_BIT7:    equ    7                                         ; CPMU COP Timer Arm/Reset Bit 7
; bit position masks
mCPMUARMCOP_BIT0:   equ    %00000001
mCPMUARMCOP_BIT1:   equ    %00000010
mCPMUARMCOP_BIT2:   equ    %00000100
mCPMUARMCOP_BIT3:   equ    %00001000
mCPMUARMCOP_BIT4:   equ    %00010000
mCPMUARMCOP_BIT5:   equ    %00100000
mCPMUARMCOP_BIT6:   equ    %01000000
mCPMUARMCOP_BIT7:   equ    %10000000


;*** CPMUHTCTL - High Temperature Control Register; 0x000006D0 ***
CPMUHTCTL:          equ    $000006D0                                ;*** CPMUHTCTL - High Temperature Control Register; 0x000006D0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUHTCTL_HTIF:     equ    0                                         ; High Temperature Interrupt Flag
CPMUHTCTL_HTIE:     equ    1                                         ; High Temperature Interrupt Enable Bit
CPMUHTCTL_HTDS:     equ    2                                         ; High Temperature Detect Status Bi
CPMUHTCTL_HTE:      equ    3                                         ; High Temperature Sensor/Bandgap Voltage Enable Bit
CPMUHTCTL_VSEL:     equ    5                                         ; Voltage Access Select Bit
; bit position masks
mCPMUHTCTL_HTIF:    equ    %00000001
mCPMUHTCTL_HTIE:    equ    %00000010
mCPMUHTCTL_HTDS:    equ    %00000100
mCPMUHTCTL_HTE:     equ    %00001000
mCPMUHTCTL_VSEL:    equ    %00100000


;*** CPMULVCTL - Low Voltage Control Register; 0x000006D1 ***
CPMULVCTL:          equ    $000006D1                                ;*** CPMULVCTL - Low Voltage Control Register; 0x000006D1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMULVCTL_LVIF:     equ    0                                         ; Low-Voltage Interrupt Flag
CPMULVCTL_LVIE:     equ    1                                         ; Low-Voltage Interrupt Enable Bit
CPMULVCTL_LVDS:     equ    2                                         ; Low-Voltage Detect Status Bit
; bit position masks
mCPMULVCTL_LVIF:    equ    %00000001
mCPMULVCTL_LVIE:    equ    %00000010
mCPMULVCTL_LVDS:    equ    %00000100


;*** CPMUAPICTL - Autonomous Periodical Interrupt Control Register; 0x000006D2 ***
CPMUAPICTL:         equ    $000006D2                                ;*** CPMUAPICTL - Autonomous Periodical Interrupt Control Register; 0x000006D2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUAPICTL_APIF:    equ    0                                         ; Autonomous Periodical Interrupt Flag
CPMUAPICTL_APIE:    equ    1                                         ; Autonomous Periodical Interrupt Enable Bit
CPMUAPICTL_APIFE:   equ    2                                         ; Autonomous Periodical Interrupt Feature Enable Bit
CPMUAPICTL_APIEA:   equ    3                                         ; Autonomous Periodical Interrupt External Access Enable Bit
CPMUAPICTL_APIES:   equ    4                                         ; Autonomous Periodical Interrupt External Select Bit
CPMUAPICTL_APICLK:  equ    7                                         ; Autonomous Periodical Interrupt Clock Select Bit
; bit position masks
mCPMUAPICTL_APIF:   equ    %00000001
mCPMUAPICTL_APIE:   equ    %00000010
mCPMUAPICTL_APIFE:  equ    %00000100
mCPMUAPICTL_APIEA:  equ    %00001000
mCPMUAPICTL_APIES:  equ    %00010000
mCPMUAPICTL_APICLK: equ    %10000000


;*** CPMUACLKTR - Autonomous Clock Trimming Register; 0x000006D3 ***
CPMUACLKTR:         equ    $000006D3                                ;*** CPMUACLKTR - Autonomous Clock Trimming Register; 0x000006D3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUACLKTR_ACLKTR0: equ    2                                         ; Autonomous Periodical Interrupt Period Trimming Bit 0
CPMUACLKTR_ACLKTR1: equ    3                                         ; Autonomous Periodical Interrupt Period Trimming Bit 1
CPMUACLKTR_ACLKTR2: equ    4                                         ; Autonomous Periodical Interrupt Period Trimming Bit 2
CPMUACLKTR_ACLKTR3: equ    5                                         ; Autonomous Periodical Interrupt Period Trimming Bit 3
CPMUACLKTR_ACLKTR4: equ    6                                         ; Autonomous Periodical Interrupt Period Trimming Bit 4
CPMUACLKTR_ACLKTR5: equ    7                                         ; Autonomous Periodical Interrupt Period Trimming Bit 5
; bit position masks
mCPMUACLKTR_ACLKTR0: equ    %00000100
mCPMUACLKTR_ACLKTR1: equ    %00001000
mCPMUACLKTR_ACLKTR2: equ    %00010000
mCPMUACLKTR_ACLKTR3: equ    %00100000
mCPMUACLKTR_ACLKTR4: equ    %01000000
mCPMUACLKTR_ACLKTR5: equ    %10000000


;*** CPMUAPIR - Autonomous Periodical Interrupt Rate Register; 0x000006D4 ***
CPMUAPIR:           equ    $000006D4                                ;*** CPMUAPIR - Autonomous Periodical Interrupt Rate Register; 0x000006D4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUAPIR_APIR0:     equ    0                                         ; Autonomous Periodical Interrupt Rate Bit 0
CPMUAPIR_APIR1:     equ    1                                         ; Autonomous Periodical Interrupt Rate Bit 1
CPMUAPIR_APIR2:     equ    2                                         ; Autonomous Periodical Interrupt Rate Bit 2
CPMUAPIR_APIR3:     equ    3                                         ; Autonomous Periodical Interrupt Rate Bit 3
CPMUAPIR_APIR4:     equ    4                                         ; Autonomous Periodical Interrupt Rate Bit 4
CPMUAPIR_APIR5:     equ    5                                         ; Autonomous Periodical Interrupt Rate Bit 5
CPMUAPIR_APIR6:     equ    6                                         ; Autonomous Periodical Interrupt Rate Bit 6
CPMUAPIR_APIR7:     equ    7                                         ; Autonomous Periodical Interrupt Rate Bit 7
CPMUAPIR_APIR8:     equ    8                                         ; Autonomous Periodical Interrupt Rate Bit 8
CPMUAPIR_APIR9:     equ    9                                         ; Autonomous Periodical Interrupt Rate Bit 9
CPMUAPIR_APIR10:    equ    10                                        ; Autonomous Periodical Interrupt Rate Bit 10
CPMUAPIR_APIR11:    equ    11                                        ; Autonomous Periodical Interrupt Rate Bit 11
CPMUAPIR_APIR12:    equ    12                                        ; Autonomous Periodical Interrupt Rate Bit 12
CPMUAPIR_APIR13:    equ    13                                        ; Autonomous Periodical Interrupt Rate Bit 13
CPMUAPIR_APIR14:    equ    14                                        ; Autonomous Periodical Interrupt Rate Bit 14
CPMUAPIR_APIR15:    equ    15                                        ; Autonomous Periodical Interrupt Rate Bit 15
; bit position masks
mCPMUAPIR_APIR0:    equ    %00000001
mCPMUAPIR_APIR1:    equ    %00000010
mCPMUAPIR_APIR2:    equ    %00000100
mCPMUAPIR_APIR3:    equ    %00001000
mCPMUAPIR_APIR4:    equ    %00010000
mCPMUAPIR_APIR5:    equ    %00100000
mCPMUAPIR_APIR6:    equ    %01000000
mCPMUAPIR_APIR7:    equ    %10000000
mCPMUAPIR_APIR8:    equ    %100000000
mCPMUAPIR_APIR9:    equ    %1000000000
mCPMUAPIR_APIR10:   equ    %10000000000
mCPMUAPIR_APIR11:   equ    %100000000000
mCPMUAPIR_APIR12:   equ    %1000000000000
mCPMUAPIR_APIR13:   equ    %10000000000000
mCPMUAPIR_APIR14:   equ    %100000000000000
mCPMUAPIR_APIR15:   equ    %1000000000000000


;*** CPMUAPIRH - Autonomous Periodical Interrupt Rate Register High; 0x000006D4 ***
CPMUAPIRH:          equ    $000006D4                                ;*** CPMUAPIRH - Autonomous Periodical Interrupt Rate Register High; 0x000006D4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUAPIRH_APIR8:    equ    0                                         ; Autonomous Periodical Interrupt Rate Bit 8
CPMUAPIRH_APIR9:    equ    1                                         ; Autonomous Periodical Interrupt Rate Bit 9
CPMUAPIRH_APIR10:   equ    2                                         ; Autonomous Periodical Interrupt Rate Bit 10
CPMUAPIRH_APIR11:   equ    3                                         ; Autonomous Periodical Interrupt Rate Bit 11
CPMUAPIRH_APIR12:   equ    4                                         ; Autonomous Periodical Interrupt Rate Bit 12
CPMUAPIRH_APIR13:   equ    5                                         ; Autonomous Periodical Interrupt Rate Bit 13
CPMUAPIRH_APIR14:   equ    6                                         ; Autonomous Periodical Interrupt Rate Bit 14
CPMUAPIRH_APIR15:   equ    7                                         ; Autonomous Periodical Interrupt Rate Bit 15
; bit position masks
mCPMUAPIRH_APIR8:   equ    %00000001
mCPMUAPIRH_APIR9:   equ    %00000010
mCPMUAPIRH_APIR10:  equ    %00000100
mCPMUAPIRH_APIR11:  equ    %00001000
mCPMUAPIRH_APIR12:  equ    %00010000
mCPMUAPIRH_APIR13:  equ    %00100000
mCPMUAPIRH_APIR14:  equ    %01000000
mCPMUAPIRH_APIR15:  equ    %10000000


;*** CPMUAPIRL - Autonomous Periodical Interrupt Rate Register Low; 0x000006D5 ***
CPMUAPIRL:          equ    $000006D5                                ;*** CPMUAPIRL - Autonomous Periodical Interrupt Rate Register Low; 0x000006D5 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUAPIRL_APIR0:    equ    0                                         ; Autonomous Periodical Interrupt Rate Bit 0
CPMUAPIRL_APIR1:    equ    1                                         ; Autonomous Periodical Interrupt Rate Bit 1
CPMUAPIRL_APIR2:    equ    2                                         ; Autonomous Periodical Interrupt Rate Bit 2
CPMUAPIRL_APIR3:    equ    3                                         ; Autonomous Periodical Interrupt Rate Bit 3
CPMUAPIRL_APIR4:    equ    4                                         ; Autonomous Periodical Interrupt Rate Bit 4
CPMUAPIRL_APIR5:    equ    5                                         ; Autonomous Periodical Interrupt Rate Bit 5
CPMUAPIRL_APIR6:    equ    6                                         ; Autonomous Periodical Interrupt Rate Bit 6
CPMUAPIRL_APIR7:    equ    7                                         ; Autonomous Periodical Interrupt Rate Bit 7
; bit position masks
mCPMUAPIRL_APIR0:   equ    %00000001
mCPMUAPIRL_APIR1:   equ    %00000010
mCPMUAPIRL_APIR2:   equ    %00000100
mCPMUAPIRL_APIR3:   equ    %00001000
mCPMUAPIRL_APIR4:   equ    %00010000
mCPMUAPIRL_APIR5:   equ    %00100000
mCPMUAPIRL_APIR6:   equ    %01000000
mCPMUAPIRL_APIR7:   equ    %10000000


;*** CPMUHTTR - High Temperature Trimming Register; 0x000006D7 ***
CPMUHTTR:           equ    $000006D7                                ;*** CPMUHTTR - High Temperature Trimming Register; 0x000006D7 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUHTTR_HTTR:      equ    0                                         ; High Temperature Trimming Bits
CPMUHTTR_HTOE:      equ    7                                         ; High Temperature Offeset Enable Bit
; bit position masks
mCPMUHTTR_HTTR:     equ    %00001111
mCPMUHTTR_HTOE:     equ    %10000000


;*** CPMUIRCTRIM - CPMU IRC1M Trim Registers; 0x000006D8 ***
CPMUIRCTRIM:        equ    $000006D8                                ;*** CPMUIRCTRIM - CPMU IRC1M Trim Registers; 0x000006D8 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUIRCTRIM_IRCTRIM0: equ    0                                       ; IRC1M Frequency Trim Bit 0
CPMUIRCTRIM_IRCTRIM1: equ    1                                       ; IRC1M Frequency Trim Bit 1
CPMUIRCTRIM_IRCTRIM2: equ    2                                       ; IRC1M Frequency Trim Bit 2
CPMUIRCTRIM_IRCTRIM3: equ    3                                       ; IRC1M Frequency Trim Bit 3
CPMUIRCTRIM_IRCTRIM4: equ    4                                       ; IRC1M Frequency Trim Bit 4
CPMUIRCTRIM_IRCTRIM5: equ    5                                       ; IRC1M Frequency Trim Bit 5
CPMUIRCTRIM_IRCTRIM6: equ    6                                       ; IRC1M Frequency Trim Bit 6
CPMUIRCTRIM_IRCTRIM7: equ    7                                       ; IRC1M Frequency Trim Bit 7
CPMUIRCTRIM_IRCTRIM8: equ    8                                       ; IRC1M Frequency Trim Bit 8
CPMUIRCTRIM_IRCTRIM9: equ    9                                       ; IRC1M Frequency Trim Bit 9
CPMUIRCTRIM_TCTRIM0: equ    11                                       ; IRC1M temperature coeficient Trim Bit 0
CPMUIRCTRIM_TCTRIM1: equ    12                                       ; IRC1M temperature coeficient Trim Bit 1
CPMUIRCTRIM_TCTRIM2: equ    13                                       ; IRC1M temperature coeficient Trim Bit 2
CPMUIRCTRIM_TCTRIM3: equ    14                                       ; IRC1M temperature coeficient Trim Bit 3
CPMUIRCTRIM_TCTRIM4: equ    15                                       ; IRC1M temperature coeficient Trim Bit 4
; bit position masks
mCPMUIRCTRIM_IRCTRIM0: equ    %00000001
mCPMUIRCTRIM_IRCTRIM1: equ    %00000010
mCPMUIRCTRIM_IRCTRIM2: equ    %00000100
mCPMUIRCTRIM_IRCTRIM3: equ    %00001000
mCPMUIRCTRIM_IRCTRIM4: equ    %00010000
mCPMUIRCTRIM_IRCTRIM5: equ    %00100000
mCPMUIRCTRIM_IRCTRIM6: equ    %01000000
mCPMUIRCTRIM_IRCTRIM7: equ    %10000000
mCPMUIRCTRIM_IRCTRIM8: equ    %100000000
mCPMUIRCTRIM_IRCTRIM9: equ    %1000000000
mCPMUIRCTRIM_TCTRIM0: equ    %100000000000
mCPMUIRCTRIM_TCTRIM1: equ    %1000000000000
mCPMUIRCTRIM_TCTRIM2: equ    %10000000000000
mCPMUIRCTRIM_TCTRIM3: equ    %100000000000000
mCPMUIRCTRIM_TCTRIM4: equ    %1000000000000000


;*** CPMUIRCTRIMH - CPMU IRC1M Trim Registers High; 0x000006D8 ***
CPMUIRCTRIMH:       equ    $000006D8                                ;*** CPMUIRCTRIMH - CPMU IRC1M Trim Registers High; 0x000006D8 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUIRCTRIMH_IRCTRIM8: equ    0                                      ; IRC1M Frequency Trim Bit 8
CPMUIRCTRIMH_IRCTRIM9: equ    1                                      ; IRC1M Frequency Trim Bit 9
CPMUIRCTRIMH_TCTRIM0: equ    3                                       ; IRC1M temperature coeficient Trim Bit 0
CPMUIRCTRIMH_TCTRIM1: equ    4                                       ; IRC1M temperature coeficient Trim Bit 1
CPMUIRCTRIMH_TCTRIM2: equ    5                                       ; IRC1M temperature coeficient Trim Bit 2
CPMUIRCTRIMH_TCTRIM3: equ    6                                       ; IRC1M temperature coeficient Trim Bit 3
CPMUIRCTRIMH_TCTRIM4: equ    7                                       ; IRC1M temperature coeficient Trim Bit 4
; bit position masks
mCPMUIRCTRIMH_IRCTRIM8: equ    %00000001
mCPMUIRCTRIMH_IRCTRIM9: equ    %00000010
mCPMUIRCTRIMH_TCTRIM0: equ    %00001000
mCPMUIRCTRIMH_TCTRIM1: equ    %00010000
mCPMUIRCTRIMH_TCTRIM2: equ    %00100000
mCPMUIRCTRIMH_TCTRIM3: equ    %01000000
mCPMUIRCTRIMH_TCTRIM4: equ    %10000000


;*** CPMUIRCTRIML - CPMU IRC1M Trim Registers Low; 0x000006D9 ***
CPMUIRCTRIML:       equ    $000006D9                                ;*** CPMUIRCTRIML - CPMU IRC1M Trim Registers Low; 0x000006D9 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUIRCTRIML_IRCTRIM0: equ    0                                      ; IRC1M Frequency Trim Bit 0
CPMUIRCTRIML_IRCTRIM1: equ    1                                      ; IRC1M Frequency Trim Bit 1
CPMUIRCTRIML_IRCTRIM2: equ    2                                      ; IRC1M Frequency Trim Bit 2
CPMUIRCTRIML_IRCTRIM3: equ    3                                      ; IRC1M Frequency Trim Bit 3
CPMUIRCTRIML_IRCTRIM4: equ    4                                      ; IRC1M Frequency Trim Bit 4
CPMUIRCTRIML_IRCTRIM5: equ    5                                      ; IRC1M Frequency Trim Bit 5
CPMUIRCTRIML_IRCTRIM6: equ    6                                      ; IRC1M Frequency Trim Bit 6
CPMUIRCTRIML_IRCTRIM7: equ    7                                      ; IRC1M Frequency Trim Bit 7
; bit position masks
mCPMUIRCTRIML_IRCTRIM0: equ    %00000001
mCPMUIRCTRIML_IRCTRIM1: equ    %00000010
mCPMUIRCTRIML_IRCTRIM2: equ    %00000100
mCPMUIRCTRIML_IRCTRIM3: equ    %00001000
mCPMUIRCTRIML_IRCTRIM4: equ    %00010000
mCPMUIRCTRIML_IRCTRIM5: equ    %00100000
mCPMUIRCTRIML_IRCTRIM6: equ    %01000000
mCPMUIRCTRIML_IRCTRIM7: equ    %10000000


;*** CPMUOSC - CPMU Oscillator Register; 0x000006DA ***
CPMUOSC:            equ    $000006DA                                ;*** CPMUOSC - CPMU Oscillator Register; 0x000006DA ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUOSC_OSCE:       equ    7                                         ; Oscillator Enable Bit
; bit position masks
mCPMUOSC_OSCE:      equ    %10000000


;*** CPMUPROT - CPMUV1 Protection Register; 0x000006DB ***
CPMUPROT:           equ    $000006DB                                ;*** CPMUPROT - CPMUV1 Protection Register; 0x000006DB ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUPROT_PROT:      equ    0                                         ; Clock Configuration Registers Protection Bit
; bit position masks
mCPMUPROT_PROT:     equ    %00000001


;*** CPMUVREGCTL - Voltage Regulator Control Register; 0x000006DD ***
CPMUVREGCTL:        equ    $000006DD                                ;*** CPMUVREGCTL - Voltage Regulator Control Register; 0x000006DD ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUVREGCTL_INTXON: equ    0                                         ; Internal voltage regulator Enable for VDDX domain
CPMUVREGCTL_EXTXON: equ    1                                         ; External voltage regulator Enable for VDDX domain
; bit position masks
mCPMUVREGCTL_INTXON: equ    %00000001
mCPMUVREGCTL_EXTXON: equ    %00000010


;*** CPMUOSC2 - CPMU Oscillator Register 2; 0x000006DE ***
CPMUOSC2:           equ    $000006DE                                ;*** CPMUOSC2 - CPMU Oscillator Register 2; 0x000006DE ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CPMUOSC2_OSCMOD:    equ    0                                         ; This bit selects the mode of the external oscillator (XOSCLCP)
CPMUOSC2_OMRE:      equ    1                                         ; This bit enables the oscillator clock monitor reset
; bit position masks
mCPMUOSC2_OSCMOD:   equ    %00000001
mCPMUOSC2_OMRE:     equ    %00000010


;*** BATE - BATS Module Enable Register; 0x000006F0 ***
BATE:               equ    $000006F0                                ;*** BATE - BATS Module Enable Register; 0x000006F0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BATE_BSESE:         equ    0                                         ; BATS VSENSE Level Sense Enable
BATE_BSEAE:         equ    1                                         ; BATS VSENSE ADC Connection Enable
BATE_BSUSE:         equ    2                                         ; BATS VSUP Level Sense Enable
BATE_BSUAE:         equ    3                                         ; BATS VSUP ADC Connection Enable
BATE_BVLS:          equ    4                                         ; BATS Voltage Low Select
BATE_BVHS:          equ    6                                         ; BATS Voltage High Select
; bit position masks
mBATE_BSESE:        equ    %00000001
mBATE_BSEAE:        equ    %00000010
mBATE_BSUSE:        equ    %00000100
mBATE_BSUAE:        equ    %00001000
mBATE_BVLS:         equ    %00110000
mBATE_BVHS:         equ    %01000000


;*** BATSR - BATS Module Status Register; 0x000006F1 ***
BATSR:              equ    $000006F1                                ;*** BATSR - BATS Module Status Register; 0x000006F1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BATSR_BVLC:         equ    0                                         ; BATS Voltage Sense Low Condition Bit
BATSR_BVHC:         equ    1                                         ; BATS Voltage Sense High Condition Bit
; bit position masks
mBATSR_BVLC:        equ    %00000001
mBATSR_BVHC:        equ    %00000010


;*** BATIE - BATS Interrupt Enable Register; 0x000006F2 ***
BATIE:              equ    $000006F2                                ;*** BATIE - BATS Interrupt Enable Register; 0x000006F2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BATIE_BVLIE:        equ    0                                         ; BATS Interrupt Enable Low
BATIE_BVHIE:        equ    1                                         ; BATS Interrupt Enable High
; bit position masks
mBATIE_BVLIE:       equ    %00000001
mBATIE_BVHIE:       equ    %00000010


;*** BATIF - BATS Interrupt Flag Register; 0x000006F3 ***
BATIF:              equ    $000006F3                                ;*** BATIF - BATS Interrupt Flag Register; 0x000006F3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BATIF_BVLIF:        equ    0                                         ; BATS Interrupt Flag Low Detect
BATIF_BVHIF:        equ    1                                         ; BATS Interrupt Flag High Detect
; bit position masks
mBATIF_BVLIF:       equ    %00000001
mBATIF_BVHIF:       equ    %00000010


;*** SCI0BD - SCI 0 Baud Rate Register; 0x00000700 ***
SCI0BD:             equ    $00000700                                ;*** SCI0BD - SCI 0 Baud Rate Register; 0x00000700 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0BD_SBR0:        equ    0                                         ; SCI Baud Rate Bit 0
SCI0BD_SBR1:        equ    1                                         ; SCI Baud Rate Bit 1
SCI0BD_SBR2:        equ    2                                         ; SCI Baud Rate Bit 2
SCI0BD_SBR3:        equ    3                                         ; SCI Baud Rate Bit 3
SCI0BD_SBR4:        equ    4                                         ; SCI Baud Rate Bit 4
SCI0BD_SBR5:        equ    5                                         ; SCI Baud Rate Bit 5
SCI0BD_SBR6:        equ    6                                         ; SCI Baud Rate Bit 6
SCI0BD_SBR7:        equ    7                                         ; SCI Baud Rate Bit 7
SCI0BD_SBR8:        equ    8                                         ; SCI Baud Rate Bit 8
SCI0BD_SBR9:        equ    9                                         ; SCI Baud Rate Bit 9
SCI0BD_SBR10:       equ    10                                        ; SCI Baud Rate Bit 10
SCI0BD_SBR11:       equ    11                                        ; SCI Baud Rate Bit 11
SCI0BD_SBR12:       equ    12                                        ; SCI Baud Rate Bit 12
SCI0BD_SBR13:       equ    13                                        ; SCI Baud Rate Bit 13
SCI0BD_SBR14:       equ    14                                        ; SCI Baud Rate Bit 14
SCI0BD_SBR15:       equ    15                                        ; SCI Baud Rate Bit 15
; bit position masks
mSCI0BD_SBR0:       equ    %00000001
mSCI0BD_SBR1:       equ    %00000010
mSCI0BD_SBR2:       equ    %00000100
mSCI0BD_SBR3:       equ    %00001000
mSCI0BD_SBR4:       equ    %00010000
mSCI0BD_SBR5:       equ    %00100000
mSCI0BD_SBR6:       equ    %01000000
mSCI0BD_SBR7:       equ    %10000000
mSCI0BD_SBR8:       equ    %100000000
mSCI0BD_SBR9:       equ    %1000000000
mSCI0BD_SBR10:      equ    %10000000000
mSCI0BD_SBR11:      equ    %100000000000
mSCI0BD_SBR12:      equ    %1000000000000
mSCI0BD_SBR13:      equ    %10000000000000
mSCI0BD_SBR14:      equ    %100000000000000
mSCI0BD_SBR15:      equ    %1000000000000000


;*** SCI0ASR1 - SCI 0 Alternative Status Register 1; 0x00000700 ***
SCI0ASR1:           equ    $00000700                                ;*** SCI0ASR1 - SCI 0 Alternative Status Register 1; 0x00000700 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0ASR1_BKDIF:     equ    0                                         ; Break Detect Interrupt Flag
SCI0ASR1_BERRIF:    equ    1                                         ; Bit Error Interrupt Flag
SCI0ASR1_BERRV:     equ    2                                         ; Bit Error Value
SCI0ASR1_RXEDGIF:   equ    7                                         ; Receive Input Active Edge Interrupt Flag
; bit position masks
mSCI0ASR1_BKDIF:    equ    %00000001
mSCI0ASR1_BERRIF:   equ    %00000010
mSCI0ASR1_BERRV:    equ    %00000100
mSCI0ASR1_RXEDGIF:  equ    %10000000


;*** SCI0BDH - SCI 0 Baud Rate Register High; 0x00000700 ***
SCI0BDH:            equ    $00000700                                ;*** SCI0BDH - SCI 0 Baud Rate Register High; 0x00000700 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0BDH_SBR8:       equ    0                                         ; SCI Baud Rate Bit 8
SCI0BDH_SBR9:       equ    1                                         ; SCI Baud Rate Bit 9
SCI0BDH_SBR10:      equ    2                                         ; SCI Baud Rate Bit 10
SCI0BDH_SBR11:      equ    3                                         ; SCI Baud Rate Bit 11
SCI0BDH_SBR12:      equ    4                                         ; SCI Baud Rate Bit 12
SCI0BDH_SBR13:      equ    5                                         ; SCI Baud Rate Bit 13
SCI0BDH_SBR14:      equ    6                                         ; SCI Baud Rate Bit 14
SCI0BDH_SBR15:      equ    7                                         ; SCI Baud Rate Bit 15
; bit position masks
mSCI0BDH_SBR8:      equ    %00000001
mSCI0BDH_SBR9:      equ    %00000010
mSCI0BDH_SBR10:     equ    %00000100
mSCI0BDH_SBR11:     equ    %00001000
mSCI0BDH_SBR12:     equ    %00010000
mSCI0BDH_SBR13:     equ    %00100000
mSCI0BDH_SBR14:     equ    %01000000
mSCI0BDH_SBR15:     equ    %10000000


;*** SCI0ACR1 - SCI 0 Alternative Control Register 1; 0x00000701 ***
SCI0ACR1:           equ    $00000701                                ;*** SCI0ACR1 - SCI 0 Alternative Control Register 1; 0x00000701 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0ACR1_BKDIE:     equ    0                                         ; Break Detect Interrupt Enable
SCI0ACR1_BERRIE:    equ    1                                         ; Bit Error Interrupt Enable
SCI0ACR1_RXEDGIE:   equ    7                                         ; Receive Input Active Edge Interrupt Enable
; bit position masks
mSCI0ACR1_BKDIE:    equ    %00000001
mSCI0ACR1_BERRIE:   equ    %00000010
mSCI0ACR1_RXEDGIE:  equ    %10000000


;*** SCI0BDL - SCI 0 Baud Rate Register Low; 0x00000701 ***
SCI0BDL:            equ    $00000701                                ;*** SCI0BDL - SCI 0 Baud Rate Register Low; 0x00000701 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0BDL_SBR0:       equ    0                                         ; SCI Baud Rate Bit 0
SCI0BDL_SBR1:       equ    1                                         ; SCI Baud Rate Bit 1
SCI0BDL_SBR2:       equ    2                                         ; SCI Baud Rate Bit 2
SCI0BDL_SBR3:       equ    3                                         ; SCI Baud Rate Bit 3
SCI0BDL_SBR4:       equ    4                                         ; SCI Baud Rate Bit 4
SCI0BDL_SBR5:       equ    5                                         ; SCI Baud Rate Bit 5
SCI0BDL_SBR6:       equ    6                                         ; SCI Baud Rate Bit 6
SCI0BDL_SBR7:       equ    7                                         ; SCI Baud Rate Bit 7
; bit position masks
mSCI0BDL_SBR0:      equ    %00000001
mSCI0BDL_SBR1:      equ    %00000010
mSCI0BDL_SBR2:      equ    %00000100
mSCI0BDL_SBR3:      equ    %00001000
mSCI0BDL_SBR4:      equ    %00010000
mSCI0BDL_SBR5:      equ    %00100000
mSCI0BDL_SBR6:      equ    %01000000
mSCI0BDL_SBR7:      equ    %10000000


;*** SCI0ACR2 - SCI 0 Alternative Control Register 2; 0x00000702 ***
SCI0ACR2:           equ    $00000702                                ;*** SCI0ACR2 - SCI 0 Alternative Control Register 2; 0x00000702 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0ACR2_BKDFE:     equ    0                                         ; Break Detect Feature Enable
SCI0ACR2_BERRM0:    equ    1                                         ; Bit Error Mode 0
SCI0ACR2_BERRM1:    equ    2                                         ; Bit Error Mode 1
SCI0ACR2_TNP0:      equ    5                                         ; Transmitter Narrow Pulse Bit 0
SCI0ACR2_TNP1:      equ    6                                         ; Transmitter Narrow Pulse Bit 1
SCI0ACR2_IREN:      equ    7                                         ; Infrared Enable Bit
; bit position masks
mSCI0ACR2_BKDFE:    equ    %00000001
mSCI0ACR2_BERRM0:   equ    %00000010
mSCI0ACR2_BERRM1:   equ    %00000100
mSCI0ACR2_TNP0:     equ    %00100000
mSCI0ACR2_TNP1:     equ    %01000000
mSCI0ACR2_IREN:     equ    %10000000


;*** SCI0CR1 - SCI 0 Control Register 1; 0x00000702 ***
SCI0CR1:            equ    $00000702                                ;*** SCI0CR1 - SCI 0 Control Register 1; 0x00000702 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0CR1_PT:         equ    0                                         ; Parity Type Bit
SCI0CR1_PE:         equ    1                                         ; Parity Enable Bit
SCI0CR1_ILT:        equ    2                                         ; Idle Line Type Bit
SCI0CR1_WAKE:       equ    3                                         ; Wakeup Condition Bit
SCI0CR1_M:          equ    4                                         ; Data Format Mode Bit
SCI0CR1_RSRC:       equ    5                                         ; Receiver Source Bit
SCI0CR1_SCISWAI:    equ    6                                         ; SCI Stop in Wait Mode Bit
SCI0CR1_LOOPS:      equ    7                                         ; Loop Select Bit
; bit position masks
mSCI0CR1_PT:        equ    %00000001
mSCI0CR1_PE:        equ    %00000010
mSCI0CR1_ILT:       equ    %00000100
mSCI0CR1_WAKE:      equ    %00001000
mSCI0CR1_M:         equ    %00010000
mSCI0CR1_RSRC:      equ    %00100000
mSCI0CR1_SCISWAI:   equ    %01000000
mSCI0CR1_LOOPS:     equ    %10000000


;*** SCI0CR2 - SCI 0 Control Register 2; 0x00000703 ***
SCI0CR2:            equ    $00000703                                ;*** SCI0CR2 - SCI 0 Control Register 2; 0x00000703 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0CR2_SBK:        equ    0                                         ; Send Break Bit
SCI0CR2_RWU:        equ    1                                         ; Receiver Wakeup Bit
SCI0CR2_RE:         equ    2                                         ; Receiver Enable Bit
SCI0CR2_TE:         equ    3                                         ; Transmitter Enable Bit
SCI0CR2_ILIE:       equ    4                                         ; Idle Line Interrupt Enable Bit
SCI0CR2_RIE:        equ    5                                         ; Receiver Full Interrupt Enable Bit
SCI0CR2_TCIE:       equ    6                                         ; Transmission Complete Interrupt Enable Bit
SCI0CR2_TIE:        equ    7                                         ; Transmitter Interrupt Enable Bit
; bit position masks
mSCI0CR2_SBK:       equ    %00000001
mSCI0CR2_RWU:       equ    %00000010
mSCI0CR2_RE:        equ    %00000100
mSCI0CR2_TE:        equ    %00001000
mSCI0CR2_ILIE:      equ    %00010000
mSCI0CR2_RIE:       equ    %00100000
mSCI0CR2_TCIE:      equ    %01000000
mSCI0CR2_TIE:       equ    %10000000


;*** SCI0SR1 - SCI 0 Status Register 1; 0x00000704 ***
SCI0SR1:            equ    $00000704                                ;*** SCI0SR1 - SCI 0 Status Register 1; 0x00000704 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0SR1_PF:         equ    0                                         ; Parity Error Flag
SCI0SR1_FE:         equ    1                                         ; Framing Error Flag
SCI0SR1_NF:         equ    2                                         ; Noise Flag
SCI0SR1_OR:         equ    3                                         ; Overrun Flag
SCI0SR1_IDLE:       equ    4                                         ; Idle Line Flag
SCI0SR1_RDRF:       equ    5                                         ; Receive Data Register Full Flag
SCI0SR1_TC:         equ    6                                         ; Transmit Complete Flag
SCI0SR1_TDRE:       equ    7                                         ; Transmit Data Register Empty Flag
; bit position masks
mSCI0SR1_PF:        equ    %00000001
mSCI0SR1_FE:        equ    %00000010
mSCI0SR1_NF:        equ    %00000100
mSCI0SR1_OR:        equ    %00001000
mSCI0SR1_IDLE:      equ    %00010000
mSCI0SR1_RDRF:      equ    %00100000
mSCI0SR1_TC:        equ    %01000000
mSCI0SR1_TDRE:      equ    %10000000


;*** SCI0SR2 - SCI 0 Status Register 2; 0x00000705 ***
SCI0SR2:            equ    $00000705                                ;*** SCI0SR2 - SCI 0 Status Register 2; 0x00000705 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0SR2_RAF:        equ    0                                         ; Receiver Active Flag
SCI0SR2_TXDIR:      equ    1                                         ; Transmitter pin data direction in Single-Wire mode
SCI0SR2_BRK13:      equ    2                                         ; Break Transmit character length
SCI0SR2_RXPOL:      equ    3                                         ; Receive Polarity
SCI0SR2_TXPOL:      equ    4                                         ; Transmit Polarity
SCI0SR2_AMAP:       equ    7                                         ; Alternative Map
; bit position masks
mSCI0SR2_RAF:       equ    %00000001
mSCI0SR2_TXDIR:     equ    %00000010
mSCI0SR2_BRK13:     equ    %00000100
mSCI0SR2_RXPOL:     equ    %00001000
mSCI0SR2_TXPOL:     equ    %00010000
mSCI0SR2_AMAP:      equ    %10000000


;*** SCI0DRH - SCI 0 Data Register High; 0x00000706 ***
SCI0DRH:            equ    $00000706                                ;*** SCI0DRH - SCI 0 Data Register High; 0x00000706 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0DRH_T8:         equ    6                                         ; Transmit Bit 8
SCI0DRH_R8:         equ    7                                         ; Received Bit 8
; bit position masks
mSCI0DRH_T8:        equ    %01000000
mSCI0DRH_R8:        equ    %10000000


;*** SCI0DRL - SCI 0 Data Register Low; 0x00000707 ***
SCI0DRL:            equ    $00000707                                ;*** SCI0DRL - SCI 0 Data Register Low; 0x00000707 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI0DRL_R0_T0:      equ    0                                         ; Received bit 0 or Transmit bit 0
SCI0DRL_R1_T1:      equ    1                                         ; Received bit 1 or Transmit bit 1
SCI0DRL_R2_T2:      equ    2                                         ; Received bit 2 or Transmit bit 2
SCI0DRL_R3_T3:      equ    3                                         ; Received bit 3 or Transmit bit 3
SCI0DRL_R4_T4:      equ    4                                         ; Received bit 4 or Transmit bit 4
SCI0DRL_R5_T5:      equ    5                                         ; Received bit 5 or Transmit bit 5
SCI0DRL_R6_T6:      equ    6                                         ; Received bit 6 or Transmit bit 6
SCI0DRL_R7_T7:      equ    7                                         ; Received bit 7 or Transmit bit 7
; bit position masks
mSCI0DRL_R0_T0:     equ    %00000001
mSCI0DRL_R1_T1:     equ    %00000010
mSCI0DRL_R2_T2:     equ    %00000100
mSCI0DRL_R3_T3:     equ    %00001000
mSCI0DRL_R4_T4:     equ    %00010000
mSCI0DRL_R5_T5:     equ    %00100000
mSCI0DRL_R6_T6:     equ    %01000000
mSCI0DRL_R7_T7:     equ    %10000000


;*** SCI1BD - SCI 1 Baud Rate Register; 0x00000710 ***
SCI1BD:             equ    $00000710                                ;*** SCI1BD - SCI 1 Baud Rate Register; 0x00000710 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1BD_SBR0:        equ    0                                         ; SCI Baud Rate Bit 0
SCI1BD_SBR1:        equ    1                                         ; SCI Baud Rate Bit 1
SCI1BD_SBR2:        equ    2                                         ; SCI Baud Rate Bit 2
SCI1BD_SBR3:        equ    3                                         ; SCI Baud Rate Bit 3
SCI1BD_SBR4:        equ    4                                         ; SCI Baud Rate Bit 4
SCI1BD_SBR5:        equ    5                                         ; SCI Baud Rate Bit 5
SCI1BD_SBR6:        equ    6                                         ; SCI Baud Rate Bit 6
SCI1BD_SBR7:        equ    7                                         ; SCI Baud Rate Bit 7
SCI1BD_SBR8:        equ    8                                         ; SCI Baud Rate Bit 8
SCI1BD_SBR9:        equ    9                                         ; SCI Baud Rate Bit 9
SCI1BD_SBR10:       equ    10                                        ; SCI Baud Rate Bit 10
SCI1BD_SBR11:       equ    11                                        ; SCI Baud Rate Bit 11
SCI1BD_SBR12:       equ    12                                        ; SCI Baud Rate Bit 12
SCI1BD_SBR13:       equ    13                                        ; SCI Baud Rate Bit 13
SCI1BD_SBR14:       equ    14                                        ; SCI Baud Rate Bit 14
SCI1BD_SBR15:       equ    15                                        ; SCI Baud Rate Bit 15
; bit position masks
mSCI1BD_SBR0:       equ    %00000001
mSCI1BD_SBR1:       equ    %00000010
mSCI1BD_SBR2:       equ    %00000100
mSCI1BD_SBR3:       equ    %00001000
mSCI1BD_SBR4:       equ    %00010000
mSCI1BD_SBR5:       equ    %00100000
mSCI1BD_SBR6:       equ    %01000000
mSCI1BD_SBR7:       equ    %10000000
mSCI1BD_SBR8:       equ    %100000000
mSCI1BD_SBR9:       equ    %1000000000
mSCI1BD_SBR10:      equ    %10000000000
mSCI1BD_SBR11:      equ    %100000000000
mSCI1BD_SBR12:      equ    %1000000000000
mSCI1BD_SBR13:      equ    %10000000000000
mSCI1BD_SBR14:      equ    %100000000000000
mSCI1BD_SBR15:      equ    %1000000000000000


;*** SCI1ASR1 - SCI 1 Alternative Status Register 1; 0x00000710 ***
SCI1ASR1:           equ    $00000710                                ;*** SCI1ASR1 - SCI 1 Alternative Status Register 1; 0x00000710 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1ASR1_BKDIF:     equ    0                                         ; Break Detect Interrupt Flag
SCI1ASR1_BERRIF:    equ    1                                         ; Bit Error Interrupt Flag
SCI1ASR1_BERRV:     equ    2                                         ; Bit Error Value
SCI1ASR1_RXEDGIF:   equ    7                                         ; Receive Input Active Edge Interrupt Flag
; bit position masks
mSCI1ASR1_BKDIF:    equ    %00000001
mSCI1ASR1_BERRIF:   equ    %00000010
mSCI1ASR1_BERRV:    equ    %00000100
mSCI1ASR1_RXEDGIF:  equ    %10000000


;*** SCI1BDH - SCI 1 Baud Rate Register High; 0x00000710 ***
SCI1BDH:            equ    $00000710                                ;*** SCI1BDH - SCI 1 Baud Rate Register High; 0x00000710 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1BDH_SBR8:       equ    0                                         ; SCI Baud Rate Bit 8
SCI1BDH_SBR9:       equ    1                                         ; SCI Baud Rate Bit 9
SCI1BDH_SBR10:      equ    2                                         ; SCI Baud Rate Bit 10
SCI1BDH_SBR11:      equ    3                                         ; SCI Baud Rate Bit 11
SCI1BDH_SBR12:      equ    4                                         ; SCI Baud Rate Bit 12
SCI1BDH_SBR13:      equ    5                                         ; SCI Baud Rate Bit 13
SCI1BDH_SBR14:      equ    6                                         ; SCI Baud Rate Bit 14
SCI1BDH_SBR15:      equ    7                                         ; SCI Baud Rate Bit 15
; bit position masks
mSCI1BDH_SBR8:      equ    %00000001
mSCI1BDH_SBR9:      equ    %00000010
mSCI1BDH_SBR10:     equ    %00000100
mSCI1BDH_SBR11:     equ    %00001000
mSCI1BDH_SBR12:     equ    %00010000
mSCI1BDH_SBR13:     equ    %00100000
mSCI1BDH_SBR14:     equ    %01000000
mSCI1BDH_SBR15:     equ    %10000000


;*** SCI1ACR1 - SCI 1 Alternative Control Register 1; 0x00000711 ***
SCI1ACR1:           equ    $00000711                                ;*** SCI1ACR1 - SCI 1 Alternative Control Register 1; 0x00000711 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1ACR1_BKDIE:     equ    0                                         ; Break Detect Interrupt Enable
SCI1ACR1_BERRIE:    equ    1                                         ; Bit Error Interrupt Enable
SCI1ACR1_RXEDGIE:   equ    7                                         ; Receive Input Active Edge Interrupt Enable
; bit position masks
mSCI1ACR1_BKDIE:    equ    %00000001
mSCI1ACR1_BERRIE:   equ    %00000010
mSCI1ACR1_RXEDGIE:  equ    %10000000


;*** SCI1BDL - SCI 1 Baud Rate Register Low; 0x00000711 ***
SCI1BDL:            equ    $00000711                                ;*** SCI1BDL - SCI 1 Baud Rate Register Low; 0x00000711 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1BDL_SBR0:       equ    0                                         ; SCI Baud Rate Bit 0
SCI1BDL_SBR1:       equ    1                                         ; SCI Baud Rate Bit 1
SCI1BDL_SBR2:       equ    2                                         ; SCI Baud Rate Bit 2
SCI1BDL_SBR3:       equ    3                                         ; SCI Baud Rate Bit 3
SCI1BDL_SBR4:       equ    4                                         ; SCI Baud Rate Bit 4
SCI1BDL_SBR5:       equ    5                                         ; SCI Baud Rate Bit 5
SCI1BDL_SBR6:       equ    6                                         ; SCI Baud Rate Bit 6
SCI1BDL_SBR7:       equ    7                                         ; SCI Baud Rate Bit 7
; bit position masks
mSCI1BDL_SBR0:      equ    %00000001
mSCI1BDL_SBR1:      equ    %00000010
mSCI1BDL_SBR2:      equ    %00000100
mSCI1BDL_SBR3:      equ    %00001000
mSCI1BDL_SBR4:      equ    %00010000
mSCI1BDL_SBR5:      equ    %00100000
mSCI1BDL_SBR6:      equ    %01000000
mSCI1BDL_SBR7:      equ    %10000000


;*** SCI1ACR2 - SCI 1 Alternative Control Register 2; 0x00000712 ***
SCI1ACR2:           equ    $00000712                                ;*** SCI1ACR2 - SCI 1 Alternative Control Register 2; 0x00000712 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1ACR2_BKDFE:     equ    0                                         ; Break Detect Feature Enable
SCI1ACR2_BERRM0:    equ    1                                         ; Bit Error Mode 0
SCI1ACR2_BERRM1:    equ    2                                         ; Bit Error Mode 1
SCI1ACR2_TNP0:      equ    5                                         ; Transmitter Narrow Pulse Bit 0
SCI1ACR2_TNP1:      equ    6                                         ; Transmitter Narrow Pulse Bit 1
SCI1ACR2_IREN:      equ    7                                         ; Infrared Enable Bit
; bit position masks
mSCI1ACR2_BKDFE:    equ    %00000001
mSCI1ACR2_BERRM0:   equ    %00000010
mSCI1ACR2_BERRM1:   equ    %00000100
mSCI1ACR2_TNP0:     equ    %00100000
mSCI1ACR2_TNP1:     equ    %01000000
mSCI1ACR2_IREN:     equ    %10000000


;*** SCI1CR1 - SCI 1 Control Register 1; 0x00000712 ***
SCI1CR1:            equ    $00000712                                ;*** SCI1CR1 - SCI 1 Control Register 1; 0x00000712 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1CR1_PT:         equ    0                                         ; Parity Type Bit
SCI1CR1_PE:         equ    1                                         ; Parity Enable Bit
SCI1CR1_ILT:        equ    2                                         ; Idle Line Type Bit
SCI1CR1_WAKE:       equ    3                                         ; Wakeup Condition Bit
SCI1CR1_M:          equ    4                                         ; Data Format Mode Bit
SCI1CR1_RSRC:       equ    5                                         ; Receiver Source Bit
SCI1CR1_SCISWAI:    equ    6                                         ; SCI Stop in Wait Mode Bit
SCI1CR1_LOOPS:      equ    7                                         ; Loop Select Bit
; bit position masks
mSCI1CR1_PT:        equ    %00000001
mSCI1CR1_PE:        equ    %00000010
mSCI1CR1_ILT:       equ    %00000100
mSCI1CR1_WAKE:      equ    %00001000
mSCI1CR1_M:         equ    %00010000
mSCI1CR1_RSRC:      equ    %00100000
mSCI1CR1_SCISWAI:   equ    %01000000
mSCI1CR1_LOOPS:     equ    %10000000


;*** SCI1CR2 - SCI 1 Control Register 2; 0x00000713 ***
SCI1CR2:            equ    $00000713                                ;*** SCI1CR2 - SCI 1 Control Register 2; 0x00000713 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1CR2_SBK:        equ    0                                         ; Send Break Bit
SCI1CR2_RWU:        equ    1                                         ; Receiver Wakeup Bit
SCI1CR2_RE:         equ    2                                         ; Receiver Enable Bit
SCI1CR2_TE:         equ    3                                         ; Transmitter Enable Bit
SCI1CR2_ILIE:       equ    4                                         ; Idle Line Interrupt Enable Bit
SCI1CR2_RIE:        equ    5                                         ; Receiver Full Interrupt Enable Bit
SCI1CR2_TCIE:       equ    6                                         ; Transmission Complete Interrupt Enable Bit
SCI1CR2_TIE:        equ    7                                         ; Transmitter Interrupt Enable Bit
; bit position masks
mSCI1CR2_SBK:       equ    %00000001
mSCI1CR2_RWU:       equ    %00000010
mSCI1CR2_RE:        equ    %00000100
mSCI1CR2_TE:        equ    %00001000
mSCI1CR2_ILIE:      equ    %00010000
mSCI1CR2_RIE:       equ    %00100000
mSCI1CR2_TCIE:      equ    %01000000
mSCI1CR2_TIE:       equ    %10000000


;*** SCI1SR1 - SCI 1 Status Register 1; 0x00000714 ***
SCI1SR1:            equ    $00000714                                ;*** SCI1SR1 - SCI 1 Status Register 1; 0x00000714 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1SR1_PF:         equ    0                                         ; Parity Error Flag
SCI1SR1_FE:         equ    1                                         ; Framing Error Flag
SCI1SR1_NF:         equ    2                                         ; Noise Flag
SCI1SR1_OR:         equ    3                                         ; Overrun Flag
SCI1SR1_IDLE:       equ    4                                         ; Idle Line Flag
SCI1SR1_RDRF:       equ    5                                         ; Receive Data Register Full Flag
SCI1SR1_TC:         equ    6                                         ; Transmit Complete Flag
SCI1SR1_TDRE:       equ    7                                         ; Transmit Data Register Empty Flag
; bit position masks
mSCI1SR1_PF:        equ    %00000001
mSCI1SR1_FE:        equ    %00000010
mSCI1SR1_NF:        equ    %00000100
mSCI1SR1_OR:        equ    %00001000
mSCI1SR1_IDLE:      equ    %00010000
mSCI1SR1_RDRF:      equ    %00100000
mSCI1SR1_TC:        equ    %01000000
mSCI1SR1_TDRE:      equ    %10000000


;*** SCI1SR2 - SCI 1 Status Register 2; 0x00000715 ***
SCI1SR2:            equ    $00000715                                ;*** SCI1SR2 - SCI 1 Status Register 2; 0x00000715 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1SR2_RAF:        equ    0                                         ; Receiver Active Flag
SCI1SR2_TXDIR:      equ    1                                         ; Transmitter pin data direction in Single-Wire mode
SCI1SR2_BRK13:      equ    2                                         ; Break Transmit character length
SCI1SR2_RXPOL:      equ    3                                         ; Receive Polarity
SCI1SR2_TXPOL:      equ    4                                         ; Transmit Polarity
SCI1SR2_AMAP:       equ    7                                         ; Alternative Map
; bit position masks
mSCI1SR2_RAF:       equ    %00000001
mSCI1SR2_TXDIR:     equ    %00000010
mSCI1SR2_BRK13:     equ    %00000100
mSCI1SR2_RXPOL:     equ    %00001000
mSCI1SR2_TXPOL:     equ    %00010000
mSCI1SR2_AMAP:      equ    %10000000


;*** SCI1DRH - SCI 1 Data Register High; 0x00000716 ***
SCI1DRH:            equ    $00000716                                ;*** SCI1DRH - SCI 1 Data Register High; 0x00000716 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1DRH_T8:         equ    6                                         ; Transmit Bit 8
SCI1DRH_R8:         equ    7                                         ; Received Bit 8
; bit position masks
mSCI1DRH_T8:        equ    %01000000
mSCI1DRH_R8:        equ    %10000000


;*** SCI1DRL - SCI 1 Data Register Low; 0x00000717 ***
SCI1DRL:            equ    $00000717                                ;*** SCI1DRL - SCI 1 Data Register Low; 0x00000717 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SCI1DRL_R0_T0:      equ    0                                         ; Received bit 0 or Transmit bit 0
SCI1DRL_R1_T1:      equ    1                                         ; Received bit 1 or Transmit bit 1
SCI1DRL_R2_T2:      equ    2                                         ; Received bit 2 or Transmit bit 2
SCI1DRL_R3_T3:      equ    3                                         ; Received bit 3 or Transmit bit 3
SCI1DRL_R4_T4:      equ    4                                         ; Received bit 4 or Transmit bit 4
SCI1DRL_R5_T5:      equ    5                                         ; Received bit 5 or Transmit bit 5
SCI1DRL_R6_T6:      equ    6                                         ; Received bit 6 or Transmit bit 6
SCI1DRL_R7_T7:      equ    7                                         ; Received bit 7 or Transmit bit 7
; bit position masks
mSCI1DRL_R0_T0:     equ    %00000001
mSCI1DRL_R1_T1:     equ    %00000010
mSCI1DRL_R2_T2:     equ    %00000100
mSCI1DRL_R3_T3:     equ    %00001000
mSCI1DRL_R4_T4:     equ    %00010000
mSCI1DRL_R5_T5:     equ    %00100000
mSCI1DRL_R6_T6:     equ    %01000000
mSCI1DRL_R7_T7:     equ    %10000000


;*** SPI0CR1 - SPI 0 Control Register 1; 0x00000780 ***
SPI0CR1:            equ    $00000780                                ;*** SPI0CR1 - SPI 0 Control Register 1; 0x00000780 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0CR1_LSBFE:      equ    0                                         ; SPI LSB-First Enable
SPI0CR1_SSOE:       equ    1                                         ; Slave Select Output Enable
SPI0CR1_CPHA:       equ    2                                         ; SPI Clock Phase Bit
SPI0CR1_CPOL:       equ    3                                         ; SPI Clock Polarity Bit
SPI0CR1_MSTR:       equ    4                                         ; SPI Master/Slave Mode Select Bit
SPI0CR1_SPTIE:      equ    5                                         ; SPI Transmit Interrupt Enable
SPI0CR1_SPE:        equ    6                                         ; SPI System Enable Bit
SPI0CR1_SPIE:       equ    7                                         ; SPI Interrupt Enable Bit
; bit position masks
mSPI0CR1_LSBFE:     equ    %00000001
mSPI0CR1_SSOE:      equ    %00000010
mSPI0CR1_CPHA:      equ    %00000100
mSPI0CR1_CPOL:      equ    %00001000
mSPI0CR1_MSTR:      equ    %00010000
mSPI0CR1_SPTIE:     equ    %00100000
mSPI0CR1_SPE:       equ    %01000000
mSPI0CR1_SPIE:      equ    %10000000


;*** SPI0CR2 - SPI 0 Control Register 2; 0x00000781 ***
SPI0CR2:            equ    $00000781                                ;*** SPI0CR2 - SPI 0 Control Register 2; 0x00000781 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0CR2_SPC0:       equ    0                                         ; Serial Pin Control Bit 0
SPI0CR2_SPISWAI:    equ    1                                         ; SPI Stop in Wait Mode Bit
SPI0CR2_BIDIROE:    equ    3                                         ; Output enable in the Bidirectional mode of operation
SPI0CR2_MODFEN:     equ    4                                         ; Mode Fault Enable Bit
SPI0CR2_XFRW:       equ    6                                         ; Transfer Width
; bit position masks
mSPI0CR2_SPC0:      equ    %00000001
mSPI0CR2_SPISWAI:   equ    %00000010
mSPI0CR2_BIDIROE:   equ    %00001000
mSPI0CR2_MODFEN:    equ    %00010000
mSPI0CR2_XFRW:      equ    %01000000


;*** SPI0BR - SPI 0 Baud Rate Register; 0x00000782 ***
SPI0BR:             equ    $00000782                                ;*** SPI0BR - SPI 0 Baud Rate Register; 0x00000782 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0BR_SPR0:        equ    0                                         ; SPI Baud Rate Selection Bit 0
SPI0BR_SPR1:        equ    1                                         ; SPI Baud Rate Selection Bit 1
SPI0BR_SPR2:        equ    2                                         ; SPI Baud Rate Selection Bit 2
SPI0BR_SPPR0:       equ    4                                         ; SPI Baud Rate Preselection Bits 0
SPI0BR_SPPR1:       equ    5                                         ; SPI Baud Rate Preselection Bits 1
SPI0BR_SPPR2:       equ    6                                         ; SPI Baud Rate Preselection Bits 2
; bit position masks
mSPI0BR_SPR0:       equ    %00000001
mSPI0BR_SPR1:       equ    %00000010
mSPI0BR_SPR2:       equ    %00000100
mSPI0BR_SPPR0:      equ    %00010000
mSPI0BR_SPPR1:      equ    %00100000
mSPI0BR_SPPR2:      equ    %01000000


;*** SPI0SR - SPI 0 Status Register; 0x00000783 ***
SPI0SR:             equ    $00000783                                ;*** SPI0SR - SPI 0 Status Register; 0x00000783 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0SR_MODF:        equ    4                                         ; Mode Fault Flag
SPI0SR_SPTEF:       equ    5                                         ; SPI Transmit Empty Interrupt Flag
SPI0SR_SPIF:        equ    7                                         ; SPIF Receive Interrupt Flag
; bit position masks
mSPI0SR_MODF:       equ    %00010000
mSPI0SR_SPTEF:      equ    %00100000
mSPI0SR_SPIF:       equ    %10000000


;*** SPI0DR - SPI 0 Data Register; 0x00000784 ***
SPI0DR:             equ    $00000784                                ;*** SPI0DR - SPI 0 Data Register; 0x00000784 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0DR_R0_T0:       equ    0                                         ; SPI 0 Data Bit 0
SPI0DR_R1_T1:       equ    1                                         ; SPI 0 Data Bit 1
SPI0DR_R2_T2:       equ    2                                         ; SPI 0 Data Bit 2
SPI0DR_R3_T3:       equ    3                                         ; SPI 0 Data Bit 3
SPI0DR_R4_T4:       equ    4                                         ; SPI 0 Data Bit 4
SPI0DR_R5_T5:       equ    5                                         ; SPI 0 Data Bit 5
SPI0DR_R6_T6:       equ    6                                         ; SPI 0 Data Bit 6
SPI0DR_R7_T7:       equ    7                                         ; SPI 0 Data Bit 7
SPI0DR_R8_T8:       equ    8                                         ; SPI 0 Data Bit 8
SPI0DR_R9_T9:       equ    9                                         ; SPI 0 Data Bit 9
SPI0DR_R10_T10:     equ    10                                        ; SPI 0 Data Bit 10
SPI0DR_R11_T11:     equ    11                                        ; SPI 0 Data Bit 11
SPI0DR_R12_T12:     equ    12                                        ; SPI 0 Data Bit 12
SPI0DR_R13_T13:     equ    13                                        ; SPI 0 Data Bit 13
SPI0DR_R14_T14:     equ    14                                        ; SPI 0 Data Bit 14
SPI0DR_R15_T15:     equ    15                                        ; SPI 0 Data Bit 15
; bit position masks
mSPI0DR_R0_T0:      equ    %00000001
mSPI0DR_R1_T1:      equ    %00000010
mSPI0DR_R2_T2:      equ    %00000100
mSPI0DR_R3_T3:      equ    %00001000
mSPI0DR_R4_T4:      equ    %00010000
mSPI0DR_R5_T5:      equ    %00100000
mSPI0DR_R6_T6:      equ    %01000000
mSPI0DR_R7_T7:      equ    %10000000
mSPI0DR_R8_T8:      equ    %100000000
mSPI0DR_R9_T9:      equ    %1000000000
mSPI0DR_R10_T10:    equ    %10000000000
mSPI0DR_R11_T11:    equ    %100000000000
mSPI0DR_R12_T12:    equ    %1000000000000
mSPI0DR_R13_T13:    equ    %10000000000000
mSPI0DR_R14_T14:    equ    %100000000000000
mSPI0DR_R15_T15:    equ    %1000000000000000


;*** SPI0DRH - SPI 0 Data Register High; 0x00000784 ***
SPI0DRH:            equ    $00000784                                ;*** SPI0DRH - SPI 0 Data Register High; 0x00000784 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0DRH_R8_T8:      equ    0                                         ; SPI 0 Data Bit 8
SPI0DRH_R9_T9:      equ    1                                         ; SPI 0 Data Bit 9
SPI0DRH_R10_T10:    equ    2                                         ; SPI 0 Data Bit 10
SPI0DRH_R11_T11:    equ    3                                         ; SPI 0 Data Bit 11
SPI0DRH_R12_T12:    equ    4                                         ; SPI 0 Data Bit 12
SPI0DRH_R13_T13:    equ    5                                         ; SPI 0 Data Bit 13
SPI0DRH_R14_T14:    equ    6                                         ; SPI 0 Data Bit 14
SPI0DRH_R15_T15:    equ    7                                         ; SPI 0 Data Bit 15
; bit position masks
mSPI0DRH_R8_T8:     equ    %00000001
mSPI0DRH_R9_T9:     equ    %00000010
mSPI0DRH_R10_T10:   equ    %00000100
mSPI0DRH_R11_T11:   equ    %00001000
mSPI0DRH_R12_T12:   equ    %00010000
mSPI0DRH_R13_T13:   equ    %00100000
mSPI0DRH_R14_T14:   equ    %01000000
mSPI0DRH_R15_T15:   equ    %10000000


;*** SPI0DRL - SPI 0 Data Register Low; 0x00000785 ***
SPI0DRL:            equ    $00000785                                ;*** SPI0DRL - SPI 0 Data Register Low; 0x00000785 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SPI0DRL_R0_T0:      equ    0                                         ; SPI 0 Data Bit 0
SPI0DRL_R1_T1:      equ    1                                         ; SPI 0 Data Bit 1
SPI0DRL_R2_T2:      equ    2                                         ; SPI 0 Data Bit 2
SPI0DRL_R3_T3:      equ    3                                         ; SPI 0 Data Bit 3
SPI0DRL_R4_T4:      equ    4                                         ; SPI 0 Data Bit 4
SPI0DRL_R5_T5:      equ    5                                         ; SPI 0 Data Bit 5
SPI0DRL_R6_T6:      equ    6                                         ; SPI 0 Data Bit 6
SPI0DRL_R7_T7:      equ    7                                         ; SPI 0 Data Bit 7
; bit position masks
mSPI0DRL_R0_T0:     equ    %00000001
mSPI0DRL_R1_T1:     equ    %00000010
mSPI0DRL_R2_T2:     equ    %00000100
mSPI0DRL_R3_T3:     equ    %00001000
mSPI0DRL_R4_T4:     equ    %00010000
mSPI0DRL_R5_T5:     equ    %00100000
mSPI0DRL_R6_T6:     equ    %01000000
mSPI0DRL_R7_T7:     equ    %10000000


;*** IIC0IBAD - IIC Address Register; 0x000007C0 ***
IIC0IBAD:           equ    $000007C0                                ;*** IIC0IBAD - IIC Address Register; 0x000007C0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IIC0IBAD_ADR1:      equ    1                                         ; Slave Address Bit 1
IIC0IBAD_ADR2:      equ    2                                         ; Slave Address Bit 2
IIC0IBAD_ADR3:      equ    3                                         ; Slave Address Bit 3
IIC0IBAD_ADR4:      equ    4                                         ; Slave Address Bit 4
IIC0IBAD_ADR5:      equ    5                                         ; Slave Address Bit 5
IIC0IBAD_ADR6:      equ    6                                         ; Slave Address Bit 6
IIC0IBAD_ADR7:      equ    7                                         ; Slave Address Bit 7
; bit position masks
mIIC0IBAD_ADR1:     equ    %00000010
mIIC0IBAD_ADR2:     equ    %00000100
mIIC0IBAD_ADR3:     equ    %00001000
mIIC0IBAD_ADR4:     equ    %00010000
mIIC0IBAD_ADR5:     equ    %00100000
mIIC0IBAD_ADR6:     equ    %01000000
mIIC0IBAD_ADR7:     equ    %10000000


;*** IIC0IBFD - IIC Frequency Divider Register; 0x000007C1 ***
IIC0IBFD:           equ    $000007C1                                ;*** IIC0IBFD - IIC Frequency Divider Register; 0x000007C1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IIC0IBFD_IBC0:      equ    0                                         ; I-Bus Clock Rate 0
IIC0IBFD_IBC1:      equ    1                                         ; I-Bus Clock Rate 1
IIC0IBFD_IBC2:      equ    2                                         ; I-Bus Clock Rate 2
IIC0IBFD_IBC3:      equ    3                                         ; I-Bus Clock Rate 3
IIC0IBFD_IBC4:      equ    4                                         ; I-Bus Clock Rate 4
IIC0IBFD_IBC5:      equ    5                                         ; I-Bus Clock Rate 5
IIC0IBFD_IBC6:      equ    6                                         ; I-Bus Clock Rate 6
IIC0IBFD_IBC7:      equ    7                                         ; I-Bus Clock Rate 7
; bit position masks
mIIC0IBFD_IBC0:     equ    %00000001
mIIC0IBFD_IBC1:     equ    %00000010
mIIC0IBFD_IBC2:     equ    %00000100
mIIC0IBFD_IBC3:     equ    %00001000
mIIC0IBFD_IBC4:     equ    %00010000
mIIC0IBFD_IBC5:     equ    %00100000
mIIC0IBFD_IBC6:     equ    %01000000
mIIC0IBFD_IBC7:     equ    %10000000


;*** IIC0IBCR - IIC Control Register; 0x000007C2 ***
IIC0IBCR:           equ    $000007C2                                ;*** IIC0IBCR - IIC Control Register; 0x000007C2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IIC0IBCR_IBSWAI:    equ    0                                         ; I-Bus Interface Stop in WAIT mode
IIC0IBCR_RSTA:      equ    2                                         ; Repeat Start
IIC0IBCR_TXAK:      equ    3                                         ; Transmit Acknowledge enable
IIC0IBCR_TX_RX:     equ    4                                         ; Transmit/Receive mode select bit
IIC0IBCR_MS_SL:     equ    5                                         ; Master/Slave mode select bit
IIC0IBCR_IBIE:      equ    6                                         ; I-Bus Interrupt Enable
IIC0IBCR_IBEN:      equ    7                                         ; I-Bus Enable
; bit position masks
mIIC0IBCR_IBSWAI:   equ    %00000001
mIIC0IBCR_RSTA:     equ    %00000100
mIIC0IBCR_TXAK:     equ    %00001000
mIIC0IBCR_TX_RX:    equ    %00010000
mIIC0IBCR_MS_SL:    equ    %00100000
mIIC0IBCR_IBIE:     equ    %01000000
mIIC0IBCR_IBEN:     equ    %10000000


;*** IIC0IBSR - IIC Status Register; 0x000007C3 ***
IIC0IBSR:           equ    $000007C3                                ;*** IIC0IBSR - IIC Status Register; 0x000007C3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IIC0IBSR_RXAK:      equ    0                                         ; Received Acknowledge
IIC0IBSR_IBIF:      equ    1                                         ; I-Bus Interrupt
IIC0IBSR_SRW:       equ    2                                         ; Slave Read/Write
IIC0IBSR_IBAL:      equ    4                                         ; Arbitration Lost
IIC0IBSR_IBB:       equ    5                                         ; Bus busy bit
IIC0IBSR_IAAS:      equ    6                                         ; Addressed as a slave bit
IIC0IBSR_TCF:       equ    7                                         ; Data transferring bit
; bit position masks
mIIC0IBSR_RXAK:     equ    %00000001
mIIC0IBSR_IBIF:     equ    %00000010
mIIC0IBSR_SRW:      equ    %00000100
mIIC0IBSR_IBAL:     equ    %00010000
mIIC0IBSR_IBB:      equ    %00100000
mIIC0IBSR_IAAS:     equ    %01000000
mIIC0IBSR_TCF:      equ    %10000000


;*** IIC0IBDR - IIC Data I/O Register; 0x000007C4 ***
IIC0IBDR:           equ    $000007C4                                ;*** IIC0IBDR - IIC Data I/O Register; 0x000007C4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IIC0IBDR_D0:        equ    0                                         ; IIC Data Bit 0
IIC0IBDR_D1:        equ    1                                         ; IIC Data Bit 1
IIC0IBDR_D2:        equ    2                                         ; IIC Data Bit 2
IIC0IBDR_D3:        equ    3                                         ; IIC Data Bit 3
IIC0IBDR_D4:        equ    4                                         ; IIC Data Bit 4
IIC0IBDR_D5:        equ    5                                         ; IIC Data Bit 5
IIC0IBDR_D6:        equ    6                                         ; IIC Data Bit 6
IIC0IBDR_D7:        equ    7                                         ; IIC Data Bit 7
; bit position masks
mIIC0IBDR_D0:       equ    %00000001
mIIC0IBDR_D1:       equ    %00000010
mIIC0IBDR_D2:       equ    %00000100
mIIC0IBDR_D3:       equ    %00001000
mIIC0IBDR_D4:       equ    %00010000
mIIC0IBDR_D5:       equ    %00100000
mIIC0IBDR_D6:       equ    %01000000
mIIC0IBDR_D7:       equ    %10000000


;*** IIC0IBCR2 - IIC Control Register 2; 0x000007C5 ***
IIC0IBCR2:          equ    $000007C5                                ;*** IIC0IBCR2 - IIC Control Register 2; 0x000007C5 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
IIC0IBCR2_ADR8:     equ    0                                         ; Slave Address Bit 8
IIC0IBCR2_ADR9:     equ    1                                         ; Slave Address Bit 9
IIC0IBCR2_ADR10:    equ    2                                         ; Slave Address Bit 10
IIC0IBCR2_ADTYPE:   equ    6                                         ; Address Type
IIC0IBCR2_GCEN:     equ    7                                         ; General Call Enable
; bit position masks
mIIC0IBCR2_ADR8:    equ    %00000001
mIIC0IBCR2_ADR9:    equ    %00000010
mIIC0IBCR2_ADR10:   equ    %00000100
mIIC0IBCR2_ADTYPE:  equ    %01000000
mIIC0IBCR2_GCEN:    equ    %10000000


;*** CAN0CTL0 - MSCAN0 Control 0 Register; 0x00000800 ***
CAN0CTL0:           equ    $00000800                                ;*** CAN0CTL0 - MSCAN0 Control 0 Register; 0x00000800 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0CTL0_INITRQ:    equ    0                                         ; Initialization Mode Request
CAN0CTL0_SLPRQ:     equ    1                                         ; Sleep Mode Request
CAN0CTL0_WUPE:      equ    2                                         ; Wake-Up Enable
CAN0CTL0_TIME:      equ    3                                         ; Timer Enable
CAN0CTL0_SYNCH:     equ    4                                         ; Synchronized Status
CAN0CTL0_CSWAI:     equ    5                                         ; CAN Stops in Wait Mode
CAN0CTL0_RXACT:     equ    6                                         ; Receiver Active Status
CAN0CTL0_RXFRM:     equ    7                                         ; Received Frame Flag
; bit position masks
mCAN0CTL0_INITRQ:   equ    %00000001
mCAN0CTL0_SLPRQ:    equ    %00000010
mCAN0CTL0_WUPE:     equ    %00000100
mCAN0CTL0_TIME:     equ    %00001000
mCAN0CTL0_SYNCH:    equ    %00010000
mCAN0CTL0_CSWAI:    equ    %00100000
mCAN0CTL0_RXACT:    equ    %01000000
mCAN0CTL0_RXFRM:    equ    %10000000


;*** CAN0CTL1 - MSCAN0 Control 1 Register; 0x00000801 ***
CAN0CTL1:           equ    $00000801                                ;*** CAN0CTL1 - MSCAN0 Control 1 Register; 0x00000801 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0CTL1_INITAK:    equ    0                                         ; Initialization Mode Acknowledge
CAN0CTL1_SLPAK:     equ    1                                         ; Sleep Mode Acknowledge
CAN0CTL1_WUPM:      equ    2                                         ; Wake-Up Mode
CAN0CTL1_BORM:      equ    3                                         ; Bus-Off Recovery Mode
CAN0CTL1_LISTEN:    equ    4                                         ; Listen Only Mode
CAN0CTL1_LOOPB:     equ    5                                         ; Loop Back Self Test Mode
CAN0CTL1_CLKSRC:    equ    6                                         ; MSCAN Clock Source
CAN0CTL1_CANE:      equ    7                                         ; MSCAN Enable
; bit position masks
mCAN0CTL1_INITAK:   equ    %00000001
mCAN0CTL1_SLPAK:    equ    %00000010
mCAN0CTL1_WUPM:     equ    %00000100
mCAN0CTL1_BORM:     equ    %00001000
mCAN0CTL1_LISTEN:   equ    %00010000
mCAN0CTL1_LOOPB:    equ    %00100000
mCAN0CTL1_CLKSRC:   equ    %01000000
mCAN0CTL1_CANE:     equ    %10000000


;*** CAN0BTR0 - MSCAN0 Bus Timing Register 0; 0x00000802 ***
CAN0BTR0:           equ    $00000802                                ;*** CAN0BTR0 - MSCAN0 Bus Timing Register 0; 0x00000802 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0BTR0_BRP0:      equ    0                                         ; Baud Rate Prescaler 0
CAN0BTR0_BRP1:      equ    1                                         ; Baud Rate Prescaler 1
CAN0BTR0_BRP2:      equ    2                                         ; Baud Rate Prescaler 2
CAN0BTR0_BRP3:      equ    3                                         ; Baud Rate Prescaler 3
CAN0BTR0_BRP4:      equ    4                                         ; Baud Rate Prescaler 4
CAN0BTR0_BRP5:      equ    5                                         ; Baud Rate Prescaler 5
CAN0BTR0_SJW0:      equ    6                                         ; Synchronization Jump Width 0
CAN0BTR0_SJW1:      equ    7                                         ; Synchronization Jump Width 1
; bit position masks
mCAN0BTR0_BRP0:     equ    %00000001
mCAN0BTR0_BRP1:     equ    %00000010
mCAN0BTR0_BRP2:     equ    %00000100
mCAN0BTR0_BRP3:     equ    %00001000
mCAN0BTR0_BRP4:     equ    %00010000
mCAN0BTR0_BRP5:     equ    %00100000
mCAN0BTR0_SJW0:     equ    %01000000
mCAN0BTR0_SJW1:     equ    %10000000


;*** CAN0BTR1 - MSCAN0 Bus Timing Register 1; 0x00000803 ***
CAN0BTR1:           equ    $00000803                                ;*** CAN0BTR1 - MSCAN0 Bus Timing Register 1; 0x00000803 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0BTR1_TSEG10:    equ    0                                         ; Time Segment 10
CAN0BTR1_TSEG11:    equ    1                                         ; Time Segment 11
CAN0BTR1_TSEG12:    equ    2                                         ; Time Segment 12
CAN0BTR1_TSEG13:    equ    3                                         ; Time Segment 13
CAN0BTR1_TSEG20:    equ    4                                         ; Time Segment 20
CAN0BTR1_TSEG21:    equ    5                                         ; Time Segment 21
CAN0BTR1_TSEG22:    equ    6                                         ; Time Segment 22
CAN0BTR1_SAMP:      equ    7                                         ; Sampling
; bit position masks
mCAN0BTR1_TSEG10:   equ    %00000001
mCAN0BTR1_TSEG11:   equ    %00000010
mCAN0BTR1_TSEG12:   equ    %00000100
mCAN0BTR1_TSEG13:   equ    %00001000
mCAN0BTR1_TSEG20:   equ    %00010000
mCAN0BTR1_TSEG21:   equ    %00100000
mCAN0BTR1_TSEG22:   equ    %01000000
mCAN0BTR1_SAMP:     equ    %10000000


;*** CAN0RFLG - MSCAN0 Receiver Flag Register; 0x00000804 ***
CAN0RFLG:           equ    $00000804                                ;*** CAN0RFLG - MSCAN0 Receiver Flag Register; 0x00000804 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RFLG_RXF:       equ    0                                         ; Receive Buffer Full
CAN0RFLG_OVRIF:     equ    1                                         ; Overrun Interrupt Flag
CAN0RFLG_TSTAT0:    equ    2                                         ; Transmitter Status Bit 0
CAN0RFLG_TSTAT1:    equ    3                                         ; Transmitter Status Bit 1
CAN0RFLG_RSTAT0:    equ    4                                         ; Receiver Status Bit 0
CAN0RFLG_RSTAT1:    equ    5                                         ; Receiver Status Bit 1
CAN0RFLG_CSCIF:     equ    6                                         ; CAN Status Change Interrupt Flag
CAN0RFLG_WUPIF:     equ    7                                         ; Wake-up Interrupt Flag
; bit position masks
mCAN0RFLG_RXF:      equ    %00000001
mCAN0RFLG_OVRIF:    equ    %00000010
mCAN0RFLG_TSTAT0:   equ    %00000100
mCAN0RFLG_TSTAT1:   equ    %00001000
mCAN0RFLG_RSTAT0:   equ    %00010000
mCAN0RFLG_RSTAT1:   equ    %00100000
mCAN0RFLG_CSCIF:    equ    %01000000
mCAN0RFLG_WUPIF:    equ    %10000000


;*** CAN0RIER - MSCAN0 Receiver Interrupt Enable Register; 0x00000805 ***
CAN0RIER:           equ    $00000805                                ;*** CAN0RIER - MSCAN0 Receiver Interrupt Enable Register; 0x00000805 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RIER_RXFIE:     equ    0                                         ; Receiver Full Interrupt Enable
CAN0RIER_OVRIE:     equ    1                                         ; Overrun Interrupt Enable
CAN0RIER_TSTATE0:   equ    2                                         ; Transmitter Status Change Enable 0
CAN0RIER_TSTATE1:   equ    3                                         ; Transmitter Status Change Enable 1
CAN0RIER_RSTATE0:   equ    4                                         ; Receiver Status Change Enable 0
CAN0RIER_RSTATE1:   equ    5                                         ; Receiver Status Change Enable 1
CAN0RIER_CSCIE:     equ    6                                         ; CAN Status Change Interrupt Enable
CAN0RIER_WUPIE:     equ    7                                         ; Wake-up Interrupt Enable
; bit position masks
mCAN0RIER_RXFIE:    equ    %00000001
mCAN0RIER_OVRIE:    equ    %00000010
mCAN0RIER_TSTATE0:  equ    %00000100
mCAN0RIER_TSTATE1:  equ    %00001000
mCAN0RIER_RSTATE0:  equ    %00010000
mCAN0RIER_RSTATE1:  equ    %00100000
mCAN0RIER_CSCIE:    equ    %01000000
mCAN0RIER_WUPIE:    equ    %10000000


;*** CAN0TFLG - MSCAN0 Transmitter Flag Register; 0x00000806 ***
CAN0TFLG:           equ    $00000806                                ;*** CAN0TFLG - MSCAN0 Transmitter Flag Register; 0x00000806 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TFLG_TXE0:      equ    0                                         ; Transmitter Buffer Empty 0
CAN0TFLG_TXE1:      equ    1                                         ; Transmitter Buffer Empty 1
CAN0TFLG_TXE2:      equ    2                                         ; Transmitter Buffer Empty 2
; bit position masks
mCAN0TFLG_TXE0:     equ    %00000001
mCAN0TFLG_TXE1:     equ    %00000010
mCAN0TFLG_TXE2:     equ    %00000100


;*** CAN0TIER - MSCAN0 Transmitter Interrupt Enable Register; 0x00000807 ***
CAN0TIER:           equ    $00000807                                ;*** CAN0TIER - MSCAN0 Transmitter Interrupt Enable Register; 0x00000807 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TIER_TXEIE0:    equ    0                                         ; Transmitter Empty Interrupt Enable 0
CAN0TIER_TXEIE1:    equ    1                                         ; Transmitter Empty Interrupt Enable 1
CAN0TIER_TXEIE2:    equ    2                                         ; Transmitter Empty Interrupt Enable 2
; bit position masks
mCAN0TIER_TXEIE0:   equ    %00000001
mCAN0TIER_TXEIE1:   equ    %00000010
mCAN0TIER_TXEIE2:   equ    %00000100


;*** CAN0TARQ - MSCAN0 Transmitter Message Abort Request; 0x00000808 ***
CAN0TARQ:           equ    $00000808                                ;*** CAN0TARQ - MSCAN0 Transmitter Message Abort Request; 0x00000808 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TARQ_ABTRQ0:    equ    0                                         ; Abort Request 0
CAN0TARQ_ABTRQ1:    equ    1                                         ; Abort Request 1
CAN0TARQ_ABTRQ2:    equ    2                                         ; Abort Request 2
; bit position masks
mCAN0TARQ_ABTRQ0:   equ    %00000001
mCAN0TARQ_ABTRQ1:   equ    %00000010
mCAN0TARQ_ABTRQ2:   equ    %00000100


;*** CAN0TAAK - MSCAN0 Transmitter Message Abort Acknowledge; 0x00000809 ***
CAN0TAAK:           equ    $00000809                                ;*** CAN0TAAK - MSCAN0 Transmitter Message Abort Acknowledge; 0x00000809 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TAAK_ABTAK0:    equ    0                                         ; Abort Acknowledge 0
CAN0TAAK_ABTAK1:    equ    1                                         ; Abort Acknowledge 1
CAN0TAAK_ABTAK2:    equ    2                                         ; Abort Acknowledge 2
; bit position masks
mCAN0TAAK_ABTAK0:   equ    %00000001
mCAN0TAAK_ABTAK1:   equ    %00000010
mCAN0TAAK_ABTAK2:   equ    %00000100


;*** CAN0TBSEL - MSCAN0 Transmit Buffer Selection; 0x0000080A ***
CAN0TBSEL:          equ    $0000080A                                ;*** CAN0TBSEL - MSCAN0 Transmit Buffer Selection; 0x0000080A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TBSEL_TX0:      equ    0                                         ; Transmit Buffer Select 0
CAN0TBSEL_TX1:      equ    1                                         ; Transmit Buffer Select 1
CAN0TBSEL_TX2:      equ    2                                         ; Transmit Buffer Select 2
; bit position masks
mCAN0TBSEL_TX0:     equ    %00000001
mCAN0TBSEL_TX1:     equ    %00000010
mCAN0TBSEL_TX2:     equ    %00000100


;*** CAN0IDAC - MSCAN0 Identifier Acceptance Control Register; 0x0000080B ***
CAN0IDAC:           equ    $0000080B                                ;*** CAN0IDAC - MSCAN0 Identifier Acceptance Control Register; 0x0000080B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAC_IDHIT0:    equ    0                                         ; Identifier Acceptance Hit Indicator 0
CAN0IDAC_IDHIT1:    equ    1                                         ; Identifier Acceptance Hit Indicator 1
CAN0IDAC_IDHIT2:    equ    2                                         ; Identifier Acceptance Hit Indicator 2
CAN0IDAC_IDAM:      equ    4                                         ; Identifier Acceptance Mode
; bit position masks
mCAN0IDAC_IDHIT0:   equ    %00000001
mCAN0IDAC_IDHIT1:   equ    %00000010
mCAN0IDAC_IDHIT2:   equ    %00000100
mCAN0IDAC_IDAM:     equ    %00110000


;*** CAN0MISC - MSCAN0 Miscellaneous Register; 0x0000080D ***
CAN0MISC:           equ    $0000080D                                ;*** CAN0MISC - MSCAN0 Miscellaneous Register; 0x0000080D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0MISC_BOHOLD:    equ    0                                         ; Bus-off State Hold Until User Request
; bit position masks
mCAN0MISC_BOHOLD:   equ    %00000001


;*** CAN0RXERR - MSCAN0 Receive Error Counter Register; 0x0000080E ***
CAN0RXERR:          equ    $0000080E                                ;*** CAN0RXERR - MSCAN0 Receive Error Counter Register; 0x0000080E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXERR_RXERR0:   equ    0                                         ; Bit 0
CAN0RXERR_RXERR1:   equ    1                                         ; Bit 1
CAN0RXERR_RXERR2:   equ    2                                         ; Bit 2
CAN0RXERR_RXERR3:   equ    3                                         ; Bit 3
CAN0RXERR_RXERR4:   equ    4                                         ; Bit 4
CAN0RXERR_RXERR5:   equ    5                                         ; Bit 5
CAN0RXERR_RXERR6:   equ    6                                         ; Bit 6
CAN0RXERR_RXERR7:   equ    7                                         ; Bit 7
; bit position masks
mCAN0RXERR_RXERR0:  equ    %00000001
mCAN0RXERR_RXERR1:  equ    %00000010
mCAN0RXERR_RXERR2:  equ    %00000100
mCAN0RXERR_RXERR3:  equ    %00001000
mCAN0RXERR_RXERR4:  equ    %00010000
mCAN0RXERR_RXERR5:  equ    %00100000
mCAN0RXERR_RXERR6:  equ    %01000000
mCAN0RXERR_RXERR7:  equ    %10000000


;*** CAN0TXERR - MSCAN0 Transmit Error Counter Register; 0x0000080F ***
CAN0TXERR:          equ    $0000080F                                ;*** CAN0TXERR - MSCAN0 Transmit Error Counter Register; 0x0000080F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXERR_TXERR0:   equ    0                                         ; Bit 0
CAN0TXERR_TXERR1:   equ    1                                         ; Bit 1
CAN0TXERR_TXERR2:   equ    2                                         ; Bit 2
CAN0TXERR_TXERR3:   equ    3                                         ; Bit 3
CAN0TXERR_TXERR4:   equ    4                                         ; Bit 4
CAN0TXERR_TXERR5:   equ    5                                         ; Bit 5
CAN0TXERR_TXERR6:   equ    6                                         ; Bit 6
CAN0TXERR_TXERR7:   equ    7                                         ; Bit 7
; bit position masks
mCAN0TXERR_TXERR0:  equ    %00000001
mCAN0TXERR_TXERR1:  equ    %00000010
mCAN0TXERR_TXERR2:  equ    %00000100
mCAN0TXERR_TXERR3:  equ    %00001000
mCAN0TXERR_TXERR4:  equ    %00010000
mCAN0TXERR_TXERR5:  equ    %00100000
mCAN0TXERR_TXERR6:  equ    %01000000
mCAN0TXERR_TXERR7:  equ    %10000000


;*** CAN0IDAR0 - MSCAN0 Identifier Acceptance Register 0; 0x00000810 ***
CAN0IDAR0:          equ    $00000810                                ;*** CAN0IDAR0 - MSCAN0 Identifier Acceptance Register 0; 0x00000810 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR0_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR0_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR0_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR0_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR0_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR0_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR0_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR0_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR0_AC0:     equ    %00000001
mCAN0IDAR0_AC1:     equ    %00000010
mCAN0IDAR0_AC2:     equ    %00000100
mCAN0IDAR0_AC3:     equ    %00001000
mCAN0IDAR0_AC4:     equ    %00010000
mCAN0IDAR0_AC5:     equ    %00100000
mCAN0IDAR0_AC6:     equ    %01000000
mCAN0IDAR0_AC7:     equ    %10000000


;*** CAN0IDAR1 - MSCAN0 Identifier Acceptance Register 1; 0x00000811 ***
CAN0IDAR1:          equ    $00000811                                ;*** CAN0IDAR1 - MSCAN0 Identifier Acceptance Register 1; 0x00000811 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR1_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR1_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR1_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR1_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR1_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR1_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR1_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR1_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR1_AC0:     equ    %00000001
mCAN0IDAR1_AC1:     equ    %00000010
mCAN0IDAR1_AC2:     equ    %00000100
mCAN0IDAR1_AC3:     equ    %00001000
mCAN0IDAR1_AC4:     equ    %00010000
mCAN0IDAR1_AC5:     equ    %00100000
mCAN0IDAR1_AC6:     equ    %01000000
mCAN0IDAR1_AC7:     equ    %10000000


;*** CAN0IDAR2 - MSCAN0 Identifier Acceptance Register 2; 0x00000812 ***
CAN0IDAR2:          equ    $00000812                                ;*** CAN0IDAR2 - MSCAN0 Identifier Acceptance Register 2; 0x00000812 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR2_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR2_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR2_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR2_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR2_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR2_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR2_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR2_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR2_AC0:     equ    %00000001
mCAN0IDAR2_AC1:     equ    %00000010
mCAN0IDAR2_AC2:     equ    %00000100
mCAN0IDAR2_AC3:     equ    %00001000
mCAN0IDAR2_AC4:     equ    %00010000
mCAN0IDAR2_AC5:     equ    %00100000
mCAN0IDAR2_AC6:     equ    %01000000
mCAN0IDAR2_AC7:     equ    %10000000


;*** CAN0IDAR3 - MSCAN0 Identifier Acceptance Register 3; 0x00000813 ***
CAN0IDAR3:          equ    $00000813                                ;*** CAN0IDAR3 - MSCAN0 Identifier Acceptance Register 3; 0x00000813 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR3_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR3_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR3_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR3_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR3_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR3_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR3_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR3_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR3_AC0:     equ    %00000001
mCAN0IDAR3_AC1:     equ    %00000010
mCAN0IDAR3_AC2:     equ    %00000100
mCAN0IDAR3_AC3:     equ    %00001000
mCAN0IDAR3_AC4:     equ    %00010000
mCAN0IDAR3_AC5:     equ    %00100000
mCAN0IDAR3_AC6:     equ    %01000000
mCAN0IDAR3_AC7:     equ    %10000000


;*** CAN0IDMR0 - MSCAN0 Identifier Mask Register 0; 0x00000814 ***
CAN0IDMR0:          equ    $00000814                                ;*** CAN0IDMR0 - MSCAN0 Identifier Mask Register 0; 0x00000814 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR0_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR0_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR0_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR0_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR0_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR0_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR0_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR0_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR0_AM0:     equ    %00000001
mCAN0IDMR0_AM1:     equ    %00000010
mCAN0IDMR0_AM2:     equ    %00000100
mCAN0IDMR0_AM3:     equ    %00001000
mCAN0IDMR0_AM4:     equ    %00010000
mCAN0IDMR0_AM5:     equ    %00100000
mCAN0IDMR0_AM6:     equ    %01000000
mCAN0IDMR0_AM7:     equ    %10000000


;*** CAN0IDMR1 - MSCAN0 Identifier Mask Register 1; 0x00000815 ***
CAN0IDMR1:          equ    $00000815                                ;*** CAN0IDMR1 - MSCAN0 Identifier Mask Register 1; 0x00000815 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR1_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR1_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR1_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR1_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR1_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR1_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR1_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR1_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR1_AM0:     equ    %00000001
mCAN0IDMR1_AM1:     equ    %00000010
mCAN0IDMR1_AM2:     equ    %00000100
mCAN0IDMR1_AM3:     equ    %00001000
mCAN0IDMR1_AM4:     equ    %00010000
mCAN0IDMR1_AM5:     equ    %00100000
mCAN0IDMR1_AM6:     equ    %01000000
mCAN0IDMR1_AM7:     equ    %10000000


;*** CAN0IDMR2 - MSCAN0 Identifier Mask Register 2; 0x00000816 ***
CAN0IDMR2:          equ    $00000816                                ;*** CAN0IDMR2 - MSCAN0 Identifier Mask Register 2; 0x00000816 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR2_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR2_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR2_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR2_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR2_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR2_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR2_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR2_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR2_AM0:     equ    %00000001
mCAN0IDMR2_AM1:     equ    %00000010
mCAN0IDMR2_AM2:     equ    %00000100
mCAN0IDMR2_AM3:     equ    %00001000
mCAN0IDMR2_AM4:     equ    %00010000
mCAN0IDMR2_AM5:     equ    %00100000
mCAN0IDMR2_AM6:     equ    %01000000
mCAN0IDMR2_AM7:     equ    %10000000


;*** CAN0IDMR3 - MSCAN0 Identifier Mask Register 3; 0x00000817 ***
CAN0IDMR3:          equ    $00000817                                ;*** CAN0IDMR3 - MSCAN0 Identifier Mask Register 3; 0x00000817 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR3_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR3_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR3_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR3_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR3_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR3_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR3_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR3_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR3_AM0:     equ    %00000001
mCAN0IDMR3_AM1:     equ    %00000010
mCAN0IDMR3_AM2:     equ    %00000100
mCAN0IDMR3_AM3:     equ    %00001000
mCAN0IDMR3_AM4:     equ    %00010000
mCAN0IDMR3_AM5:     equ    %00100000
mCAN0IDMR3_AM6:     equ    %01000000
mCAN0IDMR3_AM7:     equ    %10000000


;*** CAN0IDAR4 - MSCAN0 Identifier Acceptance Register 4; 0x00000818 ***
CAN0IDAR4:          equ    $00000818                                ;*** CAN0IDAR4 - MSCAN0 Identifier Acceptance Register 4; 0x00000818 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR4_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR4_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR4_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR4_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR4_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR4_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR4_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR4_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR4_AC0:     equ    %00000001
mCAN0IDAR4_AC1:     equ    %00000010
mCAN0IDAR4_AC2:     equ    %00000100
mCAN0IDAR4_AC3:     equ    %00001000
mCAN0IDAR4_AC4:     equ    %00010000
mCAN0IDAR4_AC5:     equ    %00100000
mCAN0IDAR4_AC6:     equ    %01000000
mCAN0IDAR4_AC7:     equ    %10000000


;*** CAN0IDAR5 - MSCAN0 Identifier Acceptance Register 5; 0x00000819 ***
CAN0IDAR5:          equ    $00000819                                ;*** CAN0IDAR5 - MSCAN0 Identifier Acceptance Register 5; 0x00000819 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR5_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR5_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR5_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR5_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR5_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR5_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR5_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR5_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR5_AC0:     equ    %00000001
mCAN0IDAR5_AC1:     equ    %00000010
mCAN0IDAR5_AC2:     equ    %00000100
mCAN0IDAR5_AC3:     equ    %00001000
mCAN0IDAR5_AC4:     equ    %00010000
mCAN0IDAR5_AC5:     equ    %00100000
mCAN0IDAR5_AC6:     equ    %01000000
mCAN0IDAR5_AC7:     equ    %10000000


;*** CAN0IDAR6 - MSCAN0 Identifier Acceptance Register 6; 0x0000081A ***
CAN0IDAR6:          equ    $0000081A                                ;*** CAN0IDAR6 - MSCAN0 Identifier Acceptance Register 6; 0x0000081A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR6_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR6_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR6_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR6_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR6_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR6_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR6_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR6_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR6_AC0:     equ    %00000001
mCAN0IDAR6_AC1:     equ    %00000010
mCAN0IDAR6_AC2:     equ    %00000100
mCAN0IDAR6_AC3:     equ    %00001000
mCAN0IDAR6_AC4:     equ    %00010000
mCAN0IDAR6_AC5:     equ    %00100000
mCAN0IDAR6_AC6:     equ    %01000000
mCAN0IDAR6_AC7:     equ    %10000000


;*** CAN0IDAR7 - MSCAN0 Identifier Acceptance Register 7; 0x0000081B ***
CAN0IDAR7:          equ    $0000081B                                ;*** CAN0IDAR7 - MSCAN0 Identifier Acceptance Register 7; 0x0000081B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDAR7_AC0:      equ    0                                         ; Acceptance Code Bit 0
CAN0IDAR7_AC1:      equ    1                                         ; Acceptance Code Bit 1
CAN0IDAR7_AC2:      equ    2                                         ; Acceptance Code Bit 2
CAN0IDAR7_AC3:      equ    3                                         ; Acceptance Code Bit 3
CAN0IDAR7_AC4:      equ    4                                         ; Acceptance Code Bit 4
CAN0IDAR7_AC5:      equ    5                                         ; Acceptance Code Bit 5
CAN0IDAR7_AC6:      equ    6                                         ; Acceptance Code Bit 6
CAN0IDAR7_AC7:      equ    7                                         ; Acceptance Code Bit 7
; bit position masks
mCAN0IDAR7_AC0:     equ    %00000001
mCAN0IDAR7_AC1:     equ    %00000010
mCAN0IDAR7_AC2:     equ    %00000100
mCAN0IDAR7_AC3:     equ    %00001000
mCAN0IDAR7_AC4:     equ    %00010000
mCAN0IDAR7_AC5:     equ    %00100000
mCAN0IDAR7_AC6:     equ    %01000000
mCAN0IDAR7_AC7:     equ    %10000000


;*** CAN0IDMR4 - MSCAN0 Identifier Mask Register 4; 0x0000081C ***
CAN0IDMR4:          equ    $0000081C                                ;*** CAN0IDMR4 - MSCAN0 Identifier Mask Register 4; 0x0000081C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR4_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR4_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR4_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR4_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR4_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR4_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR4_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR4_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR4_AM0:     equ    %00000001
mCAN0IDMR4_AM1:     equ    %00000010
mCAN0IDMR4_AM2:     equ    %00000100
mCAN0IDMR4_AM3:     equ    %00001000
mCAN0IDMR4_AM4:     equ    %00010000
mCAN0IDMR4_AM5:     equ    %00100000
mCAN0IDMR4_AM6:     equ    %01000000
mCAN0IDMR4_AM7:     equ    %10000000


;*** CAN0IDMR5 - MSCAN0 Identifier Mask Register 5; 0x0000081D ***
CAN0IDMR5:          equ    $0000081D                                ;*** CAN0IDMR5 - MSCAN0 Identifier Mask Register 5; 0x0000081D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR5_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR5_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR5_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR5_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR5_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR5_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR5_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR5_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR5_AM0:     equ    %00000001
mCAN0IDMR5_AM1:     equ    %00000010
mCAN0IDMR5_AM2:     equ    %00000100
mCAN0IDMR5_AM3:     equ    %00001000
mCAN0IDMR5_AM4:     equ    %00010000
mCAN0IDMR5_AM5:     equ    %00100000
mCAN0IDMR5_AM6:     equ    %01000000
mCAN0IDMR5_AM7:     equ    %10000000


;*** CAN0IDMR6 - MSCAN0 Identifier Mask Register 6; 0x0000081E ***
CAN0IDMR6:          equ    $0000081E                                ;*** CAN0IDMR6 - MSCAN0 Identifier Mask Register 6; 0x0000081E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR6_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR6_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR6_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR6_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR6_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR6_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR6_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR6_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR6_AM0:     equ    %00000001
mCAN0IDMR6_AM1:     equ    %00000010
mCAN0IDMR6_AM2:     equ    %00000100
mCAN0IDMR6_AM3:     equ    %00001000
mCAN0IDMR6_AM4:     equ    %00010000
mCAN0IDMR6_AM5:     equ    %00100000
mCAN0IDMR6_AM6:     equ    %01000000
mCAN0IDMR6_AM7:     equ    %10000000


;*** CAN0IDMR7 - MSCAN0 Identifier Mask Register 7; 0x0000081F ***
CAN0IDMR7:          equ    $0000081F                                ;*** CAN0IDMR7 - MSCAN0 Identifier Mask Register 7; 0x0000081F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0IDMR7_AM0:      equ    0                                         ; Acceptance Mask Bit 0
CAN0IDMR7_AM1:      equ    1                                         ; Acceptance Mask Bit 1
CAN0IDMR7_AM2:      equ    2                                         ; Acceptance Mask Bit 2
CAN0IDMR7_AM3:      equ    3                                         ; Acceptance Mask Bit 3
CAN0IDMR7_AM4:      equ    4                                         ; Acceptance Mask Bit 4
CAN0IDMR7_AM5:      equ    5                                         ; Acceptance Mask Bit 5
CAN0IDMR7_AM6:      equ    6                                         ; Acceptance Mask Bit 6
CAN0IDMR7_AM7:      equ    7                                         ; Acceptance Mask Bit 7
; bit position masks
mCAN0IDMR7_AM0:     equ    %00000001
mCAN0IDMR7_AM1:     equ    %00000010
mCAN0IDMR7_AM2:     equ    %00000100
mCAN0IDMR7_AM3:     equ    %00001000
mCAN0IDMR7_AM4:     equ    %00010000
mCAN0IDMR7_AM5:     equ    %00100000
mCAN0IDMR7_AM6:     equ    %01000000
mCAN0IDMR7_AM7:     equ    %10000000


;*** CAN0RXIDR0 - MSCAN0 Receive Identifier Register 0; 0x00000820 ***
CAN0RXIDR0:         equ    $00000820                                ;*** CAN0RXIDR0 - MSCAN0 Receive Identifier Register 0; 0x00000820 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXIDR0_ID21:    equ    0                                         ; Extended format identifier Bit 21
CAN0RXIDR0_ID22:    equ    1                                         ; Extended format identifier Bit 22
CAN0RXIDR0_ID23:    equ    2                                         ; Extended format identifier Bit 23
CAN0RXIDR0_ID24:    equ    3                                         ; Extended format identifier Bit 24
CAN0RXIDR0_ID25:    equ    4                                         ; Extended format identifier Bit 25
CAN0RXIDR0_ID26:    equ    5                                         ; Extended format identifier Bit 26
CAN0RXIDR0_ID27:    equ    6                                         ; Extended format identifier Bit 27
CAN0RXIDR0_ID28:    equ    7                                         ; Extended format identifier Bit 28
; bit position masks
mCAN0RXIDR0_ID21:   equ    %00000001
mCAN0RXIDR0_ID22:   equ    %00000010
mCAN0RXIDR0_ID23:   equ    %00000100
mCAN0RXIDR0_ID24:   equ    %00001000
mCAN0RXIDR0_ID25:   equ    %00010000
mCAN0RXIDR0_ID26:   equ    %00100000
mCAN0RXIDR0_ID27:   equ    %01000000
mCAN0RXIDR0_ID28:   equ    %10000000


;*** CAN0RXIDR1 - MSCAN0 Receive Identifier Register 1; 0x00000821 ***
CAN0RXIDR1:         equ    $00000821                                ;*** CAN0RXIDR1 - MSCAN0 Receive Identifier Register 1; 0x00000821 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXIDR1_ID15:    equ    0                                         ; Extended format identifier Bit 15
CAN0RXIDR1_ID16:    equ    1                                         ; Extended format identifier Bit 16
CAN0RXIDR1_ID17:    equ    2                                         ; Extended format identifier Bit 17
CAN0RXIDR1_IDE:     equ    3                                         ; ID Extended
CAN0RXIDR1_SRR:     equ    4                                         ; Substitute Remote Request
CAN0RXIDR1_ID18:    equ    5                                         ; Extended format identifier Bit 18
CAN0RXIDR1_ID19:    equ    6                                         ; Extended format identifier Bit 19
CAN0RXIDR1_ID20:    equ    7                                         ; Extended format identifier Bit 20
; bit position masks
mCAN0RXIDR1_ID15:   equ    %00000001
mCAN0RXIDR1_ID16:   equ    %00000010
mCAN0RXIDR1_ID17:   equ    %00000100
mCAN0RXIDR1_IDE:    equ    %00001000
mCAN0RXIDR1_SRR:    equ    %00010000
mCAN0RXIDR1_ID18:   equ    %00100000
mCAN0RXIDR1_ID19:   equ    %01000000
mCAN0RXIDR1_ID20:   equ    %10000000


;*** CAN0RXIDR2 - MSCAN0 Receive Identifier Register 2; 0x00000822 ***
CAN0RXIDR2:         equ    $00000822                                ;*** CAN0RXIDR2 - MSCAN0 Receive Identifier Register 2; 0x00000822 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXIDR2_ID7:     equ    0                                         ; Extended format identifier Bit 7
CAN0RXIDR2_ID8:     equ    1                                         ; Extended format identifier Bit 8
CAN0RXIDR2_ID9:     equ    2                                         ; Extended format identifier Bit 9
CAN0RXIDR2_ID10:    equ    3                                         ; Extended format identifier Bit 10
CAN0RXIDR2_ID11:    equ    4                                         ; Extended format identifier Bit 11
CAN0RXIDR2_ID12:    equ    5                                         ; Extended format identifier Bit 12
CAN0RXIDR2_ID13:    equ    6                                         ; Extended format identifier Bit 13
CAN0RXIDR2_ID14:    equ    7                                         ; Extended format identifier Bit 14
; bit position masks
mCAN0RXIDR2_ID7:    equ    %00000001
mCAN0RXIDR2_ID8:    equ    %00000010
mCAN0RXIDR2_ID9:    equ    %00000100
mCAN0RXIDR2_ID10:   equ    %00001000
mCAN0RXIDR2_ID11:   equ    %00010000
mCAN0RXIDR2_ID12:   equ    %00100000
mCAN0RXIDR2_ID13:   equ    %01000000
mCAN0RXIDR2_ID14:   equ    %10000000


;*** CAN0RXIDR3 - MSCAN0 Receive Identifier Register 3; 0x00000823 ***
CAN0RXIDR3:         equ    $00000823                                ;*** CAN0RXIDR3 - MSCAN0 Receive Identifier Register 3; 0x00000823 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXIDR3_RTR:     equ    0                                         ; Remote Transmission Request
CAN0RXIDR3_ID0:     equ    1                                         ; Extended format identifier Bit 0
CAN0RXIDR3_ID1:     equ    2                                         ; Extended format identifier Bit 1
CAN0RXIDR3_ID2:     equ    3                                         ; Extended format identifier Bit 2
CAN0RXIDR3_ID3:     equ    4                                         ; Extended format identifier Bit 3
CAN0RXIDR3_ID4:     equ    5                                         ; Extended format identifier Bit 4
CAN0RXIDR3_ID5:     equ    6                                         ; Extended format identifier Bit 5
CAN0RXIDR3_ID6:     equ    7                                         ; Extended format identifier Bit 6
; bit position masks
mCAN0RXIDR3_RTR:    equ    %00000001
mCAN0RXIDR3_ID0:    equ    %00000010
mCAN0RXIDR3_ID1:    equ    %00000100
mCAN0RXIDR3_ID2:    equ    %00001000
mCAN0RXIDR3_ID3:    equ    %00010000
mCAN0RXIDR3_ID4:    equ    %00100000
mCAN0RXIDR3_ID5:    equ    %01000000
mCAN0RXIDR3_ID6:    equ    %10000000


;*** CAN0RXDSR0 - MSCAN0 Receive Data Segment Register 0; 0x00000824 ***
CAN0RXDSR0:         equ    $00000824                                ;*** CAN0RXDSR0 - MSCAN0 Receive Data Segment Register 0; 0x00000824 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR0_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR0_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR0_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR0_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR0_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR0_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR0_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR0_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR0_DB0:    equ    %00000001
mCAN0RXDSR0_DB1:    equ    %00000010
mCAN0RXDSR0_DB2:    equ    %00000100
mCAN0RXDSR0_DB3:    equ    %00001000
mCAN0RXDSR0_DB4:    equ    %00010000
mCAN0RXDSR0_DB5:    equ    %00100000
mCAN0RXDSR0_DB6:    equ    %01000000
mCAN0RXDSR0_DB7:    equ    %10000000


;*** CAN0RXDSR1 - MSCAN0 Receive Data Segment Register 1; 0x00000825 ***
CAN0RXDSR1:         equ    $00000825                                ;*** CAN0RXDSR1 - MSCAN0 Receive Data Segment Register 1; 0x00000825 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR1_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR1_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR1_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR1_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR1_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR1_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR1_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR1_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR1_DB0:    equ    %00000001
mCAN0RXDSR1_DB1:    equ    %00000010
mCAN0RXDSR1_DB2:    equ    %00000100
mCAN0RXDSR1_DB3:    equ    %00001000
mCAN0RXDSR1_DB4:    equ    %00010000
mCAN0RXDSR1_DB5:    equ    %00100000
mCAN0RXDSR1_DB6:    equ    %01000000
mCAN0RXDSR1_DB7:    equ    %10000000


;*** CAN0RXDSR2 - MSCAN0 Receive Data Segment Register 2; 0x00000826 ***
CAN0RXDSR2:         equ    $00000826                                ;*** CAN0RXDSR2 - MSCAN0 Receive Data Segment Register 2; 0x00000826 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR2_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR2_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR2_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR2_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR2_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR2_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR2_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR2_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR2_DB0:    equ    %00000001
mCAN0RXDSR2_DB1:    equ    %00000010
mCAN0RXDSR2_DB2:    equ    %00000100
mCAN0RXDSR2_DB3:    equ    %00001000
mCAN0RXDSR2_DB4:    equ    %00010000
mCAN0RXDSR2_DB5:    equ    %00100000
mCAN0RXDSR2_DB6:    equ    %01000000
mCAN0RXDSR2_DB7:    equ    %10000000


;*** CAN0RXDSR3 - MSCAN0 Receive Data Segment Register 3; 0x00000827 ***
CAN0RXDSR3:         equ    $00000827                                ;*** CAN0RXDSR3 - MSCAN0 Receive Data Segment Register 3; 0x00000827 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR3_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR3_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR3_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR3_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR3_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR3_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR3_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR3_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR3_DB0:    equ    %00000001
mCAN0RXDSR3_DB1:    equ    %00000010
mCAN0RXDSR3_DB2:    equ    %00000100
mCAN0RXDSR3_DB3:    equ    %00001000
mCAN0RXDSR3_DB4:    equ    %00010000
mCAN0RXDSR3_DB5:    equ    %00100000
mCAN0RXDSR3_DB6:    equ    %01000000
mCAN0RXDSR3_DB7:    equ    %10000000


;*** CAN0RXDSR4 - MSCAN0 Receive Data Segment Register 4; 0x00000828 ***
CAN0RXDSR4:         equ    $00000828                                ;*** CAN0RXDSR4 - MSCAN0 Receive Data Segment Register 4; 0x00000828 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR4_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR4_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR4_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR4_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR4_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR4_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR4_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR4_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR4_DB0:    equ    %00000001
mCAN0RXDSR4_DB1:    equ    %00000010
mCAN0RXDSR4_DB2:    equ    %00000100
mCAN0RXDSR4_DB3:    equ    %00001000
mCAN0RXDSR4_DB4:    equ    %00010000
mCAN0RXDSR4_DB5:    equ    %00100000
mCAN0RXDSR4_DB6:    equ    %01000000
mCAN0RXDSR4_DB7:    equ    %10000000


;*** CAN0RXDSR5 - MSCAN0 Receive Data Segment Register 5; 0x00000829 ***
CAN0RXDSR5:         equ    $00000829                                ;*** CAN0RXDSR5 - MSCAN0 Receive Data Segment Register 5; 0x00000829 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR5_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR5_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR5_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR5_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR5_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR5_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR5_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR5_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR5_DB0:    equ    %00000001
mCAN0RXDSR5_DB1:    equ    %00000010
mCAN0RXDSR5_DB2:    equ    %00000100
mCAN0RXDSR5_DB3:    equ    %00001000
mCAN0RXDSR5_DB4:    equ    %00010000
mCAN0RXDSR5_DB5:    equ    %00100000
mCAN0RXDSR5_DB6:    equ    %01000000
mCAN0RXDSR5_DB7:    equ    %10000000


;*** CAN0RXDSR6 - MSCAN0 Receive Data Segment Register 6; 0x0000082A ***
CAN0RXDSR6:         equ    $0000082A                                ;*** CAN0RXDSR6 - MSCAN0 Receive Data Segment Register 6; 0x0000082A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR6_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR6_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR6_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR6_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR6_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR6_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR6_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR6_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR6_DB0:    equ    %00000001
mCAN0RXDSR6_DB1:    equ    %00000010
mCAN0RXDSR6_DB2:    equ    %00000100
mCAN0RXDSR6_DB3:    equ    %00001000
mCAN0RXDSR6_DB4:    equ    %00010000
mCAN0RXDSR6_DB5:    equ    %00100000
mCAN0RXDSR6_DB6:    equ    %01000000
mCAN0RXDSR6_DB7:    equ    %10000000


;*** CAN0RXDSR7 - MSCAN0 Receive Data Segment Register 7; 0x0000082B ***
CAN0RXDSR7:         equ    $0000082B                                ;*** CAN0RXDSR7 - MSCAN0 Receive Data Segment Register 7; 0x0000082B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDSR7_DB0:     equ    0                                         ; Data Bit 0
CAN0RXDSR7_DB1:     equ    1                                         ; Data Bit 1
CAN0RXDSR7_DB2:     equ    2                                         ; Data Bit 2
CAN0RXDSR7_DB3:     equ    3                                         ; Data Bit 3
CAN0RXDSR7_DB4:     equ    4                                         ; Data Bit 4
CAN0RXDSR7_DB5:     equ    5                                         ; Data Bit 5
CAN0RXDSR7_DB6:     equ    6                                         ; Data Bit 6
CAN0RXDSR7_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0RXDSR7_DB0:    equ    %00000001
mCAN0RXDSR7_DB1:    equ    %00000010
mCAN0RXDSR7_DB2:    equ    %00000100
mCAN0RXDSR7_DB3:    equ    %00001000
mCAN0RXDSR7_DB4:    equ    %00010000
mCAN0RXDSR7_DB5:    equ    %00100000
mCAN0RXDSR7_DB6:    equ    %01000000
mCAN0RXDSR7_DB7:    equ    %10000000


;*** CAN0RXDLR - MSCAN0 Receive Data Length Register; 0x0000082C ***
CAN0RXDLR:          equ    $0000082C                                ;*** CAN0RXDLR - MSCAN0 Receive Data Length Register; 0x0000082C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXDLR_DLC0:     equ    0                                         ; Data Length Code Bit 0
CAN0RXDLR_DLC1:     equ    1                                         ; Data Length Code Bit 1
CAN0RXDLR_DLC2:     equ    2                                         ; Data Length Code Bit 2
CAN0RXDLR_DLC3:     equ    3                                         ; Data Length Code Bit 3
; bit position masks
mCAN0RXDLR_DLC0:    equ    %00000001
mCAN0RXDLR_DLC1:    equ    %00000010
mCAN0RXDLR_DLC2:    equ    %00000100
mCAN0RXDLR_DLC3:    equ    %00001000


;*** CAN0RXTSR - MSCAN0 Receive Time Stamp Register; 0x0000082E ***
CAN0RXTSR:          equ    $0000082E                                ;*** CAN0RXTSR - MSCAN0 Receive Time Stamp Register; 0x0000082E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXTSR_TSR0:     equ    0                                         ; Time Stamp Bit 0
CAN0RXTSR_TSR1:     equ    1                                         ; Time Stamp Bit 1
CAN0RXTSR_TSR2:     equ    2                                         ; Time Stamp Bit 2
CAN0RXTSR_TSR3:     equ    3                                         ; Time Stamp Bit 3
CAN0RXTSR_TSR4:     equ    4                                         ; Time Stamp Bit 4
CAN0RXTSR_TSR5:     equ    5                                         ; Time Stamp Bit 5
CAN0RXTSR_TSR6:     equ    6                                         ; Time Stamp Bit 6
CAN0RXTSR_TSR7:     equ    7                                         ; Time Stamp Bit 7
CAN0RXTSR_TSR8:     equ    8                                         ; Time Stamp Bit 8
CAN0RXTSR_TSR9:     equ    9                                         ; Time Stamp Bit 9
CAN0RXTSR_TSR10:    equ    10                                        ; Time Stamp Bit 10
CAN0RXTSR_TSR11:    equ    11                                        ; Time Stamp Bit 11
CAN0RXTSR_TSR12:    equ    12                                        ; Time Stamp Bit 12
CAN0RXTSR_TSR13:    equ    13                                        ; Time Stamp Bit 13
CAN0RXTSR_TSR14:    equ    14                                        ; Time Stamp Bit 14
CAN0RXTSR_TSR15:    equ    15                                        ; Time Stamp Bit 15
; bit position masks
mCAN0RXTSR_TSR0:    equ    %00000001
mCAN0RXTSR_TSR1:    equ    %00000010
mCAN0RXTSR_TSR2:    equ    %00000100
mCAN0RXTSR_TSR3:    equ    %00001000
mCAN0RXTSR_TSR4:    equ    %00010000
mCAN0RXTSR_TSR5:    equ    %00100000
mCAN0RXTSR_TSR6:    equ    %01000000
mCAN0RXTSR_TSR7:    equ    %10000000
mCAN0RXTSR_TSR8:    equ    %100000000
mCAN0RXTSR_TSR9:    equ    %1000000000
mCAN0RXTSR_TSR10:   equ    %10000000000
mCAN0RXTSR_TSR11:   equ    %100000000000
mCAN0RXTSR_TSR12:   equ    %1000000000000
mCAN0RXTSR_TSR13:   equ    %10000000000000
mCAN0RXTSR_TSR14:   equ    %100000000000000
mCAN0RXTSR_TSR15:   equ    %1000000000000000


;*** CAN0RXTSRH - MSCAN0 Receive Time Stamp Register High; 0x0000082E ***
CAN0RXTSRH:         equ    $0000082E                                ;*** CAN0RXTSRH - MSCAN0 Receive Time Stamp Register High; 0x0000082E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXTSRH_TSR8:    equ    0                                         ; Time Stamp Bit 8
CAN0RXTSRH_TSR9:    equ    1                                         ; Time Stamp Bit 9
CAN0RXTSRH_TSR10:   equ    2                                         ; Time Stamp Bit 10
CAN0RXTSRH_TSR11:   equ    3                                         ; Time Stamp Bit 11
CAN0RXTSRH_TSR12:   equ    4                                         ; Time Stamp Bit 12
CAN0RXTSRH_TSR13:   equ    5                                         ; Time Stamp Bit 13
CAN0RXTSRH_TSR14:   equ    6                                         ; Time Stamp Bit 14
CAN0RXTSRH_TSR15:   equ    7                                         ; Time Stamp Bit 15
; bit position masks
mCAN0RXTSRH_TSR8:   equ    %00000001
mCAN0RXTSRH_TSR9:   equ    %00000010
mCAN0RXTSRH_TSR10:  equ    %00000100
mCAN0RXTSRH_TSR11:  equ    %00001000
mCAN0RXTSRH_TSR12:  equ    %00010000
mCAN0RXTSRH_TSR13:  equ    %00100000
mCAN0RXTSRH_TSR14:  equ    %01000000
mCAN0RXTSRH_TSR15:  equ    %10000000


;*** CAN0RXTSRL - MSCAN0 Receive Time Stamp Register Low; 0x0000082F ***
CAN0RXTSRL:         equ    $0000082F                                ;*** CAN0RXTSRL - MSCAN0 Receive Time Stamp Register Low; 0x0000082F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0RXTSRL_TSR0:    equ    0                                         ; Time Stamp Bit 0
CAN0RXTSRL_TSR1:    equ    1                                         ; Time Stamp Bit 1
CAN0RXTSRL_TSR2:    equ    2                                         ; Time Stamp Bit 2
CAN0RXTSRL_TSR3:    equ    3                                         ; Time Stamp Bit 3
CAN0RXTSRL_TSR4:    equ    4                                         ; Time Stamp Bit 4
CAN0RXTSRL_TSR5:    equ    5                                         ; Time Stamp Bit 5
CAN0RXTSRL_TSR6:    equ    6                                         ; Time Stamp Bit 6
CAN0RXTSRL_TSR7:    equ    7                                         ; Time Stamp Bit 7
; bit position masks
mCAN0RXTSRL_TSR0:   equ    %00000001
mCAN0RXTSRL_TSR1:   equ    %00000010
mCAN0RXTSRL_TSR2:   equ    %00000100
mCAN0RXTSRL_TSR3:   equ    %00001000
mCAN0RXTSRL_TSR4:   equ    %00010000
mCAN0RXTSRL_TSR5:   equ    %00100000
mCAN0RXTSRL_TSR6:   equ    %01000000
mCAN0RXTSRL_TSR7:   equ    %10000000


;*** CAN0TXIDR0 - MSCAN0 Transmit Identifier Register 0; 0x00000830 ***
CAN0TXIDR0:         equ    $00000830                                ;*** CAN0TXIDR0 - MSCAN0 Transmit Identifier Register 0; 0x00000830 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXIDR0_ID21:    equ    0                                         ; Extended format identifier Bit 21
CAN0TXIDR0_ID22:    equ    1                                         ; Extended format identifier Bit 22
CAN0TXIDR0_ID23:    equ    2                                         ; Extended format identifier Bit 23
CAN0TXIDR0_ID24:    equ    3                                         ; Extended format identifier Bit 24
CAN0TXIDR0_ID25:    equ    4                                         ; Extended format identifier Bit 25
CAN0TXIDR0_ID26:    equ    5                                         ; Extended format identifier Bit 26
CAN0TXIDR0_ID27:    equ    6                                         ; Extended format identifier Bit 27
CAN0TXIDR0_ID28:    equ    7                                         ; Extended format identifier Bit 28
; bit position masks
mCAN0TXIDR0_ID21:   equ    %00000001
mCAN0TXIDR0_ID22:   equ    %00000010
mCAN0TXIDR0_ID23:   equ    %00000100
mCAN0TXIDR0_ID24:   equ    %00001000
mCAN0TXIDR0_ID25:   equ    %00010000
mCAN0TXIDR0_ID26:   equ    %00100000
mCAN0TXIDR0_ID27:   equ    %01000000
mCAN0TXIDR0_ID28:   equ    %10000000


;*** CAN0TXIDR1 - MSCAN0 Transmit Identifier Register 1; 0x00000831 ***
CAN0TXIDR1:         equ    $00000831                                ;*** CAN0TXIDR1 - MSCAN0 Transmit Identifier Register 1; 0x00000831 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXIDR1_ID15:    equ    0                                         ; Extended format identifier Bit 15
CAN0TXIDR1_ID16:    equ    1                                         ; Extended format identifier Bit 16
CAN0TXIDR1_ID17:    equ    2                                         ; Extended format identifier Bit 17
CAN0TXIDR1_IDE:     equ    3                                         ; ID Extended
CAN0TXIDR1_SRR:     equ    4                                         ; Substitute Remote Request
CAN0TXIDR1_ID18:    equ    5                                         ; Extended format identifier Bit 18
CAN0TXIDR1_ID19:    equ    6                                         ; Extended format identifier Bit 19
CAN0TXIDR1_ID20:    equ    7                                         ; Extended format identifier Bit 20
; bit position masks
mCAN0TXIDR1_ID15:   equ    %00000001
mCAN0TXIDR1_ID16:   equ    %00000010
mCAN0TXIDR1_ID17:   equ    %00000100
mCAN0TXIDR1_IDE:    equ    %00001000
mCAN0TXIDR1_SRR:    equ    %00010000
mCAN0TXIDR1_ID18:   equ    %00100000
mCAN0TXIDR1_ID19:   equ    %01000000
mCAN0TXIDR1_ID20:   equ    %10000000


;*** CAN0TXIDR2 - MSCAN0 Transmit Identifier Register 2; 0x00000832 ***
CAN0TXIDR2:         equ    $00000832                                ;*** CAN0TXIDR2 - MSCAN0 Transmit Identifier Register 2; 0x00000832 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXIDR2_ID7:     equ    0                                         ; Extended format identifier Bit 7
CAN0TXIDR2_ID8:     equ    1                                         ; Extended format identifier Bit 8
CAN0TXIDR2_ID9:     equ    2                                         ; Extended format identifier Bit 9
CAN0TXIDR2_ID10:    equ    3                                         ; Extended format identifier Bit 10
CAN0TXIDR2_ID11:    equ    4                                         ; Extended format identifier Bit 11
CAN0TXIDR2_ID12:    equ    5                                         ; Extended format identifier Bit 12
CAN0TXIDR2_ID13:    equ    6                                         ; Extended format identifier Bit 13
CAN0TXIDR2_ID14:    equ    7                                         ; Extended format identifier Bit 14
; bit position masks
mCAN0TXIDR2_ID7:    equ    %00000001
mCAN0TXIDR2_ID8:    equ    %00000010
mCAN0TXIDR2_ID9:    equ    %00000100
mCAN0TXIDR2_ID10:   equ    %00001000
mCAN0TXIDR2_ID11:   equ    %00010000
mCAN0TXIDR2_ID12:   equ    %00100000
mCAN0TXIDR2_ID13:   equ    %01000000
mCAN0TXIDR2_ID14:   equ    %10000000


;*** CAN0TXIDR3 - MSCAN0 Transmit Identifier Register 3; 0x00000833 ***
CAN0TXIDR3:         equ    $00000833                                ;*** CAN0TXIDR3 - MSCAN0 Transmit Identifier Register 3; 0x00000833 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXIDR3_RTR:     equ    0                                         ; Remote Transmission Request
CAN0TXIDR3_ID0:     equ    1                                         ; Extended format identifier Bit 0
CAN0TXIDR3_ID1:     equ    2                                         ; Extended format identifier Bit 1
CAN0TXIDR3_ID2:     equ    3                                         ; Extended format identifier Bit 2
CAN0TXIDR3_ID3:     equ    4                                         ; Extended format identifier Bit 3
CAN0TXIDR3_ID4:     equ    5                                         ; Extended format identifier Bit 4
CAN0TXIDR3_ID5:     equ    6                                         ; Extended format identifier Bit 5
CAN0TXIDR3_ID6:     equ    7                                         ; Extended format identifier Bit 6
; bit position masks
mCAN0TXIDR3_RTR:    equ    %00000001
mCAN0TXIDR3_ID0:    equ    %00000010
mCAN0TXIDR3_ID1:    equ    %00000100
mCAN0TXIDR3_ID2:    equ    %00001000
mCAN0TXIDR3_ID3:    equ    %00010000
mCAN0TXIDR3_ID4:    equ    %00100000
mCAN0TXIDR3_ID5:    equ    %01000000
mCAN0TXIDR3_ID6:    equ    %10000000


;*** CAN0TXDSR0 - MSCAN0 Transmit Data Segment Register 0; 0x00000834 ***
CAN0TXDSR0:         equ    $00000834                                ;*** CAN0TXDSR0 - MSCAN0 Transmit Data Segment Register 0; 0x00000834 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR0_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR0_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR0_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR0_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR0_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR0_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR0_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR0_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR0_DB0:    equ    %00000001
mCAN0TXDSR0_DB1:    equ    %00000010
mCAN0TXDSR0_DB2:    equ    %00000100
mCAN0TXDSR0_DB3:    equ    %00001000
mCAN0TXDSR0_DB4:    equ    %00010000
mCAN0TXDSR0_DB5:    equ    %00100000
mCAN0TXDSR0_DB6:    equ    %01000000
mCAN0TXDSR0_DB7:    equ    %10000000


;*** CAN0TXDSR1 - MSCAN0 Transmit Data Segment Register 1; 0x00000835 ***
CAN0TXDSR1:         equ    $00000835                                ;*** CAN0TXDSR1 - MSCAN0 Transmit Data Segment Register 1; 0x00000835 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR1_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR1_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR1_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR1_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR1_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR1_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR1_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR1_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR1_DB0:    equ    %00000001
mCAN0TXDSR1_DB1:    equ    %00000010
mCAN0TXDSR1_DB2:    equ    %00000100
mCAN0TXDSR1_DB3:    equ    %00001000
mCAN0TXDSR1_DB4:    equ    %00010000
mCAN0TXDSR1_DB5:    equ    %00100000
mCAN0TXDSR1_DB6:    equ    %01000000
mCAN0TXDSR1_DB7:    equ    %10000000


;*** CAN0TXDSR2 - MSCAN0 Transmit Data Segment Register 2; 0x00000836 ***
CAN0TXDSR2:         equ    $00000836                                ;*** CAN0TXDSR2 - MSCAN0 Transmit Data Segment Register 2; 0x00000836 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR2_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR2_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR2_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR2_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR2_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR2_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR2_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR2_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR2_DB0:    equ    %00000001
mCAN0TXDSR2_DB1:    equ    %00000010
mCAN0TXDSR2_DB2:    equ    %00000100
mCAN0TXDSR2_DB3:    equ    %00001000
mCAN0TXDSR2_DB4:    equ    %00010000
mCAN0TXDSR2_DB5:    equ    %00100000
mCAN0TXDSR2_DB6:    equ    %01000000
mCAN0TXDSR2_DB7:    equ    %10000000


;*** CAN0TXDSR3 - MSCAN0 Transmit Data Segment Register 3; 0x00000837 ***
CAN0TXDSR3:         equ    $00000837                                ;*** CAN0TXDSR3 - MSCAN0 Transmit Data Segment Register 3; 0x00000837 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR3_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR3_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR3_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR3_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR3_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR3_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR3_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR3_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR3_DB0:    equ    %00000001
mCAN0TXDSR3_DB1:    equ    %00000010
mCAN0TXDSR3_DB2:    equ    %00000100
mCAN0TXDSR3_DB3:    equ    %00001000
mCAN0TXDSR3_DB4:    equ    %00010000
mCAN0TXDSR3_DB5:    equ    %00100000
mCAN0TXDSR3_DB6:    equ    %01000000
mCAN0TXDSR3_DB7:    equ    %10000000


;*** CAN0TXDSR4 - MSCAN0 Transmit Data Segment Register 4; 0x00000838 ***
CAN0TXDSR4:         equ    $00000838                                ;*** CAN0TXDSR4 - MSCAN0 Transmit Data Segment Register 4; 0x00000838 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR4_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR4_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR4_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR4_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR4_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR4_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR4_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR4_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR4_DB0:    equ    %00000001
mCAN0TXDSR4_DB1:    equ    %00000010
mCAN0TXDSR4_DB2:    equ    %00000100
mCAN0TXDSR4_DB3:    equ    %00001000
mCAN0TXDSR4_DB4:    equ    %00010000
mCAN0TXDSR4_DB5:    equ    %00100000
mCAN0TXDSR4_DB6:    equ    %01000000
mCAN0TXDSR4_DB7:    equ    %10000000


;*** CAN0TXDSR5 - MSCAN0 Transmit Data Segment Register 5; 0x00000839 ***
CAN0TXDSR5:         equ    $00000839                                ;*** CAN0TXDSR5 - MSCAN0 Transmit Data Segment Register 5; 0x00000839 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR5_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR5_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR5_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR5_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR5_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR5_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR5_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR5_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR5_DB0:    equ    %00000001
mCAN0TXDSR5_DB1:    equ    %00000010
mCAN0TXDSR5_DB2:    equ    %00000100
mCAN0TXDSR5_DB3:    equ    %00001000
mCAN0TXDSR5_DB4:    equ    %00010000
mCAN0TXDSR5_DB5:    equ    %00100000
mCAN0TXDSR5_DB6:    equ    %01000000
mCAN0TXDSR5_DB7:    equ    %10000000


;*** CAN0TXDSR6 - MSCAN0 Transmit Data Segment Register 6; 0x0000083A ***
CAN0TXDSR6:         equ    $0000083A                                ;*** CAN0TXDSR6 - MSCAN0 Transmit Data Segment Register 6; 0x0000083A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR6_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR6_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR6_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR6_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR6_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR6_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR6_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR6_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR6_DB0:    equ    %00000001
mCAN0TXDSR6_DB1:    equ    %00000010
mCAN0TXDSR6_DB2:    equ    %00000100
mCAN0TXDSR6_DB3:    equ    %00001000
mCAN0TXDSR6_DB4:    equ    %00010000
mCAN0TXDSR6_DB5:    equ    %00100000
mCAN0TXDSR6_DB6:    equ    %01000000
mCAN0TXDSR6_DB7:    equ    %10000000


;*** CAN0TXDSR7 - MSCAN0 Transmit Data Segment Register 7; 0x0000083B ***
CAN0TXDSR7:         equ    $0000083B                                ;*** CAN0TXDSR7 - MSCAN0 Transmit Data Segment Register 7; 0x0000083B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDSR7_DB0:     equ    0                                         ; Data Bit 0
CAN0TXDSR7_DB1:     equ    1                                         ; Data Bit 1
CAN0TXDSR7_DB2:     equ    2                                         ; Data Bit 2
CAN0TXDSR7_DB3:     equ    3                                         ; Data Bit 3
CAN0TXDSR7_DB4:     equ    4                                         ; Data Bit 4
CAN0TXDSR7_DB5:     equ    5                                         ; Data Bit 5
CAN0TXDSR7_DB6:     equ    6                                         ; Data Bit 6
CAN0TXDSR7_DB7:     equ    7                                         ; Data Bit 7
; bit position masks
mCAN0TXDSR7_DB0:    equ    %00000001
mCAN0TXDSR7_DB1:    equ    %00000010
mCAN0TXDSR7_DB2:    equ    %00000100
mCAN0TXDSR7_DB3:    equ    %00001000
mCAN0TXDSR7_DB4:    equ    %00010000
mCAN0TXDSR7_DB5:    equ    %00100000
mCAN0TXDSR7_DB6:    equ    %01000000
mCAN0TXDSR7_DB7:    equ    %10000000


;*** CAN0TXDLR - MSCAN0 Transmit Data Length Register; 0x0000083C ***
CAN0TXDLR:          equ    $0000083C                                ;*** CAN0TXDLR - MSCAN0 Transmit Data Length Register; 0x0000083C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXDLR_DLC0:     equ    0                                         ; Data Length Code Bit 0
CAN0TXDLR_DLC1:     equ    1                                         ; Data Length Code Bit 1
CAN0TXDLR_DLC2:     equ    2                                         ; Data Length Code Bit 2
CAN0TXDLR_DLC3:     equ    3                                         ; Data Length Code Bit 3
; bit position masks
mCAN0TXDLR_DLC0:    equ    %00000001
mCAN0TXDLR_DLC1:    equ    %00000010
mCAN0TXDLR_DLC2:    equ    %00000100
mCAN0TXDLR_DLC3:    equ    %00001000


;*** CAN0TXTBPR - MSCAN0 Transmit Buffer Priority; 0x0000083D ***
CAN0TXTBPR:         equ    $0000083D                                ;*** CAN0TXTBPR - MSCAN0 Transmit Buffer Priority; 0x0000083D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXTBPR_PRIO0:   equ    0                                         ; Transmit Buffer Priority Bit 0
CAN0TXTBPR_PRIO1:   equ    1                                         ; Transmit Buffer Priority Bit 1
CAN0TXTBPR_PRIO2:   equ    2                                         ; Transmit Buffer Priority Bit 2
CAN0TXTBPR_PRIO3:   equ    3                                         ; Transmit Buffer Priority Bit 3
CAN0TXTBPR_PRIO4:   equ    4                                         ; Transmit Buffer Priority Bit 4
CAN0TXTBPR_PRIO5:   equ    5                                         ; Transmit Buffer Priority Bit 5
CAN0TXTBPR_PRIO6:   equ    6                                         ; Transmit Buffer Priority Bit 6
CAN0TXTBPR_PRIO7:   equ    7                                         ; Transmit Buffer Priority Bit 7
; bit position masks
mCAN0TXTBPR_PRIO0:  equ    %00000001
mCAN0TXTBPR_PRIO1:  equ    %00000010
mCAN0TXTBPR_PRIO2:  equ    %00000100
mCAN0TXTBPR_PRIO3:  equ    %00001000
mCAN0TXTBPR_PRIO4:  equ    %00010000
mCAN0TXTBPR_PRIO5:  equ    %00100000
mCAN0TXTBPR_PRIO6:  equ    %01000000
mCAN0TXTBPR_PRIO7:  equ    %10000000


;*** CAN0TXTSR - MSCAN0 Transmit Time Stamp Register; 0x0000083E ***
CAN0TXTSR:          equ    $0000083E                                ;*** CAN0TXTSR - MSCAN0 Transmit Time Stamp Register; 0x0000083E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXTSR_TSR0:     equ    0                                         ; Time Stamp Bit 0
CAN0TXTSR_TSR1:     equ    1                                         ; Time Stamp Bit 1
CAN0TXTSR_TSR2:     equ    2                                         ; Time Stamp Bit 2
CAN0TXTSR_TSR3:     equ    3                                         ; Time Stamp Bit 3
CAN0TXTSR_TSR4:     equ    4                                         ; Time Stamp Bit 4
CAN0TXTSR_TSR5:     equ    5                                         ; Time Stamp Bit 5
CAN0TXTSR_TSR6:     equ    6                                         ; Time Stamp Bit 6
CAN0TXTSR_TSR7:     equ    7                                         ; Time Stamp Bit 7
CAN0TXTSR_TSR8:     equ    8                                         ; Time Stamp Bit 8
CAN0TXTSR_TSR9:     equ    9                                         ; Time Stamp Bit 9
CAN0TXTSR_TSR10:    equ    10                                        ; Time Stamp Bit 10
CAN0TXTSR_TSR11:    equ    11                                        ; Time Stamp Bit 11
CAN0TXTSR_TSR12:    equ    12                                        ; Time Stamp Bit 12
CAN0TXTSR_TSR13:    equ    13                                        ; Time Stamp Bit 13
CAN0TXTSR_TSR14:    equ    14                                        ; Time Stamp Bit 14
CAN0TXTSR_TSR15:    equ    15                                        ; Time Stamp Bit 15
; bit position masks
mCAN0TXTSR_TSR0:    equ    %00000001
mCAN0TXTSR_TSR1:    equ    %00000010
mCAN0TXTSR_TSR2:    equ    %00000100
mCAN0TXTSR_TSR3:    equ    %00001000
mCAN0TXTSR_TSR4:    equ    %00010000
mCAN0TXTSR_TSR5:    equ    %00100000
mCAN0TXTSR_TSR6:    equ    %01000000
mCAN0TXTSR_TSR7:    equ    %10000000
mCAN0TXTSR_TSR8:    equ    %100000000
mCAN0TXTSR_TSR9:    equ    %1000000000
mCAN0TXTSR_TSR10:   equ    %10000000000
mCAN0TXTSR_TSR11:   equ    %100000000000
mCAN0TXTSR_TSR12:   equ    %1000000000000
mCAN0TXTSR_TSR13:   equ    %10000000000000
mCAN0TXTSR_TSR14:   equ    %100000000000000
mCAN0TXTSR_TSR15:   equ    %1000000000000000


;*** CAN0TXTSRH - MSCAN0 Transmit Time Stamp Register High; 0x0000083E ***
CAN0TXTSRH:         equ    $0000083E                                ;*** CAN0TXTSRH - MSCAN0 Transmit Time Stamp Register High; 0x0000083E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXTSRH_TSR8:    equ    0                                         ; Time Stamp Bit 8
CAN0TXTSRH_TSR9:    equ    1                                         ; Time Stamp Bit 9
CAN0TXTSRH_TSR10:   equ    2                                         ; Time Stamp Bit 10
CAN0TXTSRH_TSR11:   equ    3                                         ; Time Stamp Bit 11
CAN0TXTSRH_TSR12:   equ    4                                         ; Time Stamp Bit 12
CAN0TXTSRH_TSR13:   equ    5                                         ; Time Stamp Bit 13
CAN0TXTSRH_TSR14:   equ    6                                         ; Time Stamp Bit 14
CAN0TXTSRH_TSR15:   equ    7                                         ; Time Stamp Bit 15
; bit position masks
mCAN0TXTSRH_TSR8:   equ    %00000001
mCAN0TXTSRH_TSR9:   equ    %00000010
mCAN0TXTSRH_TSR10:  equ    %00000100
mCAN0TXTSRH_TSR11:  equ    %00001000
mCAN0TXTSRH_TSR12:  equ    %00010000
mCAN0TXTSRH_TSR13:  equ    %00100000
mCAN0TXTSRH_TSR14:  equ    %01000000
mCAN0TXTSRH_TSR15:  equ    %10000000


;*** CAN0TXTSRL - MSCAN0 Transmit Time Stamp Register Low; 0x0000083F ***
CAN0TXTSRL:         equ    $0000083F                                ;*** CAN0TXTSRL - MSCAN0 Transmit Time Stamp Register Low; 0x0000083F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
CAN0TXTSRL_TSR0:    equ    0                                         ; Time Stamp Bit 0
CAN0TXTSRL_TSR1:    equ    1                                         ; Time Stamp Bit 1
CAN0TXTSRL_TSR2:    equ    2                                         ; Time Stamp Bit 2
CAN0TXTSRL_TSR3:    equ    3                                         ; Time Stamp Bit 3
CAN0TXTSRL_TSR4:    equ    4                                         ; Time Stamp Bit 4
CAN0TXTSRL_TSR5:    equ    5                                         ; Time Stamp Bit 5
CAN0TXTSRL_TSR6:    equ    6                                         ; Time Stamp Bit 6
CAN0TXTSRL_TSR7:    equ    7                                         ; Time Stamp Bit 7
; bit position masks
mCAN0TXTSRL_TSR0:   equ    %00000001
mCAN0TXTSRL_TSR1:   equ    %00000010
mCAN0TXTSRL_TSR2:   equ    %00000100
mCAN0TXTSRL_TSR3:   equ    %00001000
mCAN0TXTSRL_TSR4:   equ    %00010000
mCAN0TXTSRL_TSR5:   equ    %00100000
mCAN0TXTSRL_TSR6:   equ    %01000000
mCAN0TXTSRL_TSR7:   equ    %10000000


;*** LP0DR - Port LP Data Register; 0x00000980 ***
LP0DR:              equ    $00000980                                ;*** LP0DR - Port LP Data Register; 0x00000980 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LP0DR_LPDR0:        equ    0                                         ; LIN Rx data
LP0DR_LPDR1:        equ    1                                         ; LIN Tx data
; bit position masks
mLP0DR_LPDR0:       equ    %00000001
mLP0DR_LPDR1:       equ    %00000010


;*** LP0CR - LIN Control Register; 0x00000981 ***
LP0CR:              equ    $00000981                                ;*** LP0CR - LIN Control Register; 0x00000981 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LP0CR_LPPUE:        equ    0                                         ; LIN pull-up enable
LP0CR_LPWUE:        equ    1                                         ; LIN wake-up enable
LP0CR_RXONLY:       equ    2                                         ; Receive only mode
LP0CR_LPE:          equ    3                                         ; LIN enable
; bit position masks
mLP0CR_LPPUE:       equ    %00000001
mLP0CR_LPWUE:       equ    %00000010
mLP0CR_RXONLY:      equ    %00000100
mLP0CR_LPE:         equ    %00001000


;*** LP0SLRM - LIN Slew Rate Register; 0x00000983 ***
LP0SLRM:            equ    $00000983                                ;*** LP0SLRM - LIN Slew Rate Register; 0x00000983 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LP0SLRM_LPSLR:      equ    0                                         ; Slew rate select
LP0SLRM_LPDTDIS:    equ    7                                         ; TxD-dominant timeout disable
; bit position masks
mLP0SLRM_LPSLR:     equ    %00000011
mLP0SLRM_LPDTDIS:   equ    %10000000


;*** LP0SR - LIN Status Register; 0x00000985 ***
LP0SR:              equ    $00000985                                ;*** LP0SR - LIN Status Register; 0x00000985 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LP0SR_LPDT:         equ    7                                         ; LIN Transmitter TxD-dominant timeout Status
; bit position masks
mLP0SR_LPDT:        equ    %10000000


;*** LP0IE - LIN Interrupt Enable Register; 0x00000986 ***
LP0IE:              equ    $00000986                                ;*** LP0IE - LIN Interrupt Enable Register; 0x00000986 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LP0IE_LPOCIE:       equ    6                                         ; LIN over-current interrupt enable
LP0IE_LPDTIE:       equ    7                                         ; LIN TxD-dominant timeout Interrupt Enable
; bit position masks
mLP0IE_LPOCIE:      equ    %01000000
mLP0IE_LPDTIE:      equ    %10000000


;*** LP0IF - LIN Interrupt Flags Register; 0x00000987 ***
LP0IF:              equ    $00000987                                ;*** LP0IF - LIN Interrupt Flags Register; 0x00000987 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LP0IF_LPOCIF:       equ    6                                         ; LIN transmitter over-current interrupt flag
LP0IF_LPDTIF:       equ    7                                         ; LIN Transmitter TxD-dominant timeout Interrupt Flag
; bit position masks
mLP0IF_LPOCIF:      equ    %01000000
mLP0IF_LPDTIF:      equ    %10000000


;*** LCDCR0 - LCD Control Register 0; 0x00000A00 ***
LCDCR0:             equ    $00000A00                                ;*** LCDCR0 - LCD Control Register 0; 0x00000A00 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDCR0_DUTY0:       equ    0                                         ; LCD Duty Select Bit 0
LCDCR0_DUTY1:       equ    1                                         ; LCD Duty Select Bit 1
LCDCR0_BIAS:        equ    2                                         ; BIAS Voltage Level Select
LCDCR0_LCLK0:       equ    3                                         ; LCD Clock Prescaler Bit 0
LCDCR0_LCLK1:       equ    4                                         ; LCD Clock Prescaler Bit 1
LCDCR0_LCDEN:       equ    7                                         ; LCD32F4BV1 Driver System Enable
; bit position masks
mLCDCR0_DUTY0:      equ    %00000001
mLCDCR0_DUTY1:      equ    %00000010
mLCDCR0_BIAS:       equ    %00000100
mLCDCR0_LCLK0:      equ    %00001000
mLCDCR0_LCLK1:      equ    %00010000
mLCDCR0_LCDEN:      equ    %10000000


;*** LCDCR1 - LCD Control Register 1; 0x00000A01 ***
LCDCR1:             equ    $00000A01                                ;*** LCDCR1 - LCD Control Register 1; 0x00000A01 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDCR1_LCDRSTP:     equ    0                                         ; LCD Run in Stop Mode
LCDCR1_LCDSWAI:     equ    1                                         ; LCD Stop in Wait Mode
; bit position masks
mLCDCR1_LCDRSTP:    equ    %00000001
mLCDCR1_LCDSWAI:    equ    %00000010


;*** LCDFPENR0 - LCD Frontplane Enable Register 0; 0x00000A02 ***
LCDFPENR0:          equ    $00000A02                                ;*** LCDFPENR0 - LCD Frontplane Enable Register 0; 0x00000A02 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDFPENR0_FP0EN:    equ    0                                         ; Frontplane Output Enable Bit 0
LCDFPENR0_FP1EN:    equ    1                                         ; Frontplane Output Enable Bit 1
LCDFPENR0_FP2EN:    equ    2                                         ; Frontplane Output Enable Bit 2
LCDFPENR0_FP3EN:    equ    3                                         ; Frontplane Output Enable Bit 3
LCDFPENR0_FP4EN:    equ    4                                         ; Frontplane Output Enable Bit 4
LCDFPENR0_FP5EN:    equ    5                                         ; Frontplane Output Enable Bit 5
LCDFPENR0_FP6EN:    equ    6                                         ; Frontplane Output Enable Bit 6
LCDFPENR0_FP7EN:    equ    7                                         ; Frontplane Output Enable Bit 7
; bit position masks
mLCDFPENR0_FP0EN:   equ    %00000001
mLCDFPENR0_FP1EN:   equ    %00000010
mLCDFPENR0_FP2EN:   equ    %00000100
mLCDFPENR0_FP3EN:   equ    %00001000
mLCDFPENR0_FP4EN:   equ    %00010000
mLCDFPENR0_FP5EN:   equ    %00100000
mLCDFPENR0_FP6EN:   equ    %01000000
mLCDFPENR0_FP7EN:   equ    %10000000


;*** LCDFPENR1 - LCD Frontplane Enable Register 1; 0x00000A03 ***
LCDFPENR1:          equ    $00000A03                                ;*** LCDFPENR1 - LCD Frontplane Enable Register 1; 0x00000A03 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDFPENR1_FP8EN:    equ    0                                         ; Frontplane Output Enable Bit 8
LCDFPENR1_FP9EN:    equ    1                                         ; Frontplane Output Enable Bit 9
LCDFPENR1_FP10EN:   equ    2                                         ; Frontplane Output Enable Bit 10
LCDFPENR1_FP11EN:   equ    3                                         ; Frontplane Output Enable Bit 11
LCDFPENR1_FP12EN:   equ    4                                         ; Frontplane Output Enable Bit 12
LCDFPENR1_FP13EN:   equ    5                                         ; Frontplane Output Enable Bit 13
LCDFPENR1_FP14EN:   equ    6                                         ; Frontplane Output Enable Bit 14
LCDFPENR1_FP15EN:   equ    7                                         ; Frontplane Output Enable Bit 15
; bit position masks
mLCDFPENR1_FP8EN:   equ    %00000001
mLCDFPENR1_FP9EN:   equ    %00000010
mLCDFPENR1_FP10EN:  equ    %00000100
mLCDFPENR1_FP11EN:  equ    %00001000
mLCDFPENR1_FP12EN:  equ    %00010000
mLCDFPENR1_FP13EN:  equ    %00100000
mLCDFPENR1_FP14EN:  equ    %01000000
mLCDFPENR1_FP15EN:  equ    %10000000


;*** LCDFPENR2 - LCD Frontplane Enable Register 2; 0x00000A04 ***
LCDFPENR2:          equ    $00000A04                                ;*** LCDFPENR2 - LCD Frontplane Enable Register 2; 0x00000A04 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDFPENR2_FP16EN:   equ    0                                         ; Frontplane Output Enable Bit 16
LCDFPENR2_FP17EN:   equ    1                                         ; Frontplane Output Enable Bit 17
LCDFPENR2_FP18EN:   equ    2                                         ; Frontplane Output Enable Bit 18
LCDFPENR2_FP19EN:   equ    3                                         ; Frontplane Output Enable Bit 19
LCDFPENR2_FP20EN:   equ    4                                         ; Frontplane Output Enable Bit 20
LCDFPENR2_FP21EN:   equ    5                                         ; Frontplane Output Enable Bit 21
LCDFPENR2_FP22EN:   equ    6                                         ; Frontplane Output Enable Bit 22
LCDFPENR2_FP23EN:   equ    7                                         ; Frontplane Output Enable Bit 23
; bit position masks
mLCDFPENR2_FP16EN:  equ    %00000001
mLCDFPENR2_FP17EN:  equ    %00000010
mLCDFPENR2_FP18EN:  equ    %00000100
mLCDFPENR2_FP19EN:  equ    %00001000
mLCDFPENR2_FP20EN:  equ    %00010000
mLCDFPENR2_FP21EN:  equ    %00100000
mLCDFPENR2_FP22EN:  equ    %01000000
mLCDFPENR2_FP23EN:  equ    %10000000


;*** LCDFPENR3 - LCD Frontplane Enable Register 3; 0x00000A05 ***
LCDFPENR3:          equ    $00000A05                                ;*** LCDFPENR3 - LCD Frontplane Enable Register 3; 0x00000A05 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDFPENR3_FP24EN:   equ    0                                         ; Frontplane Output Enable Bit 24
LCDFPENR3_FP25EN:   equ    1                                         ; Frontplane Output Enable Bit 25
LCDFPENR3_FP26EN:   equ    2                                         ; Frontplane Output Enable Bit 26
LCDFPENR3_FP27EN:   equ    3                                         ; Frontplane Output Enable Bit 27
LCDFPENR3_FP28EN:   equ    4                                         ; Frontplane Output Enable Bit 28
LCDFPENR3_FP29EN:   equ    5                                         ; Frontplane Output Enable Bit 29
LCDFPENR3_FP30EN:   equ    6                                         ; Frontplane Output Enable Bit 30
LCDFPENR3_FP31EN:   equ    7                                         ; Frontplane Output Enable Bit 31
; bit position masks
mLCDFPENR3_FP24EN:  equ    %00000001
mLCDFPENR3_FP25EN:  equ    %00000010
mLCDFPENR3_FP26EN:  equ    %00000100
mLCDFPENR3_FP27EN:  equ    %00001000
mLCDFPENR3_FP28EN:  equ    %00010000
mLCDFPENR3_FP29EN:  equ    %00100000
mLCDFPENR3_FP30EN:  equ    %01000000
mLCDFPENR3_FP31EN:  equ    %10000000


;*** LCDFPENR4 - LCD Frontplane Enable Register 4; 0x00000A06 ***
LCDFPENR4:          equ    $00000A06                                ;*** LCDFPENR4 - LCD Frontplane Enable Register 4; 0x00000A06 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDFPENR4_FP32EN:   equ    0                                         ; Frontplane Output Enable Bit 32
LCDFPENR4_FP33EN:   equ    1                                         ; Frontplane Output Enable Bit 33
LCDFPENR4_FP34EN:   equ    2                                         ; Frontplane Output Enable Bit 34
LCDFPENR4_FP35EN:   equ    3                                         ; Frontplane Output Enable Bit 35
LCDFPENR4_FP36EN:   equ    4                                         ; Frontplane Output Enable Bit 36
LCDFPENR4_FP37EN:   equ    5                                         ; Frontplane Output Enable Bit 37
LCDFPENR4_FP38EN:   equ    6                                         ; Frontplane Output Enable Bit 38
LCDFPENR4_FP39EN:   equ    7                                         ; Frontplane Output Enable Bit 39
; bit position masks
mLCDFPENR4_FP32EN:  equ    %00000001
mLCDFPENR4_FP33EN:  equ    %00000010
mLCDFPENR4_FP34EN:  equ    %00000100
mLCDFPENR4_FP35EN:  equ    %00001000
mLCDFPENR4_FP36EN:  equ    %00010000
mLCDFPENR4_FP37EN:  equ    %00100000
mLCDFPENR4_FP38EN:  equ    %01000000
mLCDFPENR4_FP39EN:  equ    %10000000


;*** LCDRAM0 - LCD RAM 0; 0x00000A08 ***
LCDRAM0:            equ    $00000A08                                ;*** LCDRAM0 - LCD RAM 0; 0x00000A08 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM0_FP0BP0:     equ    0                                         ; LCD Segment FP0, BP0 ON
LCDRAM0_FP0BP1:     equ    1                                         ; LCD Segment FP0, BP1 ON
LCDRAM0_FP0BP2:     equ    2                                         ; LCD Segment FP0, BP2 ON
LCDRAM0_FP0BP3:     equ    3                                         ; LCD Segment FP0, BP3 ON
LCDRAM0_FP1BP0:     equ    4                                         ; LCD Segment FP1, BP0 ON
LCDRAM0_FP1BP1:     equ    5                                         ; LCD Segment FP1, BP1 ON
LCDRAM0_FP1BP2:     equ    6                                         ; LCD Segment FP1, BP2 ON
LCDRAM0_FP1BP3:     equ    7                                         ; LCD Segment FP1, BP3 ON
; bit position masks
mLCDRAM0_FP0BP0:    equ    %00000001
mLCDRAM0_FP0BP1:    equ    %00000010
mLCDRAM0_FP0BP2:    equ    %00000100
mLCDRAM0_FP0BP3:    equ    %00001000
mLCDRAM0_FP1BP0:    equ    %00010000
mLCDRAM0_FP1BP1:    equ    %00100000
mLCDRAM0_FP1BP2:    equ    %01000000
mLCDRAM0_FP1BP3:    equ    %10000000


;*** LCDRAM1 - LCD RAM 1; 0x00000A09 ***
LCDRAM1:            equ    $00000A09                                ;*** LCDRAM1 - LCD RAM 1; 0x00000A09 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM1_FP2BP0:     equ    0                                         ; LCD Segment FP2, BP0 ON
LCDRAM1_FP2BP1:     equ    1                                         ; LCD Segment FP2, BP1 ON
LCDRAM1_FP2BP2:     equ    2                                         ; LCD Segment FP2, BP2 ON
LCDRAM1_FP2BP3:     equ    3                                         ; LCD Segment FP2, BP3 ON
LCDRAM1_FP3BP0:     equ    4                                         ; LCD Segment FP3, BP0 ON
LCDRAM1_FP3BP1:     equ    5                                         ; LCD Segment FP3, BP1 ON
LCDRAM1_FP3BP2:     equ    6                                         ; LCD Segment FP3, BP2 ON
LCDRAM1_FP3BP3:     equ    7                                         ; LCD Segment FP3, BP3 ON
; bit position masks
mLCDRAM1_FP2BP0:    equ    %00000001
mLCDRAM1_FP2BP1:    equ    %00000010
mLCDRAM1_FP2BP2:    equ    %00000100
mLCDRAM1_FP2BP3:    equ    %00001000
mLCDRAM1_FP3BP0:    equ    %00010000
mLCDRAM1_FP3BP1:    equ    %00100000
mLCDRAM1_FP3BP2:    equ    %01000000
mLCDRAM1_FP3BP3:    equ    %10000000


;*** LCDRAM2 - LCD RAM 2; 0x00000A0A ***
LCDRAM2:            equ    $00000A0A                                ;*** LCDRAM2 - LCD RAM 2; 0x00000A0A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM2_FP4BP0:     equ    0                                         ; LCD Segment FP4, BP0 ON
LCDRAM2_FP4BP1:     equ    1                                         ; LCD Segment FP4, BP1 ON
LCDRAM2_FP4BP2:     equ    2                                         ; LCD Segment FP4, BP2 ON
LCDRAM2_FP4BP3:     equ    3                                         ; LCD Segment FP4, BP3 ON
LCDRAM2_FP5BP0:     equ    4                                         ; LCD Segment FP5, BP0 ON
LCDRAM2_FP5BP1:     equ    5                                         ; LCD Segment FP5, BP1 ON
LCDRAM2_FP5BP2:     equ    6                                         ; LCD Segment FP5, BP2 ON
LCDRAM2_FP5BP3:     equ    7                                         ; LCD Segment FP5, BP3 ON
; bit position masks
mLCDRAM2_FP4BP0:    equ    %00000001
mLCDRAM2_FP4BP1:    equ    %00000010
mLCDRAM2_FP4BP2:    equ    %00000100
mLCDRAM2_FP4BP3:    equ    %00001000
mLCDRAM2_FP5BP0:    equ    %00010000
mLCDRAM2_FP5BP1:    equ    %00100000
mLCDRAM2_FP5BP2:    equ    %01000000
mLCDRAM2_FP5BP3:    equ    %10000000


;*** LCDRAM3 - LCD RAM 3; 0x00000A0B ***
LCDRAM3:            equ    $00000A0B                                ;*** LCDRAM3 - LCD RAM 3; 0x00000A0B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM3_FP6BP0:     equ    0                                         ; LCD Segment FP6, BP0 ON
LCDRAM3_FP6BP1:     equ    1                                         ; LCD Segment FP6, BP1 ON
LCDRAM3_FP6BP2:     equ    2                                         ; LCD Segment FP6, BP2 ON
LCDRAM3_FP6BP3:     equ    3                                         ; LCD Segment FP6, BP3 ON
LCDRAM3_FP7BP0:     equ    4                                         ; LCD Segment FP7, BP0 ON
LCDRAM3_FP7BP1:     equ    5                                         ; LCD Segment FP7, BP1 ON
LCDRAM3_FP7BP2:     equ    6                                         ; LCD Segment FP7, BP2 ON
LCDRAM3_FP7BP3:     equ    7                                         ; LCD Segment FP7, BP3 ON
; bit position masks
mLCDRAM3_FP6BP0:    equ    %00000001
mLCDRAM3_FP6BP1:    equ    %00000010
mLCDRAM3_FP6BP2:    equ    %00000100
mLCDRAM3_FP6BP3:    equ    %00001000
mLCDRAM3_FP7BP0:    equ    %00010000
mLCDRAM3_FP7BP1:    equ    %00100000
mLCDRAM3_FP7BP2:    equ    %01000000
mLCDRAM3_FP7BP3:    equ    %10000000


;*** LCDRAM4 - LCD RAM 4; 0x00000A0C ***
LCDRAM4:            equ    $00000A0C                                ;*** LCDRAM4 - LCD RAM 4; 0x00000A0C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM4_FP8BP0:     equ    0                                         ; LCD Segment FP8, BP0 ON
LCDRAM4_FP8BP1:     equ    1                                         ; LCD Segment FP8, BP1 ON
LCDRAM4_FP8BP2:     equ    2                                         ; LCD Segment FP8, BP2 ON
LCDRAM4_FP8BP3:     equ    3                                         ; LCD Segment FP8, BP3 ON
LCDRAM4_FP9BP0:     equ    4                                         ; LCD Segment FP9, BP0 ON
LCDRAM4_FP9BP1:     equ    5                                         ; LCD Segment FP9, BP1 ON
LCDRAM4_FP9BP2:     equ    6                                         ; LCD Segment FP9, BP2 ON
LCDRAM4_FP9BP3:     equ    7                                         ; LCD Segment FP9, BP3 ON
; bit position masks
mLCDRAM4_FP8BP0:    equ    %00000001
mLCDRAM4_FP8BP1:    equ    %00000010
mLCDRAM4_FP8BP2:    equ    %00000100
mLCDRAM4_FP8BP3:    equ    %00001000
mLCDRAM4_FP9BP0:    equ    %00010000
mLCDRAM4_FP9BP1:    equ    %00100000
mLCDRAM4_FP9BP2:    equ    %01000000
mLCDRAM4_FP9BP3:    equ    %10000000


;*** LCDRAM5 - LCD RAM 5; 0x00000A0D ***
LCDRAM5:            equ    $00000A0D                                ;*** LCDRAM5 - LCD RAM 5; 0x00000A0D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM5_FP10BP0:    equ    0                                         ; LCD Segment FP10, BP0 ON
LCDRAM5_FP10BP1:    equ    1                                         ; LCD Segment FP10, BP1 ON
LCDRAM5_FP10BP2:    equ    2                                         ; LCD Segment FP10, BP2 ON
LCDRAM5_FP10BP3:    equ    3                                         ; LCD Segment FP10, BP3 ON
LCDRAM5_FP11BP0:    equ    4                                         ; LCD Segment FP11, BP0 ON
LCDRAM5_FP11BP1:    equ    5                                         ; LCD Segment FP11, BP1 ON
LCDRAM5_FP11BP2:    equ    6                                         ; LCD Segment FP11, BP2 ON
LCDRAM5_FP11BP3:    equ    7                                         ; LCD Segment FP11, BP3 ON
; bit position masks
mLCDRAM5_FP10BP0:   equ    %00000001
mLCDRAM5_FP10BP1:   equ    %00000010
mLCDRAM5_FP10BP2:   equ    %00000100
mLCDRAM5_FP10BP3:   equ    %00001000
mLCDRAM5_FP11BP0:   equ    %00010000
mLCDRAM5_FP11BP1:   equ    %00100000
mLCDRAM5_FP11BP2:   equ    %01000000
mLCDRAM5_FP11BP3:   equ    %10000000


;*** LCDRAM6 - LCD RAM 6; 0x00000A0E ***
LCDRAM6:            equ    $00000A0E                                ;*** LCDRAM6 - LCD RAM 6; 0x00000A0E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM6_FP12BP0:    equ    0                                         ; LCD Segment FP12, BP0 ON
LCDRAM6_FP12BP1:    equ    1                                         ; LCD Segment FP12, BP1 ON
LCDRAM6_FP12BP2:    equ    2                                         ; LCD Segment FP12, BP2 ON
LCDRAM6_FP12BP3:    equ    3                                         ; LCD Segment FP12, BP3 ON
LCDRAM6_FP13BP0:    equ    4                                         ; LCD Segment FP13, BP0 ON
LCDRAM6_FP13BP1:    equ    5                                         ; LCD Segment FP13, BP1 ON
LCDRAM6_FP13BP2:    equ    6                                         ; LCD Segment FP13, BP2 ON
LCDRAM6_FP13BP3:    equ    7                                         ; LCD Segment FP13, BP3 ON
; bit position masks
mLCDRAM6_FP12BP0:   equ    %00000001
mLCDRAM6_FP12BP1:   equ    %00000010
mLCDRAM6_FP12BP2:   equ    %00000100
mLCDRAM6_FP12BP3:   equ    %00001000
mLCDRAM6_FP13BP0:   equ    %00010000
mLCDRAM6_FP13BP1:   equ    %00100000
mLCDRAM6_FP13BP2:   equ    %01000000
mLCDRAM6_FP13BP3:   equ    %10000000


;*** LCDRAM7 - LCD RAM 7; 0x00000A0F ***
LCDRAM7:            equ    $00000A0F                                ;*** LCDRAM7 - LCD RAM 7; 0x00000A0F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM7_FP14BP0:    equ    0                                         ; LCD Segment FP14, BP0 ON
LCDRAM7_FP14BP1:    equ    1                                         ; LCD Segment FP14, BP1 ON
LCDRAM7_FP14BP2:    equ    2                                         ; LCD Segment FP14, BP2 ON
LCDRAM7_FP14BP3:    equ    3                                         ; LCD Segment FP14, BP3 ON
LCDRAM7_FP15BP0:    equ    4                                         ; LCD Segment FP15, BP0 ON
LCDRAM7_FP15BP1:    equ    5                                         ; LCD Segment FP15, BP1 ON
LCDRAM7_FP15BP2:    equ    6                                         ; LCD Segment FP15, BP2 ON
LCDRAM7_FP15BP3:    equ    7                                         ; LCD Segment FP15, BP3 ON
; bit position masks
mLCDRAM7_FP14BP0:   equ    %00000001
mLCDRAM7_FP14BP1:   equ    %00000010
mLCDRAM7_FP14BP2:   equ    %00000100
mLCDRAM7_FP14BP3:   equ    %00001000
mLCDRAM7_FP15BP0:   equ    %00010000
mLCDRAM7_FP15BP1:   equ    %00100000
mLCDRAM7_FP15BP2:   equ    %01000000
mLCDRAM7_FP15BP3:   equ    %10000000


;*** LCDRAM8 - LCD RAM 8; 0x00000A10 ***
LCDRAM8:            equ    $00000A10                                ;*** LCDRAM8 - LCD RAM 8; 0x00000A10 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM8_FP16BP0:    equ    0                                         ; LCD Segment FP16, BP0 ON
LCDRAM8_FP16BP1:    equ    1                                         ; LCD Segment FP16, BP1 ON
LCDRAM8_FP16BP2:    equ    2                                         ; LCD Segment FP16, BP2 ON
LCDRAM8_FP16BP3:    equ    3                                         ; LCD Segment FP16, BP3 ON
LCDRAM8_FP17BP0:    equ    4                                         ; LCD Segment FP17, BP0 ON
LCDRAM8_FP17BP1:    equ    5                                         ; LCD Segment FP17, BP1 ON
LCDRAM8_FP17BP2:    equ    6                                         ; LCD Segment FP17, BP2 ON
LCDRAM8_FP17BP3:    equ    7                                         ; LCD Segment FP17, BP3 ON
; bit position masks
mLCDRAM8_FP16BP0:   equ    %00000001
mLCDRAM8_FP16BP1:   equ    %00000010
mLCDRAM8_FP16BP2:   equ    %00000100
mLCDRAM8_FP16BP3:   equ    %00001000
mLCDRAM8_FP17BP0:   equ    %00010000
mLCDRAM8_FP17BP1:   equ    %00100000
mLCDRAM8_FP17BP2:   equ    %01000000
mLCDRAM8_FP17BP3:   equ    %10000000


;*** LCDRAM9 - LCD RAM 9; 0x00000A11 ***
LCDRAM9:            equ    $00000A11                                ;*** LCDRAM9 - LCD RAM 9; 0x00000A11 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM9_FP18BP0:    equ    0                                         ; LCD Segment FP18, BP0 ON
LCDRAM9_FP18BP1:    equ    1                                         ; LCD Segment FP18, BP1 ON
LCDRAM9_FP18BP2:    equ    2                                         ; LCD Segment FP18, BP2 ON
LCDRAM9_FP18BP3:    equ    3                                         ; LCD Segment FP18, BP3 ON
LCDRAM9_FP19BP0:    equ    4                                         ; LCD Segment FP19, BP0 ON
LCDRAM9_FP19BP1:    equ    5                                         ; LCD Segment FP19, BP1 ON
LCDRAM9_FP19BP2:    equ    6                                         ; LCD Segment FP19, BP2 ON
LCDRAM9_FP19BP3:    equ    7                                         ; LCD Segment FP19, BP3 ON
; bit position masks
mLCDRAM9_FP18BP0:   equ    %00000001
mLCDRAM9_FP18BP1:   equ    %00000010
mLCDRAM9_FP18BP2:   equ    %00000100
mLCDRAM9_FP18BP3:   equ    %00001000
mLCDRAM9_FP19BP0:   equ    %00010000
mLCDRAM9_FP19BP1:   equ    %00100000
mLCDRAM9_FP19BP2:   equ    %01000000
mLCDRAM9_FP19BP3:   equ    %10000000


;*** LCDRAM10 - LCD RAM 10; 0x00000A12 ***
LCDRAM10:           equ    $00000A12                                ;*** LCDRAM10 - LCD RAM 10; 0x00000A12 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM10_FP20BP0:   equ    0                                         ; LCD Segment FP20, BP0 ON
LCDRAM10_FP20BP1:   equ    1                                         ; LCD Segment FP20, BP1 ON
LCDRAM10_FP20BP2:   equ    2                                         ; LCD Segment FP20, BP2 ON
LCDRAM10_FP20BP3:   equ    3                                         ; LCD Segment FP20, BP3 ON
LCDRAM10_FP21BP0:   equ    4                                         ; LCD Segment FP21, BP0 ON
LCDRAM10_FP21BP1:   equ    5                                         ; LCD Segment FP21, BP1 ON
LCDRAM10_FP21BP2:   equ    6                                         ; LCD Segment FP21, BP2 ON
LCDRAM10_FP21BP3:   equ    7                                         ; LCD Segment FP21, BP3 ON
; bit position masks
mLCDRAM10_FP20BP0:  equ    %00000001
mLCDRAM10_FP20BP1:  equ    %00000010
mLCDRAM10_FP20BP2:  equ    %00000100
mLCDRAM10_FP20BP3:  equ    %00001000
mLCDRAM10_FP21BP0:  equ    %00010000
mLCDRAM10_FP21BP1:  equ    %00100000
mLCDRAM10_FP21BP2:  equ    %01000000
mLCDRAM10_FP21BP3:  equ    %10000000


;*** LCDRAM11 - LCD RAM 11; 0x00000A13 ***
LCDRAM11:           equ    $00000A13                                ;*** LCDRAM11 - LCD RAM 11; 0x00000A13 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM11_FP22BP0:   equ    0                                         ; LCD Segment FP22, BP0 ON
LCDRAM11_FP22BP1:   equ    1                                         ; LCD Segment FP22, BP1 ON
LCDRAM11_FP22BP2:   equ    2                                         ; LCD Segment FP22, BP2 ON
LCDRAM11_FP22BP3:   equ    3                                         ; LCD Segment FP22, BP3 ON
LCDRAM11_FP23BP0:   equ    4                                         ; LCD Segment FP23, BP0 ON
LCDRAM11_FP23BP1:   equ    5                                         ; LCD Segment FP23, BP1 ON
LCDRAM11_FP23BP2:   equ    6                                         ; LCD Segment FP23, BP2 ON
LCDRAM11_FP23BP3:   equ    7                                         ; LCD Segment FP23, BP3 ON
; bit position masks
mLCDRAM11_FP22BP0:  equ    %00000001
mLCDRAM11_FP22BP1:  equ    %00000010
mLCDRAM11_FP22BP2:  equ    %00000100
mLCDRAM11_FP22BP3:  equ    %00001000
mLCDRAM11_FP23BP0:  equ    %00010000
mLCDRAM11_FP23BP1:  equ    %00100000
mLCDRAM11_FP23BP2:  equ    %01000000
mLCDRAM11_FP23BP3:  equ    %10000000


;*** LCDRAM12 - LCD RAM 12; 0x00000A14 ***
LCDRAM12:           equ    $00000A14                                ;*** LCDRAM12 - LCD RAM 12; 0x00000A14 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM12_FP24BP0:   equ    0                                         ; LCD Segment FP24, BP0 ON
LCDRAM12_FP24BP1:   equ    1                                         ; LCD Segment FP24, BP1 ON
LCDRAM12_FP24BP2:   equ    2                                         ; LCD Segment FP24, BP2 ON
LCDRAM12_FP24BP3:   equ    3                                         ; LCD Segment FP24, BP3 ON
LCDRAM12_FP25BP0:   equ    4                                         ; LCD Segment FP25, BP0 ON
LCDRAM12_FP25BP1:   equ    5                                         ; LCD Segment FP25, BP1 ON
LCDRAM12_FP25BP2:   equ    6                                         ; LCD Segment FP25, BP2 ON
LCDRAM12_FP25BP3:   equ    7                                         ; LCD Segment FP25, BP3 ON
; bit position masks
mLCDRAM12_FP24BP0:  equ    %00000001
mLCDRAM12_FP24BP1:  equ    %00000010
mLCDRAM12_FP24BP2:  equ    %00000100
mLCDRAM12_FP24BP3:  equ    %00001000
mLCDRAM12_FP25BP0:  equ    %00010000
mLCDRAM12_FP25BP1:  equ    %00100000
mLCDRAM12_FP25BP2:  equ    %01000000
mLCDRAM12_FP25BP3:  equ    %10000000


;*** LCDRAM13 - LCD RAM 13; 0x00000A15 ***
LCDRAM13:           equ    $00000A15                                ;*** LCDRAM13 - LCD RAM 13; 0x00000A15 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM13_FP26BP0:   equ    0                                         ; LCD Segment FP26, BP0 ON
LCDRAM13_FP26BP1:   equ    1                                         ; LCD Segment FP26, BP1 ON
LCDRAM13_FP26BP2:   equ    2                                         ; LCD Segment FP26, BP2 ON
LCDRAM13_FP26BP3:   equ    3                                         ; LCD Segment FP26, BP3 ON
LCDRAM13_FP27BP0:   equ    4                                         ; LCD Segment FP27, BP0 ON
LCDRAM13_FP27BP1:   equ    5                                         ; LCD Segment FP27, BP1 ON
LCDRAM13_FP27BP2:   equ    6                                         ; LCD Segment FP27, BP2 ON
LCDRAM13_FP27BP3:   equ    7                                         ; LCD Segment FP27, BP3 ON
; bit position masks
mLCDRAM13_FP26BP0:  equ    %00000001
mLCDRAM13_FP26BP1:  equ    %00000010
mLCDRAM13_FP26BP2:  equ    %00000100
mLCDRAM13_FP26BP3:  equ    %00001000
mLCDRAM13_FP27BP0:  equ    %00010000
mLCDRAM13_FP27BP1:  equ    %00100000
mLCDRAM13_FP27BP2:  equ    %01000000
mLCDRAM13_FP27BP3:  equ    %10000000


;*** LCDRAM14 - LCD RAM 14; 0x00000A16 ***
LCDRAM14:           equ    $00000A16                                ;*** LCDRAM14 - LCD RAM 14; 0x00000A16 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM14_FP28BP0:   equ    0                                         ; LCD Segment FP28, BP0 ON
LCDRAM14_FP28BP1:   equ    1                                         ; LCD Segment FP28, BP1 ON
LCDRAM14_FP28BP2:   equ    2                                         ; LCD Segment FP28, BP2 ON
LCDRAM14_FP28BP3:   equ    3                                         ; LCD Segment FP28, BP3 ON
LCDRAM14_FP29BP0:   equ    4                                         ; LCD Segment FP29, BP0 ON
LCDRAM14_FP29BP1:   equ    5                                         ; LCD Segment FP29, BP1 ON
LCDRAM14_FP29BP2:   equ    6                                         ; LCD Segment FP29, BP2 ON
LCDRAM14_FP29BP3:   equ    7                                         ; LCD Segment FP29, BP3 ON
; bit position masks
mLCDRAM14_FP28BP0:  equ    %00000001
mLCDRAM14_FP28BP1:  equ    %00000010
mLCDRAM14_FP28BP2:  equ    %00000100
mLCDRAM14_FP28BP3:  equ    %00001000
mLCDRAM14_FP29BP0:  equ    %00010000
mLCDRAM14_FP29BP1:  equ    %00100000
mLCDRAM14_FP29BP2:  equ    %01000000
mLCDRAM14_FP29BP3:  equ    %10000000


;*** LCDRAM15 - LCD RAM 15; 0x00000A17 ***
LCDRAM15:           equ    $00000A17                                ;*** LCDRAM15 - LCD RAM 15; 0x00000A17 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM15_FP30BP0:   equ    0                                         ; LCD Segment FP30, BP0 ON
LCDRAM15_FP30BP1:   equ    1                                         ; LCD Segment FP30, BP1 ON
LCDRAM15_FP30BP2:   equ    2                                         ; LCD Segment FP30, BP2 ON
LCDRAM15_FP30BP3:   equ    3                                         ; LCD Segment FP30, BP3 ON
LCDRAM15_FP31BP0:   equ    4                                         ; LCD Segment FP31, BP0 ON
LCDRAM15_FP31BP1:   equ    5                                         ; LCD Segment FP31, BP1 ON
LCDRAM15_FP31BP2:   equ    6                                         ; LCD Segment FP31, BP2 ON
LCDRAM15_FP31BP3:   equ    7                                         ; LCD Segment FP31, BP3 ON
; bit position masks
mLCDRAM15_FP30BP0:  equ    %00000001
mLCDRAM15_FP30BP1:  equ    %00000010
mLCDRAM15_FP30BP2:  equ    %00000100
mLCDRAM15_FP30BP3:  equ    %00001000
mLCDRAM15_FP31BP0:  equ    %00010000
mLCDRAM15_FP31BP1:  equ    %00100000
mLCDRAM15_FP31BP2:  equ    %01000000
mLCDRAM15_FP31BP3:  equ    %10000000


;*** LCDRAM16 - LCD RAM 16; 0x00000A18 ***
LCDRAM16:           equ    $00000A18                                ;*** LCDRAM16 - LCD RAM 16; 0x00000A18 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM16_FP32BP0:   equ    0                                         ; LCD Segment FP32, BP0 ON
LCDRAM16_FP32BP1:   equ    1                                         ; LCD Segment FP32, BP1 ON
LCDRAM16_FP32BP2:   equ    2                                         ; LCD Segment FP32, BP2 ON
LCDRAM16_FP32BP3:   equ    3                                         ; LCD Segment FP32, BP3 ON
LCDRAM16_FP33BP0:   equ    4                                         ; LCD Segment FP33, BP0 ON
LCDRAM16_FP33BP1:   equ    5                                         ; LCD Segment FP33, BP1 ON
LCDRAM16_FP33BP2:   equ    6                                         ; LCD Segment FP33, BP2 ON
LCDRAM16_FP33BP3:   equ    7                                         ; LCD Segment FP33, BP3 ON
; bit position masks
mLCDRAM16_FP32BP0:  equ    %00000001
mLCDRAM16_FP32BP1:  equ    %00000010
mLCDRAM16_FP32BP2:  equ    %00000100
mLCDRAM16_FP32BP3:  equ    %00001000
mLCDRAM16_FP33BP0:  equ    %00010000
mLCDRAM16_FP33BP1:  equ    %00100000
mLCDRAM16_FP33BP2:  equ    %01000000
mLCDRAM16_FP33BP3:  equ    %10000000


;*** LCDRAM17 - LCD RAM 17; 0x00000A19 ***
LCDRAM17:           equ    $00000A19                                ;*** LCDRAM17 - LCD RAM 17; 0x00000A19 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM17_FP34BP0:   equ    0                                         ; LCD Segment FP34, BP0 ON
LCDRAM17_FP34BP1:   equ    1                                         ; LCD Segment FP34, BP1 ON
LCDRAM17_FP34BP2:   equ    2                                         ; LCD Segment FP34, BP2 ON
LCDRAM17_FP34BP3:   equ    3                                         ; LCD Segment FP34, BP3 ON
LCDRAM17_FP35BP0:   equ    4                                         ; LCD Segment FP35, BP0 ON
LCDRAM17_FP35BP1:   equ    5                                         ; LCD Segment FP35, BP1 ON
LCDRAM17_FP35BP2:   equ    6                                         ; LCD Segment FP35, BP2 ON
LCDRAM17_FP35BP3:   equ    7                                         ; LCD Segment FP35, BP3 ON
; bit position masks
mLCDRAM17_FP34BP0:  equ    %00000001
mLCDRAM17_FP34BP1:  equ    %00000010
mLCDRAM17_FP34BP2:  equ    %00000100
mLCDRAM17_FP34BP3:  equ    %00001000
mLCDRAM17_FP35BP0:  equ    %00010000
mLCDRAM17_FP35BP1:  equ    %00100000
mLCDRAM17_FP35BP2:  equ    %01000000
mLCDRAM17_FP35BP3:  equ    %10000000


;*** LCDRAM18 - LCD RAM 18; 0x00000A1A ***
LCDRAM18:           equ    $00000A1A                                ;*** LCDRAM18 - LCD RAM 18; 0x00000A1A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM18_FP36BP0:   equ    0                                         ; LCD Segment FP36, BP0 ON
LCDRAM18_FP36BP1:   equ    1                                         ; LCD Segment FP36, BP1 ON
LCDRAM18_FP36BP2:   equ    2                                         ; LCD Segment FP36, BP2 ON
LCDRAM18_FP36BP3:   equ    3                                         ; LCD Segment FP36, BP3 ON
LCDRAM18_FP37BP0:   equ    4                                         ; LCD Segment FP37, BP0 ON
LCDRAM18_FP37BP1:   equ    5                                         ; LCD Segment FP37, BP1 ON
LCDRAM18_FP37BP2:   equ    6                                         ; LCD Segment FP37, BP2 ON
LCDRAM18_FP37BP3:   equ    7                                         ; LCD Segment FP37, BP3 ON
; bit position masks
mLCDRAM18_FP36BP0:  equ    %00000001
mLCDRAM18_FP36BP1:  equ    %00000010
mLCDRAM18_FP36BP2:  equ    %00000100
mLCDRAM18_FP36BP3:  equ    %00001000
mLCDRAM18_FP37BP0:  equ    %00010000
mLCDRAM18_FP37BP1:  equ    %00100000
mLCDRAM18_FP37BP2:  equ    %01000000
mLCDRAM18_FP37BP3:  equ    %10000000


;*** LCDRAM19 - LCD RAM 19; 0x00000A1B ***
LCDRAM19:           equ    $00000A1B                                ;*** LCDRAM19 - LCD RAM 19; 0x00000A1B ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
LCDRAM19_FP38BP0:   equ    0                                         ; LCD Segment FP38, BP0 ON
LCDRAM19_FP38BP1:   equ    1                                         ; LCD Segment FP38, BP1 ON
LCDRAM19_FP38BP2:   equ    2                                         ; LCD Segment FP38, BP2 ON
LCDRAM19_FP38BP3:   equ    3                                         ; LCD Segment FP38, BP3 ON
LCDRAM19_FP39BP0:   equ    4                                         ; LCD Segment FP39, BP0 ON
LCDRAM19_FP39BP1:   equ    5                                         ; LCD Segment FP39, BP1 ON
LCDRAM19_FP39BP2:   equ    6                                         ; LCD Segment FP39, BP2 ON
LCDRAM19_FP39BP3:   equ    7                                         ; LCD Segment FP39, BP3 ON
; bit position masks
mLCDRAM19_FP38BP0:  equ    %00000001
mLCDRAM19_FP38BP1:  equ    %00000010
mLCDRAM19_FP38BP2:  equ    %00000100
mLCDRAM19_FP38BP3:  equ    %00001000
mLCDRAM19_FP39BP0:  equ    %00010000
mLCDRAM19_FP39BP1:  equ    %00100000
mLCDRAM19_FP39BP2:  equ    %01000000
mLCDRAM19_FP39BP3:  equ    %10000000


;*** MCCTL0 - Motor Controller Control Register 0; 0x00000A40 ***
MCCTL0:             equ    $00000A40                                ;*** MCCTL0 - Motor Controller Control Register 0; 0x00000A40 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCCTL0_MCTOIF:      equ    0                                         ; Motor Controller Timer Counter Overflow Interrupt Flag
MCCTL0_DITH:        equ    2                                         ; Motor Control/Driver Dither Feature Enable
MCCTL0_FAST:        equ    3                                         ; Motor Controller PWM Resolution Mode
MCCTL0_MCSWAI:      equ    4                                         ; Motor Controller Module Stop in Wait Mode
MCCTL0_MCPRE0:      equ    5                                         ; Motor Controller Prescaler Select, bit 0
MCCTL0_MCPRE1:      equ    6                                         ; Motor Controller Prescaler Select, bit 1
; bit position masks
mMCCTL0_MCTOIF:     equ    %00000001
mMCCTL0_DITH:       equ    %00000100
mMCCTL0_FAST:       equ    %00001000
mMCCTL0_MCSWAI:     equ    %00010000
mMCCTL0_MCPRE0:     equ    %00100000
mMCCTL0_MCPRE1:     equ    %01000000


;*** MCCTL1 - Motor Controller Control Register 1; 0x00000A41 ***
MCCTL1:             equ    $00000A41                                ;*** MCCTL1 - Motor Controller Control Register 1; 0x00000A41 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCCTL1_MCTOIE:      equ    0                                         ; Motor Controller Timer Counter Overflow Interrupt Enable
MCCTL1_RECIRC:      equ    7                                         ; Recirculation in (Dual) Full H-Bridge Mode
; bit position masks
mMCCTL1_MCTOIE:     equ    %00000001
mMCCTL1_RECIRC:     equ    %10000000


;*** MCPER - Motor Controller Period Register; 0x00000A42 ***
MCPER:              equ    $00000A42                                ;*** MCPER - Motor Controller Period Register; 0x00000A42 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCPER_P0:           equ    0                                         ; Motor Controller Period Bit 1
MCPER_P1:           equ    1                                         ; Motor Controller Period, bit 1
MCPER_P2:           equ    2                                         ; Motor Controller Period, bit 2
MCPER_P3:           equ    3                                         ; Motor Controller Period, bit 3
MCPER_P4:           equ    4                                         ; Motor Controller Period, bit 4
MCPER_P5:           equ    5                                         ; Motor Controller Period, bit 5
MCPER_P6:           equ    6                                         ; Motor Controller Period, bit 6
MCPER_P7:           equ    7                                         ; Motor Controller Period, bit 7
MCPER_P8:           equ    8                                         ; Motor Controller Period, bit 8
MCPER_P9:           equ    9                                         ; Motor Controller Period, bit 9
MCPER_P10:          equ    10                                        ; Motor Controller Period, bit 10
; bit position masks
mMCPER_P0:          equ    %00000001
mMCPER_P1:          equ    %00000010
mMCPER_P2:          equ    %00000100
mMCPER_P3:          equ    %00001000
mMCPER_P4:          equ    %00010000
mMCPER_P5:          equ    %00100000
mMCPER_P6:          equ    %01000000
mMCPER_P7:          equ    %10000000
mMCPER_P8:          equ    %100000000
mMCPER_P9:          equ    %1000000000
mMCPER_P10:         equ    %10000000000


;*** MCCC0 - Motor Controller Control Register 0; 0x00000A50 ***
MCCC0:              equ    $00000A50                                ;*** MCCC0 - Motor Controller Control Register 0; 0x00000A50 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCCC0_CD0:          equ    0                                         ; PWM Channel Delay Bit 0
MCCC0_CD1:          equ    1                                         ; PWM Channel Delay Bit 1
MCCC0_MCAM0:        equ    4                                         ; PWM Channel Alignment Mode Bit 0
MCCC0_MCAM1:        equ    5                                         ; PWM Channel Alignment Mode Bit 1
MCCC0_MCOM0:        equ    6                                         ; Output Mode Bit 0
MCCC0_MCOM1:        equ    7                                         ; Output Mode Bit 1
; bit position masks
mMCCC0_CD0:         equ    %00000001
mMCCC0_CD1:         equ    %00000010
mMCCC0_MCAM0:       equ    %00010000
mMCCC0_MCAM1:       equ    %00100000
mMCCC0_MCOM0:       equ    %01000000
mMCCC0_MCOM1:       equ    %10000000


;*** MCCC1 - Motor Controller Control Register 1; 0x00000A51 ***
MCCC1:              equ    $00000A51                                ;*** MCCC1 - Motor Controller Control Register 1; 0x00000A51 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCCC1_CD0:          equ    0                                         ; PWM Channel Delay Bit 0
MCCC1_CD1:          equ    1                                         ; PWM Channel Delay Bit 1
MCCC1_MCAM0:        equ    4                                         ; PWM Channel Alignment Mode Bit 0
MCCC1_MCAM1:        equ    5                                         ; PWM Channel Alignment Mode Bit 1
MCCC1_MCOM0:        equ    6                                         ; Output Mode Bit 0
MCCC1_MCOM1:        equ    7                                         ; Output Mode Bit 1
; bit position masks
mMCCC1_CD0:         equ    %00000001
mMCCC1_CD1:         equ    %00000010
mMCCC1_MCAM0:       equ    %00010000
mMCCC1_MCAM1:       equ    %00100000
mMCCC1_MCOM0:       equ    %01000000
mMCCC1_MCOM1:       equ    %10000000


;*** MCCC2 - Motor Controller Control Register 2; 0x00000A52 ***
MCCC2:              equ    $00000A52                                ;*** MCCC2 - Motor Controller Control Register 2; 0x00000A52 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCCC2_CD0:          equ    0                                         ; PWM Channel Delay Bit 0
MCCC2_CD1:          equ    1                                         ; PWM Channel Delay Bit 1
MCCC2_MCAM0:        equ    4                                         ; PWM Channel Alignment Mode Bit 0
MCCC2_MCAM1:        equ    5                                         ; PWM Channel Alignment Mode Bit 1
MCCC2_MCOM0:        equ    6                                         ; Output Mode Bit 0
MCCC2_MCOM1:        equ    7                                         ; Output Mode Bit 1
; bit position masks
mMCCC2_CD0:         equ    %00000001
mMCCC2_CD1:         equ    %00000010
mMCCC2_MCAM0:       equ    %00010000
mMCCC2_MCAM1:       equ    %00100000
mMCCC2_MCOM0:       equ    %01000000
mMCCC2_MCOM1:       equ    %10000000


;*** MCCC3 - Motor Controller Control Register 3; 0x00000A53 ***
MCCC3:              equ    $00000A53                                ;*** MCCC3 - Motor Controller Control Register 3; 0x00000A53 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCCC3_CD0:          equ    0                                         ; PWM Channel Delay Bit 0
MCCC3_CD1:          equ    1                                         ; PWM Channel Delay Bit 1
MCCC3_MCAM0:        equ    4                                         ; PWM Channel Alignment Mode Bit 0
MCCC3_MCAM1:        equ    5                                         ; PWM Channel Alignment Mode Bit 1
MCCC3_MCOM0:        equ    6                                         ; Output Mode Bit 0
MCCC3_MCOM1:        equ    7                                         ; Output Mode Bit 1
; bit position masks
mMCCC3_CD0:         equ    %00000001
mMCCC3_CD1:         equ    %00000010
mMCCC3_MCAM0:       equ    %00010000
mMCCC3_MCAM1:       equ    %00100000
mMCCC3_MCOM0:       equ    %01000000
mMCCC3_MCOM1:       equ    %10000000


;*** MCDC0 - Motor Controller Period Register 0; 0x00000A60 ***
MCDC0:              equ    $00000A60                                ;*** MCDC0 - Motor Controller Period Register 0; 0x00000A60 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC0_D0:           equ    0                                         ; Motor Controller Duty Cycle, bit 0
MCDC0_D1:           equ    1                                         ; Motor Controller Duty Cycle, bit 1
MCDC0_D2:           equ    2                                         ; Motor Controller Duty Cycle, bit 2
MCDC0_D3:           equ    3                                         ; Motor Controller Duty Cycle, bit 3
MCDC0_D4:           equ    4                                         ; Motor Controller Duty Cycle, bit 4
MCDC0_D5:           equ    5                                         ; Motor Controller Duty Cycle, bit 5
MCDC0_D6:           equ    6                                         ; Motor Controller Duty Cycle, bit 6
MCDC0_D7:           equ    7                                         ; Motor Controller Duty Cycle, bit 7
MCDC0_D8:           equ    8                                         ; Motor Controller Duty Cycle, bit 8
MCDC0_D9:           equ    9                                         ; Motor Controller Duty Cycle, bit 9
MCDC0_D10:          equ    10                                        ; Motor Controller Duty Cycle, bit 10
MCDC0_S:            equ    15                                        ; Sign
; bit position masks
mMCDC0_D0:          equ    %00000001
mMCDC0_D1:          equ    %00000010
mMCDC0_D2:          equ    %00000100
mMCDC0_D3:          equ    %00001000
mMCDC0_D4:          equ    %00010000
mMCDC0_D5:          equ    %00100000
mMCDC0_D6:          equ    %01000000
mMCDC0_D7:          equ    %10000000
mMCDC0_D8:          equ    %100000000
mMCDC0_D9:          equ    %1000000000
mMCDC0_D10:         equ    %10000000000
mMCDC0_S:           equ    %1000000000000000


;*** MCDC0_FAST - Motor Controller Period Register 0 access with FAST bit = 1; 0x00000A60 ***
MCDC0_FAST:         equ    $00000A60                                ;*** MCDC0_FAST - Motor Controller Period Register 0 access with FAST bit = 1; 0x00000A60 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC0_FAST_D2:      equ    0                                         ; Motor Controller Duty Cycle, bit 2
MCDC0_FAST_D3:      equ    1                                         ; Motor Controller Duty Cycle, bit 3
MCDC0_FAST_D4:      equ    2                                         ; Motor Controller Duty Cycle, bit 4
MCDC0_FAST_D5:      equ    3                                         ; Motor Controller Duty Cycle, bit 5
MCDC0_FAST_D6:      equ    4                                         ; Motor Controller Duty Cycle, bit 6
MCDC0_FAST_D7:      equ    5                                         ; Motor Controller Duty Cycle, bit 7
MCDC0_FAST_D8:      equ    6                                         ; Motor Controller Duty Cycle, bit 8
MCDC0_FAST_S:       equ    7                                         ; Sign
; bit position masks
mMCDC0_FAST_D2:     equ    %00000001
mMCDC0_FAST_D3:     equ    %00000010
mMCDC0_FAST_D4:     equ    %00000100
mMCDC0_FAST_D5:     equ    %00001000
mMCDC0_FAST_D6:     equ    %00010000
mMCDC0_FAST_D7:     equ    %00100000
mMCDC0_FAST_D8:     equ    %01000000
mMCDC0_FAST_S:      equ    %10000000


;*** MCDC1 - Motor Controller Period Register 1; 0x00000A62 ***
MCDC1:              equ    $00000A62                                ;*** MCDC1 - Motor Controller Period Register 1; 0x00000A62 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC1_D0:           equ    0                                         ; Motor Controller Duty Cycle, bit 0
MCDC1_D1:           equ    1                                         ; Motor Controller Duty Cycle, bit 1
MCDC1_D2:           equ    2                                         ; Motor Controller Duty Cycle, bit 2
MCDC1_D3:           equ    3                                         ; Motor Controller Duty Cycle, bit 3
MCDC1_D4:           equ    4                                         ; Motor Controller Duty Cycle, bit 4
MCDC1_D5:           equ    5                                         ; Motor Controller Duty Cycle, bit 5
MCDC1_D6:           equ    6                                         ; Motor Controller Duty Cycle, bit 6
MCDC1_D7:           equ    7                                         ; Motor Controller Duty Cycle, bit 7
MCDC1_D8:           equ    8                                         ; Motor Controller Duty Cycle, bit 8
MCDC1_D9:           equ    9                                         ; Motor Controller Duty Cycle, bit 9
MCDC1_D10:          equ    10                                        ; Motor Controller Duty Cycle, bit 10
MCDC1_S:            equ    15                                        ; Sign
; bit position masks
mMCDC1_D0:          equ    %00000001
mMCDC1_D1:          equ    %00000010
mMCDC1_D2:          equ    %00000100
mMCDC1_D3:          equ    %00001000
mMCDC1_D4:          equ    %00010000
mMCDC1_D5:          equ    %00100000
mMCDC1_D6:          equ    %01000000
mMCDC1_D7:          equ    %10000000
mMCDC1_D8:          equ    %100000000
mMCDC1_D9:          equ    %1000000000
mMCDC1_D10:         equ    %10000000000
mMCDC1_S:           equ    %1000000000000000


;*** MCDC1_FAST - Motor Controller Period Register 1 access with FAST bit = 1; 0x00000A62 ***
MCDC1_FAST:         equ    $00000A62                                ;*** MCDC1_FAST - Motor Controller Period Register 1 access with FAST bit = 1; 0x00000A62 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC1_FAST_D2:      equ    0                                         ; Motor Controller Duty Cycle, bit 2
MCDC1_FAST_D3:      equ    1                                         ; Motor Controller Duty Cycle, bit 3
MCDC1_FAST_D4:      equ    2                                         ; Motor Controller Duty Cycle, bit 4
MCDC1_FAST_D5:      equ    3                                         ; Motor Controller Duty Cycle, bit 5
MCDC1_FAST_D6:      equ    4                                         ; Motor Controller Duty Cycle, bit 6
MCDC1_FAST_D7:      equ    5                                         ; Motor Controller Duty Cycle, bit 7
MCDC1_FAST_D8:      equ    6                                         ; Motor Controller Duty Cycle, bit 8
MCDC1_FAST_S:       equ    7                                         ; Sign
; bit position masks
mMCDC1_FAST_D2:     equ    %00000001
mMCDC1_FAST_D3:     equ    %00000010
mMCDC1_FAST_D4:     equ    %00000100
mMCDC1_FAST_D5:     equ    %00001000
mMCDC1_FAST_D6:     equ    %00010000
mMCDC1_FAST_D7:     equ    %00100000
mMCDC1_FAST_D8:     equ    %01000000
mMCDC1_FAST_S:      equ    %10000000


;*** MCDC2 - Motor Controller Period Register 2; 0x00000A64 ***
MCDC2:              equ    $00000A64                                ;*** MCDC2 - Motor Controller Period Register 2; 0x00000A64 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC2_D0:           equ    0                                         ; Motor Controller Duty Cycle, bit 0
MCDC2_D1:           equ    1                                         ; Motor Controller Duty Cycle, bit 1
MCDC2_D2:           equ    2                                         ; Motor Controller Duty Cycle, bit 2
MCDC2_D3:           equ    3                                         ; Motor Controller Duty Cycle, bit 3
MCDC2_D4:           equ    4                                         ; Motor Controller Duty Cycle, bit 4
MCDC2_D5:           equ    5                                         ; Motor Controller Duty Cycle, bit 5
MCDC2_D6:           equ    6                                         ; Motor Controller Duty Cycle, bit 6
MCDC2_D7:           equ    7                                         ; Motor Controller Duty Cycle, bit 7
MCDC2_D8:           equ    8                                         ; Motor Controller Duty Cycle, bit 8
MCDC2_D9:           equ    9                                         ; Motor Controller Duty Cycle, bit 9
MCDC2_D10:          equ    10                                        ; Motor Controller Duty Cycle, bit 10
MCDC2_S:            equ    15                                        ; Sign
; bit position masks
mMCDC2_D0:          equ    %00000001
mMCDC2_D1:          equ    %00000010
mMCDC2_D2:          equ    %00000100
mMCDC2_D3:          equ    %00001000
mMCDC2_D4:          equ    %00010000
mMCDC2_D5:          equ    %00100000
mMCDC2_D6:          equ    %01000000
mMCDC2_D7:          equ    %10000000
mMCDC2_D8:          equ    %100000000
mMCDC2_D9:          equ    %1000000000
mMCDC2_D10:         equ    %10000000000
mMCDC2_S:           equ    %1000000000000000


;*** MCDC2_FAST - Motor Controller Period Register 2 access with FAST bit = 1; 0x00000A64 ***
MCDC2_FAST:         equ    $00000A64                                ;*** MCDC2_FAST - Motor Controller Period Register 2 access with FAST bit = 1; 0x00000A64 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC2_FAST_D2:      equ    0                                         ; Motor Controller Duty Cycle, bit 2
MCDC2_FAST_D3:      equ    1                                         ; Motor Controller Duty Cycle, bit 3
MCDC2_FAST_D4:      equ    2                                         ; Motor Controller Duty Cycle, bit 4
MCDC2_FAST_D5:      equ    3                                         ; Motor Controller Duty Cycle, bit 5
MCDC2_FAST_D6:      equ    4                                         ; Motor Controller Duty Cycle, bit 6
MCDC2_FAST_D7:      equ    5                                         ; Motor Controller Duty Cycle, bit 7
MCDC2_FAST_D8:      equ    6                                         ; Motor Controller Duty Cycle, bit 8
MCDC2_FAST_S:       equ    7                                         ; Sign
; bit position masks
mMCDC2_FAST_D2:     equ    %00000001
mMCDC2_FAST_D3:     equ    %00000010
mMCDC2_FAST_D4:     equ    %00000100
mMCDC2_FAST_D5:     equ    %00001000
mMCDC2_FAST_D6:     equ    %00010000
mMCDC2_FAST_D7:     equ    %00100000
mMCDC2_FAST_D8:     equ    %01000000
mMCDC2_FAST_S:      equ    %10000000


;*** MCDC3 - Motor Controller Period Register 3; 0x00000A66 ***
MCDC3:              equ    $00000A66                                ;*** MCDC3 - Motor Controller Period Register 3; 0x00000A66 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC3_D0:           equ    0                                         ; Motor Controller Duty Cycle, bit 0
MCDC3_D1:           equ    1                                         ; Motor Controller Duty Cycle, bit 1
MCDC3_D2:           equ    2                                         ; Motor Controller Duty Cycle, bit 2
MCDC3_D3:           equ    3                                         ; Motor Controller Duty Cycle, bit 3
MCDC3_D4:           equ    4                                         ; Motor Controller Duty Cycle, bit 4
MCDC3_D5:           equ    5                                         ; Motor Controller Duty Cycle, bit 5
MCDC3_D6:           equ    6                                         ; Motor Controller Duty Cycle, bit 6
MCDC3_D7:           equ    7                                         ; Motor Controller Duty Cycle, bit 7
MCDC3_D8:           equ    8                                         ; Motor Controller Duty Cycle, bit 8
MCDC3_D9:           equ    9                                         ; Motor Controller Duty Cycle, bit 9
MCDC3_D10:          equ    10                                        ; Motor Controller Duty Cycle, bit 10
MCDC3_S:            equ    15                                        ; Sign
; bit position masks
mMCDC3_D0:          equ    %00000001
mMCDC3_D1:          equ    %00000010
mMCDC3_D2:          equ    %00000100
mMCDC3_D3:          equ    %00001000
mMCDC3_D4:          equ    %00010000
mMCDC3_D5:          equ    %00100000
mMCDC3_D6:          equ    %01000000
mMCDC3_D7:          equ    %10000000
mMCDC3_D8:          equ    %100000000
mMCDC3_D9:          equ    %1000000000
mMCDC3_D10:         equ    %10000000000
mMCDC3_S:           equ    %1000000000000000


;*** MCDC3_FAST - Motor Controller Period Register 3 access with FAST bit = 1; 0x00000A66 ***
MCDC3_FAST:         equ    $00000A66                                ;*** MCDC3_FAST - Motor Controller Period Register 3 access with FAST bit = 1; 0x00000A66 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MCDC3_FAST_D2:      equ    0                                         ; Motor Controller Duty Cycle, bit 2
MCDC3_FAST_D3:      equ    1                                         ; Motor Controller Duty Cycle, bit 3
MCDC3_FAST_D4:      equ    2                                         ; Motor Controller Duty Cycle, bit 4
MCDC3_FAST_D5:      equ    3                                         ; Motor Controller Duty Cycle, bit 5
MCDC3_FAST_D6:      equ    4                                         ; Motor Controller Duty Cycle, bit 6
MCDC3_FAST_D7:      equ    5                                         ; Motor Controller Duty Cycle, bit 7
MCDC3_FAST_D8:      equ    6                                         ; Motor Controller Duty Cycle, bit 8
MCDC3_FAST_S:       equ    7                                         ; Sign
; bit position masks
mMCDC3_FAST_D2:     equ    %00000001
mMCDC3_FAST_D3:     equ    %00000010
mMCDC3_FAST_D4:     equ    %00000100
mMCDC3_FAST_D5:     equ    %00001000
mMCDC3_FAST_D6:     equ    %00010000
mMCDC3_FAST_D7:     equ    %00100000
mMCDC3_FAST_D8:     equ    %01000000
mMCDC3_FAST_S:      equ    %10000000


;*** RTZ0CTL - SSD0 Return-to-Zero Control Register; 0x00000A80 ***
RTZ0CTL:            equ    $00000A80                                ;*** RTZ0CTL - SSD0 Return-to-Zero Control Register; 0x00000A80 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTZ0CTL_STEP:       equ    0                                         ; Full Step State
RTZ0CTL_POL:        equ    4                                         ; Polarity
RTZ0CTL_RCIR:       equ    5                                         ; Recirculation in Blanking Mode
RTZ0CTL_DCOIL:      equ    6                                         ; Drive Coil
RTZ0CTL_ITG:        equ    7                                         ; Integration
; bit position masks
mRTZ0CTL_STEP:      equ    %00000011
mRTZ0CTL_POL:       equ    %00010000
mRTZ0CTL_RCIR:      equ    %00100000
mRTZ0CTL_DCOIL:     equ    %01000000
mRTZ0CTL_ITG:       equ    %10000000


;*** MDC0CTL - SSD0 Modulus Down Counter Control Register; 0x00000A81 ***
MDC0CTL:            equ    $00000A81                                ;*** MDC0CTL - SSD0 Modulus Down Counter Control Register; 0x00000A81 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MDC0CTL_AOVIE:      equ    0                                         ; Accumulator Overflow Interrupt Enable
MDC0CTL_MCEN:       equ    2                                         ; Modulus Down-Counter Enable
MDC0CTL_FLMC:       equ    3                                         ; Force Load Register into the Modulus Counter Count Register
MDC0CTL_PRE:        equ    4                                         ; Prescaler
MDC0CTL_RDMCL:      equ    5                                         ; Read Modulus Down-Counter Load
MDC0CTL_MODMC:      equ    6                                         ; Modulus Mode Enable
MDC0CTL_MCZIE:      equ    7                                         ; Modulus Counter Underflow Interrupt Enable
; bit position masks
mMDC0CTL_AOVIE:     equ    %00000001
mMDC0CTL_MCEN:      equ    %00000100
mMDC0CTL_FLMC:      equ    %00001000
mMDC0CTL_PRE:       equ    %00010000
mMDC0CTL_RDMCL:     equ    %00100000
mMDC0CTL_MODMC:     equ    %01000000
mMDC0CTL_MCZIE:     equ    %10000000


;*** SSD0CTL - SSD0 Stepper Stall Detector Control Register; 0x00000A82 ***
SSD0CTL:            equ    $00000A82                                ;*** SSD0CTL - SSD0 Stepper Stall Detector Control Register; 0x00000A82 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSD0CTL_ACLKS:      equ    0                                         ; Accumulator Sample Frequency Select
SSD0CTL_FTST:       equ    4                                         ; Factory Test
SSD0CTL_SSDWAI:     equ    5                                         ; SSD Disabled during Wait Mode
SSD0CTL_SDCPU:      equ    6                                         ; Sigma-Delta Converter Power Up
SSD0CTL_RTZE:       equ    7                                         ; Return to Zero Enable
; bit position masks
mSSD0CTL_ACLKS:     equ    %00000011
mSSD0CTL_FTST:      equ    %00010000
mSSD0CTL_SSDWAI:    equ    %00100000
mSSD0CTL_SDCPU:     equ    %01000000
mSSD0CTL_RTZE:      equ    %10000000


;*** SSD0FLG - SSD0 Stepper Stall Detector Flag Register; 0x00000A83 ***
SSD0FLG:            equ    $00000A83                                ;*** SSD0FLG - SSD0 Stepper Stall Detector Flag Register; 0x00000A83 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSD0FLG_AOVIF:      equ    0                                         ; Accumulator Overflow Interrupt Flag
SSD0FLG_MCZIF:      equ    7                                         ; Modulus Counter Underflow Interrupt Flag
; bit position masks
mSSD0FLG_AOVIF:     equ    %00000001
mSSD0FLG_MCZIF:     equ    %10000000


;*** MDC0CNT - SSD0 Modulus Down-Counter Count Register; 0x00000A84 ***
MDC0CNT:            equ    $00000A84                                ;*** MDC0CNT - SSD0 Modulus Down-Counter Count Register; 0x00000A84 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MDC0CNT_MDCCNT:     equ    0                                         ; Modulus Down Counter
; bit position masks
mMDC0CNT_MDCCNT:    equ    %1111111111111111


;*** ITG0ACC - SSD0 Integration Accumulator Register; 0x00000A86 ***
ITG0ACC:            equ    $00000A86                                ;*** ITG0ACC - SSD0 Integration Accumulator Register; 0x00000A86 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ITG0ACC_ITGACC:     equ    0                                         ; Integration Accumulator
; bit position masks
mITG0ACC_ITGACC:    equ    %1111111111111111


;*** RTZ1CTL - SSD1 Return-to-Zero Control Register; 0x00000A90 ***
RTZ1CTL:            equ    $00000A90                                ;*** RTZ1CTL - SSD1 Return-to-Zero Control Register; 0x00000A90 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTZ1CTL_STEP:       equ    0                                         ; Full Step State
RTZ1CTL_POL:        equ    4                                         ; Polarity
RTZ1CTL_RCIR:       equ    5                                         ; Recirculation in Blanking Mode
RTZ1CTL_DCOIL:      equ    6                                         ; Drive Coil
RTZ1CTL_ITG:        equ    7                                         ; Integration
; bit position masks
mRTZ1CTL_STEP:      equ    %00000011
mRTZ1CTL_POL:       equ    %00010000
mRTZ1CTL_RCIR:      equ    %00100000
mRTZ1CTL_DCOIL:     equ    %01000000
mRTZ1CTL_ITG:       equ    %10000000


;*** MDC1CTL - SSD1 Modulus Down Counter Control Register; 0x00000A91 ***
MDC1CTL:            equ    $00000A91                                ;*** MDC1CTL - SSD1 Modulus Down Counter Control Register; 0x00000A91 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MDC1CTL_AOVIE:      equ    0                                         ; Accumulator Overflow Interrupt Enable
MDC1CTL_MCEN:       equ    2                                         ; Modulus Down-Counter Enable
MDC1CTL_FLMC:       equ    3                                         ; Force Load Register into the Modulus Counter Count Register
MDC1CTL_PRE:        equ    4                                         ; Prescaler
MDC1CTL_RDMCL:      equ    5                                         ; Read Modulus Down-Counter Load
MDC1CTL_MODMC:      equ    6                                         ; Modulus Mode Enable
MDC1CTL_MCZIE:      equ    7                                         ; Modulus Counter Underflow Interrupt Enable
; bit position masks
mMDC1CTL_AOVIE:     equ    %00000001
mMDC1CTL_MCEN:      equ    %00000100
mMDC1CTL_FLMC:      equ    %00001000
mMDC1CTL_PRE:       equ    %00010000
mMDC1CTL_RDMCL:     equ    %00100000
mMDC1CTL_MODMC:     equ    %01000000
mMDC1CTL_MCZIE:     equ    %10000000


;*** SSD1CTL - SSD1 Stepper Stall Detector Control Register; 0x00000A92 ***
SSD1CTL:            equ    $00000A92                                ;*** SSD1CTL - SSD1 Stepper Stall Detector Control Register; 0x00000A92 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSD1CTL_ACLKS:      equ    0                                         ; Accumulator Sample Frequency Select
SSD1CTL_FTST:       equ    4                                         ; Factory Test
SSD1CTL_SSDWAI:     equ    5                                         ; SSD Disabled during Wait Mode
SSD1CTL_SDCPU:      equ    6                                         ; Sigma-Delta Converter Power Up
SSD1CTL_RTZE:       equ    7                                         ; Return to Zero Enable
; bit position masks
mSSD1CTL_ACLKS:     equ    %00000011
mSSD1CTL_FTST:      equ    %00010000
mSSD1CTL_SSDWAI:    equ    %00100000
mSSD1CTL_SDCPU:     equ    %01000000
mSSD1CTL_RTZE:      equ    %10000000


;*** SSD1FLG - SSD1 Stepper Stall Detector Flag Register; 0x00000A93 ***
SSD1FLG:            equ    $00000A93                                ;*** SSD1FLG - SSD1 Stepper Stall Detector Flag Register; 0x00000A93 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSD1FLG_AOVIF:      equ    0                                         ; Accumulator Overflow Interrupt Flag
SSD1FLG_MCZIF:      equ    7                                         ; Modulus Counter Underflow Interrupt Flag
; bit position masks
mSSD1FLG_AOVIF:     equ    %00000001
mSSD1FLG_MCZIF:     equ    %10000000


;*** MDC1CNT - SSD1 Modulus Down-Counter Count Register; 0x00000A94 ***
MDC1CNT:            equ    $00000A94                                ;*** MDC1CNT - SSD1 Modulus Down-Counter Count Register; 0x00000A94 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
MDC1CNT_MDCCNT:     equ    0                                         ; Modulus Down Counter
; bit position masks
mMDC1CNT_MDCCNT:    equ    %1111111111111111


;*** ITG1ACC - SSD1 Integration Accumulator Register; 0x00000A96 ***
ITG1ACC:            equ    $00000A96                                ;*** ITG1ACC - SSD1 Integration Accumulator Register; 0x00000A96 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
ITG1ACC_ITGACC:     equ    0                                         ; Integration Accumulator
; bit position masks
mITG1ACC_ITGACC:    equ    %1111111111111111


;*** RTCCTL1 - RTC Control Register 1; 0x00000AE0 ***
RTCCTL1:            equ    $00000AE0                                ;*** RTCCTL1 - RTC Control Register 1; 0x00000AE0 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCCTL1_COMPE:      equ    1                                         ; RTC Compensation Enable
RTCCTL1_RTCEN:      equ    7                                         ; RTC Enable
; bit position masks
mRTCCTL1_COMPE:     equ    %00000010
mRTCCTL1_RTCEN:     equ    %10000000


;*** RTCCTL2 - RTC Control Register 2; 0x00000AE1 ***
RTCCTL2:            equ    $00000AE1                                ;*** RTCCTL2 - RTC Control Register 2; 0x00000AE1 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCCTL2_RTCPS:      equ    0                                         ; RTC main OSC prescaler Bits
RTCCTL2_CLKSRC:     equ    6                                         ; RTC Clock Source Selection Bits
; bit position masks
mRTCCTL2_RTCPS:     equ    %00001111
mRTCCTL2_CLKSRC:    equ    %11000000


;*** RTCCTL3 - RTC Control Register 3; 0x00000AE2 ***
RTCCTL3:            equ    $00000AE2                                ;*** RTCCTL3 - RTC Control Register 3; 0x00000AE2 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCCTL3_CALS:       equ    1                                         ; RTC Calibration Clock Selection
RTCCTL3_FRZ:        equ    3                                         ; RTC Stop in Freeze Mode
RTCCTL3_RTCWE:      equ    6                                         ; RTC Module Write Enable Bits
; bit position masks
mRTCCTL3_CALS:      equ    %00000010
mRTCCTL3_FRZ:       equ    %00001000
mRTCCTL3_RTCWE:     equ    %11000000


;*** RTCCTL4 - RTC Control Register 4; 0x00000AE3 ***
RTCCTL4:            equ    $00000AE3                                ;*** RTCCTL4 - RTC Control Register 4; 0x00000AE3 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCCTL4_TB0IE:      equ    0                                         ; 4 HZ Time Tick interrupt Enable
RTCCTL4_COMPIE:     equ    2                                         ; Compensation cycle Interrupt Enable
RTCCTL4_SECIE:      equ    3                                         ; Second Interrupt Enable
RTCCTL4_MINIE:      equ    4                                         ; Minute Interrupt Enable
RTCCTL4_HRIE:       equ    5                                         ; Hour Interrupt Enable
; bit position masks
mRTCCTL4_TB0IE:     equ    %00000001
mRTCCTL4_COMPIE:    equ    %00000100
mRTCCTL4_SECIE:     equ    %00001000
mRTCCTL4_MINIE:     equ    %00010000
mRTCCTL4_HRIE:      equ    %00100000


;*** RTCS1 - RTC Status Register 1; 0x00000AE4 ***
RTCS1:              equ    $00000AE4                                ;*** RTCS1 - RTC Status Register 1; 0x00000AE4 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCS1_TB0F:         equ    0                                         ; 4 Hz time tick interrupt flag
RTCS1_COMPF:        equ    2                                         ; Compensation cycle interrupt flag
RTCS1_SECF:         equ    3                                         ; Second interrupt flag
RTCS1_MINF:         equ    4                                         ; Minute interrupt flag
RTCS1_HRF:          equ    5                                         ; Hour interrupt flag
RTCS1_CDLC:         equ    7                                         ; Compensation Data Load Cycle
; bit position masks
mRTCS1_TB0F:        equ    %00000001
mRTCS1_COMPF:       equ    %00000100
mRTCS1_SECF:        equ    %00001000
mRTCS1_MINF:        equ    %00010000
mRTCS1_HRF:         equ    %00100000
mRTCS1_CDLC:        equ    %10000000


;*** RTCCCR - RTC Compensation Configure Register; 0x00000AE5 ***
RTCCCR:             equ    $00000AE5                                ;*** RTCCCR - RTC Compensation Configure Register; 0x00000AE5 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCCCR_Q:           equ    0                                         ; Q value Bits
RTCCCR_CCS:         equ    6                                         ; Compensation cycle selection Bits
; bit position masks
mRTCCCR_Q:          equ    %00111111
mRTCCCR_CCS:        equ    %11000000


;*** RTCMOD - RTC Modulo Register; 0x00000AE6 ***
RTCMOD:             equ    $00000AE6                                ;*** RTCMOD - RTC Modulo Register; 0x00000AE6 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCMOD_RTCMODL:     equ    0                                         ; RTC Modulo Bits
RTCMOD_RTCMODH:     equ    8                                         ; RTC Modulo Bit8
; bit position masks
mRTCMOD_RTCMODL:    equ    %11111111
mRTCMOD_RTCMODH:    equ    %1111111100000000


;*** RTCMODH - RTC Modulo High Register; 0x00000AE6 ***
RTCMODH:            equ    $00000AE6                                ;*** RTCMODH - RTC Modulo High Register; 0x00000AE6 ***


;*** RTCMODL - RTC Modulo Low Register; 0x00000AE7 ***
RTCMODL:            equ    $00000AE7                                ;*** RTCMODL - RTC Modulo Low Register; 0x00000AE7 ***


;*** RTCCNT - RTC Counter Register; 0x00000AE8 ***
RTCCNT:             equ    $00000AE8                                ;*** RTCCNT - RTC Counter Register; 0x00000AE8 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCCNT_RTCCNTL:     equ    0                                         ; RTC Count Bits
RTCCNT_RTCCNTH:     equ    8                                         ; RTC Count Bit8
; bit position masks
mRTCCNT_RTCCNTL:    equ    %11111111
mRTCCNT_RTCCNTH:    equ    %1111111100000000


;*** RTCCNTH - RTC Counter Register High; 0x00000AE8 ***
RTCCNTH:            equ    $00000AE8                                ;*** RTCCNTH - RTC Counter Register High; 0x00000AE8 ***


;*** RTCCNTL - RTC Counter Register Low; 0x00000AE9 ***
RTCCNTL:            equ    $00000AE9                                ;*** RTCCNTL - RTC Counter Register Low; 0x00000AE9 ***


;*** RTCSECR - Second Register; 0x00000AED ***
RTCSECR:            equ    $00000AED                                ;*** RTCSECR - Second Register; 0x00000AED ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCSECR_SEC:        equ    0                                         ; Second Counter Value Bits
; bit position masks
mRTCSECR_SEC:       equ    %00111111


;*** RTCMINR - Minute Register; 0x00000AEE ***
RTCMINR:            equ    $00000AEE                                ;*** RTCMINR - Minute Register; 0x00000AEE ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCMINR_MIN:        equ    0                                         ; MInute Counter Value Bits
; bit position masks
mRTCMINR_MIN:       equ    %00111111


;*** RTCHRR - Hour Register; 0x00000AEF ***
RTCHRR:             equ    $00000AEF                                ;*** RTCHRR - Hour Register; 0x00000AEF ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
RTCHRR_HR:          equ    0                                         ; Hour Counter Value Bits
; bit position masks
mRTCHRR_HR:         equ    %00011111


;*** SSG0CR - SSG Control Register; 0x00000B00 ***
SSG0CR:             equ    $00000B00                                ;*** SSG0CR - SSG Control Register; 0x00000B00 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0CR_STP:         equ    0                                         ; SSG STOP
SSG0CR_RDR:         equ    1                                         ; SSG Register Data Ready
SSG0CR_OMS:         equ    2                                         ; SSG Output Mode Selection
SSG0CR_SSGE:        equ    7                                         ; SSG Enable
; bit position masks
mSSG0CR_STP:        equ    %00000001
mSSG0CR_RDR:        equ    %00000010
mSSG0CR_OMS:        equ    %00000100
mSSG0CR_SSGE:       equ    %10000000


;*** SSG0ADC - SSG attack/decay control register; 0x00000B01 ***
SSG0ADC:            equ    $00000B01                                ;*** SSG0ADC - SSG attack/decay control register; 0x00000B01 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0ADC_ADS:        equ    0                                         ; SSG Decay or attack Selection
SSG0ADC_ADM:        equ    1                                         ; SSG Linear, Gong or Exponential attack/decay Selection
SSG0ADC_ADE:        equ    7                                         ; SSG attack/decay enable
; bit position masks
mSSG0ADC_ADS:       equ    %00000001
mSSG0ADC_ADM:       equ    %00000110
mSSG0ADC_ADE:       equ    %10000000


;*** SSG0PS - SSG Clock Prescaler Register; 0x00000B02 ***
SSG0PS:             equ    $00000B02                                ;*** SSG0PS - SSG Clock Prescaler Register; 0x00000B02 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0PS_PS:          equ    0                                         ; SSG Clock Prescaler Register Bits
; bit position masks
mSSG0PS_PS:         equ    %11111111111


;*** SSG0TONE - SSG Tone Register; 0x00000B04 ***
SSG0TONE:           equ    $00000B04                                ;*** SSG0TONE - SSG Tone Register; 0x00000B04 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0TONE_TONE:      equ    0                                         ; SSG Tone Register Bits
; bit position masks
mSSG0TONE_TONE:     equ    %1111111111


;*** SSG0AMP - SSG Amplitude Register; 0x00000B06 ***
SSG0AMP:            equ    $00000B06                                ;*** SSG0AMP - SSG Amplitude Register; 0x00000B06 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0AMP_AMP:        equ    0                                         ; SSG Amplitude Register Bits
; bit position masks
mSSG0AMP_AMP:       equ    %11111111111


;*** SSG0AA - SSG Amplitude Adjustment; 0x00000B08 ***
SSG0AA:             equ    $00000B08                                ;*** SSG0AA - SSG Amplitude Adjustment; 0x00000B08 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0AA_AA:          equ    0                                         ; SSG Amplitude Adjustment Register Bits
; bit position masks
mSSG0AA_AA:         equ    %11111111111


;*** SSG0AT - SSG Amplitude Threshold Register; 0x00000B0A ***
SSG0AT:             equ    $00000B0A                                ;*** SSG0AT - SSG Amplitude Threshold Register; 0x00000B0A ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0AT_AT:          equ    0                                         ; SSG Amplitude Threshold Register Bits
; bit position masks
mSSG0AT_AT:         equ    %11111111111


;*** SSG0DUR - SSG Tone Duration register; 0x00000B0C ***
SSG0DUR:            equ    $00000B0C                                ;*** SSG0DUR - SSG Tone Duration register; 0x00000B0C ***


;*** SSG0IE - SSG Interrupt Enable; 0x00000B0D ***
SSG0IE:             equ    $00000B0D                                ;*** SSG0IE - SSG Interrupt Enable; 0x00000B0D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0IE_RNDIE:       equ    0                                         ; SSG Ready for Next Sound Data Interrupt Enable
; bit position masks
mSSG0IE_RNDIE:      equ    %00000001


;*** SSG0IF - SSG Interrupt Flag Registers; 0x00000B0E ***
SSG0IF:             equ    $00000B0E                                ;*** SSG0IF - SSG Interrupt Flag Registers; 0x00000B0E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0IF_RNDI:        equ    0                                         ; SSG Ready for Next Sound Data Interrupt
; bit position masks
mSSG0IF_RNDI:       equ    %00000001


;*** SSG0AMPB - Buffer Register of SSGAMP; 0x00000B10 ***
SSG0AMPB:           equ    $00000B10                                ;*** SSG0AMPB - Buffer Register of SSGAMP; 0x00000B10 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
SSG0AMPB_AMPB:      equ    0                                         ; SSGAMPB Bits
; bit position masks
mSSG0AMPB_AMPB:     equ    %11111111111


;*** SSG0DCNT - SSG Tone Duration Counter; 0x00000B12 ***
SSG0DCNT:           equ    $00000B12                                ;*** SSG0DCNT - SSG Tone Duration Counter; 0x00000B12 ***


;*** BAKEY0 - Backdoor Comparison Key 0; 0x00FFFE00 ***
BAKEY0:             equ    $00FFFE00                                ;*** BAKEY0 - Backdoor Comparison Key 0; 0x00FFFE00 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BAKEY0_KEY:         equ    0                                         ; Backdoor Comparison Key Bits
; bit position masks
mBAKEY0_KEY:        equ    %1111111111111111


;*** BAKEY1 - Backdoor Comparison Key 1; 0x00FFFE02 ***
BAKEY1:             equ    $00FFFE02                                ;*** BAKEY1 - Backdoor Comparison Key 1; 0x00FFFE02 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BAKEY1_KEY:         equ    0                                         ; Backdoor Comparison Key Bits
; bit position masks
mBAKEY1_KEY:        equ    %1111111111111111


;*** BAKEY2 - Backdoor Comparison Key 2; 0x00FFFE04 ***
BAKEY2:             equ    $00FFFE04                                ;*** BAKEY2 - Backdoor Comparison Key 2; 0x00FFFE04 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BAKEY2_KEY:         equ    0                                         ; Backdoor Comparison Key Bits
; bit position masks
mBAKEY2_KEY:        equ    %1111111111111111


;*** BAKEY3 - Backdoor Comparison Key 3; 0x00FFFE06 ***
BAKEY3:             equ    $00FFFE06                                ;*** BAKEY3 - Backdoor Comparison Key 3; 0x00FFFE06 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
BAKEY3_KEY:         equ    0                                         ; Backdoor Comparison Key Bits
; bit position masks
mBAKEY3_KEY:        equ    %1111111111111111


;*** PROTKEY - Non Volatile Protection Override Comparison Key; 0x00FFFE08 ***
PROTKEY:            equ    $00FFFE08                                ;*** PROTKEY - Non Volatile Protection Override Comparison Key; 0x00FFFE08 ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
PROTKEY_KEY:        equ    0                                         ; Protection Override Comparison Key Bits
; bit position masks
mPROTKEY_KEY:       equ    %1111111111111111


;*** NVFPROT - Non Volatile P-Flash Protection Register; 0x00FFFE0C ***
NVFPROT:            equ    $00FFFE0C                                ;*** NVFPROT - Non Volatile P-Flash Protection Register; 0x00FFFE0C ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
NVFPROT_FPLS0:      equ    0                                         ; Flash Protection Lower Address Size Bit 0
NVFPROT_FPLS1:      equ    1                                         ; Flash Protection Lower Address Size Bit 1
NVFPROT_FPLDIS:     equ    2                                         ; Flash Protection Lower Address Range Disable
NVFPROT_FPHS0:      equ    3                                         ; Flash Protection Higher Address Size Bit 0
NVFPROT_FPHS1:      equ    4                                         ; Flash Protection Higher Address Size Bit 1
NVFPROT_FPHDIS:     equ    5                                         ; Flash Protection Higher Address Range Disable
NVFPROT_RNV6:       equ    6                                         ; Reserved Nonvolatile Bit
NVFPROT_FPOPEN:     equ    7                                         ; Flash Protection Operation Enable
; bit position masks
mNVFPROT_FPLS0:     equ    %00000001
mNVFPROT_FPLS1:     equ    %00000010
mNVFPROT_FPLDIS:    equ    %00000100
mNVFPROT_FPHS0:     equ    %00001000
mNVFPROT_FPHS1:     equ    %00010000
mNVFPROT_FPHDIS:    equ    %00100000
mNVFPROT_RNV6:      equ    %01000000
mNVFPROT_FPOPEN:    equ    %10000000


;*** NVDFPROT - Non Volatile D-Flash Protection Register; 0x00FFFE0D ***
NVDFPROT:           equ    $00FFFE0D                                ;*** NVDFPROT - Non Volatile D-Flash Protection Register; 0x00FFFE0D ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
NVDFPROT_DPS0:      equ    0                                         ; D-Flash Protection Size Bit 0
NVDFPROT_DPS1:      equ    1                                         ; D-Flash Protection Size Bit 1
NVDFPROT_DPS2:      equ    2                                         ; D-Flash Protection Size Bit 2
NVDFPROT_DPS3:      equ    3                                         ; D-Flash Protection Size Bit 3
NVDFPROT_DPS4:      equ    4                                         ; D-Flash Protection Size Bit 4
NVDFPROT_DPS5:      equ    5                                         ; D-Flash Protection Size Bit 5
NVDFPROT_DPOPEN:    equ    7                                         ; D-Flash Protection Control
; bit position masks
mNVDFPROT_DPS0:     equ    %00000001
mNVDFPROT_DPS1:     equ    %00000010
mNVDFPROT_DPS2:     equ    %00000100
mNVDFPROT_DPS3:     equ    %00001000
mNVDFPROT_DPS4:     equ    %00010000
mNVDFPROT_DPS5:     equ    %00100000
mNVDFPROT_DPOPEN:   equ    %10000000


;*** NVFOPT - Non Volatile Flash Option Register; 0x00FFFE0E ***
NVFOPT:             equ    $00FFFE0E                                ;*** NVFOPT - Non Volatile Flash Option Register; 0x00FFFE0E ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
NVFOPT_NV0:         equ    0                                         ; Nonvolatile Bit 0
NVFOPT_NV1:         equ    1                                         ; Nonvolatile Bit 1
NVFOPT_NV2:         equ    2                                         ; Nonvolatile Bit 2
NVFOPT_NV3:         equ    3                                         ; Nonvolatile Bit 3
NVFOPT_NV4:         equ    4                                         ; Nonvolatile Bit 4
NVFOPT_NV5:         equ    5                                         ; Nonvolatile Bit 5
NVFOPT_NV6:         equ    6                                         ; Nonvolatile Bit 6
NVFOPT_NV7:         equ    7                                         ; Nonvolatile Bit 7
; bit position masks
mNVFOPT_NV0:        equ    %00000001
mNVFOPT_NV1:        equ    %00000010
mNVFOPT_NV2:        equ    %00000100
mNVFOPT_NV3:        equ    %00001000
mNVFOPT_NV4:        equ    %00010000
mNVFOPT_NV5:        equ    %00100000
mNVFOPT_NV6:        equ    %01000000
mNVFOPT_NV7:        equ    %10000000


;*** NVFSEC - Non Volatile Flash Security Register; 0x00FFFE0F ***
NVFSEC:             equ    $00FFFE0F                                ;*** NVFSEC - Non Volatile Flash Security Register; 0x00FFFE0F ***
; bit numbers for usage in BCLR, BSET, BRCLR and BRSET
NVFSEC_SEC0:        equ    0                                         ; Flash Security Bit 0
NVFSEC_SEC1:        equ    1                                         ; Flash Security Bit 1
NVFSEC_RNV2:        equ    2                                         ; Reserved Nonvolatile Bit 2
NVFSEC_RNV3:        equ    3                                         ; Reserved Nonvolatile Bit 3
NVFSEC_RNV4:        equ    4                                         ; Reserved Nonvolatile Bit 4
NVFSEC_RNV5:        equ    5                                         ; Reserved Nonvolatile Bit 5
NVFSEC_KEYEN0:      equ    6                                         ; Backdoor Key Security Enable Bit 0
NVFSEC_KEYEN1:      equ    7                                         ; Backdoor Key Security Enable Bit 1
; bit position masks
mNVFSEC_SEC0:       equ    %00000001
mNVFSEC_SEC1:       equ    %00000010
mNVFSEC_RNV2:       equ    %00000100
mNVFSEC_RNV3:       equ    %00001000
mNVFSEC_RNV4:       equ    %00010000
mNVFSEC_RNV5:       equ    %00100000
mNVFSEC_KEYEN0:     equ    %01000000
mNVFSEC_KEYEN1:     equ    %10000000


;***  24-BIT ADDRESS REGISTERS
MMCPC:              equ    $00000085                                 ; Captured S12ZCPU Program Counter Low; 0x00000087
DBGAA:              equ    $00000115                                 ; Debug Comparator A Address Register Low; 0x00000117
DBGBA:              equ    $00000125                                 ; Debug Comparator B Address Register Low; 0x00000127
DBGCA:              equ    $00000135                                 ; Debug Comparator C Address Register Low; 0x00000137
DBGDA:              equ    $00000145                                 ; Debug Comparator D Address Register Low; 0x00000147
ECCDPTR:            equ    $000003C7                                 ; ECC Debug Point Register Low; 0x000003C9
ADC0CBP:            equ    $0000061D                                 ; ADC0 Command Base Pointer Register 0; 0x000003C9
ADC0RBP:            equ    $00000621                                 ; ADC0 Result Base Pointer Register 0; 0x000003C9


;***********************************************
;**   D E P R E C I A T E D   S Y M B O L S   **
;***********************************************
        IFNDEF  __GENERATE_APPLICATION__                            ; not supported for absolute assembler
                    XREF    This_symb_has_been_depreciated
        ENDIF

; EOF

		    
; variable/data section
MY_EXTENDED_RAM: SECTION
; Insert here your data definition. For demonstration, temp_byte is used.
temp_byte:  DS.B   1

; code section
MyCode:     SECTION
; this assembly routine is called by the C/C++ application
asm_main:
            MOV.B  #1,temp_byte   ; just some demonstration code
            NOP                   ; Insert here your own code

            RTS                   ; return to caller
