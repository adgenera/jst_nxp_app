/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : MC.h
**     Project     : motor_test
**     Processor   : MC9S12ZVHL32CLL
**     Component   : Init_MC
**     Version     : Component 01.038, Driver 01.03, CPU db: 3.00.000
**     Compiler    : CodeWarrior HCS12Z C Compiler
**     Date/Time   : 2024-07-15, 14:37, # CodeGen: 17
**     Abstract    :
**          This file implements the Motor Controller (MC) module initialization
**          according to the Peripheral Initialization Component settings, and defines
**          interrupt service routines prototypes.
**     Settings    :
**          Component name                                 : MC
**          Device                                         : MC
**          Settings                                       : 
**            Recirculation mode                           : Low side transistors
**            Fast mode                                    : no
**            Dither Feature Enable                        : no
**            Clock settings                               : 
**              Prescaler                                  : 8
**              Period counter                             : 1000
**              Period time                                : 250 us
**          Motors                                         : 1
**          Stop in wait mode                              : no
**          Interrupts                                     : 
**            Interrupt                                    : Vmctimovf
**            MC Interrupt overflow enable                 : Enabled
**            Priority interrupt                           : 1
**            ISR name                                     : MC_ISR
**          Initialization                                 : 
**            Call Init method                             : yes
**     Contents    :
**         Init - void MC_Init(void);
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file MC.h
** @version 01.03
** @brief
**          This file implements the Motor Controller (MC) module initialization
**          according to the Peripheral Initialization Component settings, and defines
**          interrupt service routines prototypes.
*/         
/*!
**  @addtogroup MC_module MC module documentation
**  @{
*/         

#ifndef __MC_H
#define __MC_H

/* MODULE MC. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited components */

#include "Cpu.h"




void MC_Init(void);
/*
** ===================================================================
**     Method      :  MC_Init (component Init_MC)
**     Description :
**         This method initializes registers of the MC module according
**         to this Peripheral Initialization Component settings. Call this
**         method in the user code to initialize the module. By default,
**         the method is called by PE automatically; see "Call Init
**         method" property of the component for more details.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/*
** ===================================================================
** The interrupt service routine must be implemented by user in one
** of the user modules (see MC.c file for more information).
** ===================================================================
*/
#pragma CODE_SEG __NEAR_SEG NON_BANKED
__interrupt void MC_ISR(void);
#pragma CODE_SEG DEFAULT
/* END MC. */

#endif
/* ifndef __MC_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale HCS12Z series of microcontrollers.
**
** ###################################################################
*/


